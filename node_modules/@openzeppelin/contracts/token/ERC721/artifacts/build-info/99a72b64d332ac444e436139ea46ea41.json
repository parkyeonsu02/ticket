{
	"id": "99a72b64d332ac444e436139ea46ea41",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_20:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_21:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_63\n    /* \"#utility.yul\":1885:1934   */\n  tag_64\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1869:1935   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_66\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2010:2122   */\ntag_65:\n    /* \"#utility.yul\":2131:2183   */\n  tag_67\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_20\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_22:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_70\n  tag_13\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2292:2414   */\ntag_69:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_71\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_74\n  tag_11\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2694:2813   */\ntag_73:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_76\n  tag_12\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2889:3006   */\ntag_75:\n    /* \"#utility.yul\":3030:3104   */\n  tag_77\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3191:3308   */\ntag_78:\n    /* \"#utility.yul\":3332:3406   */\n  tag_80\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_23:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_24:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_25:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_84:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_86\n  tag_24\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3950:4034   */\ntag_85:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_26:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_27:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_28:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_29:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_91\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4665:4704   */\n  tag_92\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_28\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_30:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_31:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_32:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_96\n    /* \"#utility.yul\":5054:5088   */\n  tag_97\n    /* \"#utility.yul\":5063:5087   */\n  tag_98\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5054:5088   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5036:5089   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_33:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_34:\n    /* \"#utility.yul\":5292:5331   */\n  tag_101\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5353:5444   */\n  tag_102\n    /* \"#utility.yul\":5402:5443   */\n  tag_103\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_29\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_35:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_36:\n    /* \"#utility.yul\":5613:5645   */\n  tag_106\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5654:5719   */\n  tag_107\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_37:\n    /* \"#utility.yul\":5791:5911   */\ntag_109:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_112\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_38:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_115\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_26\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6142:6171   */\n  tag_116\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_27\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_117:\n    /* \"#utility.yul\":6369:6449   */\n  tag_118\n    /* \"#utility.yul\":6425:6447   */\n  tag_119\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_37\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_114:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_39:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_40:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_122\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_41:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_124\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_7:\n    /* \"#utility.yul\":7186:7223   */\n  tag_126\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_23\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_128\n  tag_16\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7274:7330   */\ntag_127:\n    /* \"#utility.yul\":7354:7392   */\n  tag_129\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_25\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7439:7506   */\n  tag_130\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_38\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_133:\n    /* \"#utility.yul\":8380:8447   */\n  tag_134\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_41\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_131)\n    /* \"#utility.yul\":7601:8219   */\ntag_132:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_135\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_26\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_136:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_140\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_40\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_139:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_131:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1722:1747  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1718  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1778:1811  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1774  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1851:1862  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1850  super.supportsInterface */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4087:4094  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4064:4095  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3702:3707  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3698  _msgSender() */\n      tag_95\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3696  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3698  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3747  _msgSender() */\n      tag_99\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3745  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3747  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3727  isApprovedForAll */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_97:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4790:4802  _msgSender() */\n      tag_107\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4790:4800  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4790:4802  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4804:4811  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4789  _isApprovedOrOwner */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4862  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      tag_112\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4883:4887  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4891  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4893:4900  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4882  _transfer */\n      tag_113\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5094:5098  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5100:5102  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5104:5111  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5093  safeTransferFrom */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_115:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2281:2294  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2314  _ownerOf(tokenId) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2306:2313  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2305  _ownerOf */\n      tag_118\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2314  _ownerOf(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2281:2314  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2349:2350  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2337  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2397:2402  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2390:2402  return owner */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2045:2046  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2033  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2120:2125  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2103:2126  return _balances[owner] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_82\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4294  _msgSender() */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4292  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5338:5350  _msgSender() */\n      tag_138\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5338:5348  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5338:5350  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5359  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5337  _isApprovedOrOwner */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5311:5410  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5434:5438  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5440:5442  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5444:5451  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5453:5457  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5433  _safeTransfer */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2965  _baseURI */\n      tag_146\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      jump\t// in\n    tag_145:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4527:4532  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4534:4542  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4501:4543  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13321:13337  _exists(tokenId) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13329:13336  tokenId */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13321:13328  _exists */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13321:13337  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_121\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":708:715  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":727:744  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12673:12675  to */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12661  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12669  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12675  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12728:12735  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12724:12726  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12714:12721  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12713  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7497:7501  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7526  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7543  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7552  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7581:7586  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7577  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7607:7612  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7614:7621  spender */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7606  isApprovedForAll */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n    tag_165:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      tag_168\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7638:7645  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7637  getApproved */\n      tag_31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7658  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11381:11385  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11369:11376  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11368  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11346:11427  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11459:11460  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11447  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11555  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11534:11538  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11540:11542  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11544:11551  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11553:11554  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11533  _beforeTokenTransfer */\n      tag_178\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11555  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11682:11686  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11670:11677  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11669  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11728  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_173\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11812  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12284:12285  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12274  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12275:12279  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12285  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12316:12317  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12308  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12309:12311  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12356:12358  to */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12344  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12345:12352  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12358  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12393:12400  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12389:12391  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12383:12387  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12453  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_182\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12432:12436  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12438:12440  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12442:12449  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12451:12452  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12431  _afterTokenTransfer */\n      tag_183\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12453  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_182:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6702:6817  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6768:6775  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6802:6809  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6787:6810  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6702:6817  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12999:13007  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:12995  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13085:13093  approved */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13065  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13066:13071  owner */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13073:13081  operator */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13093  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13130:13138  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13123:13128  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13140:13148  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_142:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6448:6452  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6454:6456  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6458:6465  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6447  _transfer */\n      tag_113\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6507:6511  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6515  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6517:6524  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6526:6530  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6506  _checkOnERC721Received */\n      tag_193\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6476:6586  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3370:3383  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_199\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_200\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n    tag_201:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_205:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_207\n      jumpi\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n    tag_207:\n      div\n      swap5\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_205\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_206:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7120:7246  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7237:7238  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7225  _ownerOf(tokenId) */\n      tag_212\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7224  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7216  _ownerOf */\n      tag_118\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7225  _ownerOf(tokenId) */\n      jump\t// in\n    tag_212:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7201:7239  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7120:7246  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15472:15588  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16294:16409  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14074:14078  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14109  to.isContract() */\n      tag_216\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14096  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14107  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_217\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14109  to.isContract() */\n      jump\t// in\n    tag_216:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14145:14147  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14165  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14166:14178  _msgSender() */\n      tag_219\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14166:14176  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14166:14178  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14180:14184  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14186:14193  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14195:14199  data */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14384:14385  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14373  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14380  reason.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14385  reason.length == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14409:14469  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_196\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n    tag_231:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14642  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14630:14643  mload(reason) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14621:14627  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14617:14619  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14613:14628  add(32, reason) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14606:14644  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14260:14301  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14256  retval */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14243:14301  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_215)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n    tag_218:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14735:14739  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14728:14739  return true */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_215:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_237\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_238\n      jumpi\n      tag_239\n      tag_209\n      jump\t// in\n    tag_239:\n    tag_238:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_237:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_240\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_241\n      jumpi\n      tag_242\n      tag_209\n      jump\t// in\n    tag_242:\n    tag_241:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_240:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_243\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_244\n      jumpi\n      tag_245\n      tag_209\n      jump\t// in\n    tag_245:\n    tag_244:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_243:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_246\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_247\n      jumpi\n      tag_248\n      tag_209\n      jump\t// in\n    tag_248:\n    tag_247:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_246:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_249\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_250\n      jumpi\n      tag_251\n      tag_209\n      jump\t// in\n    tag_251:\n    tag_250:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_249:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_252\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_253\n      jumpi\n      tag_254\n      tag_209\n      jump\t// in\n    tag_254:\n    tag_253:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_252:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_255\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_255:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_217:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_257:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_258:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_259:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_260:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_261:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_260\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_262:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_261\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_258\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_262\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_263:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_264:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_264\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_265:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_266:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_267:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_268:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_269:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_338\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_265\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2222:2293   */\n      tag_339\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_266\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_340\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_267\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2392:2421   */\n      tag_341\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_268\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_27:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_343\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_269\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_270:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_271:\n        /* \"#utility.yul\":2909:2933   */\n      tag_346\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_270\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_347:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_272:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_349\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_271\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_30:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_352\n      tag_258\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3185:3304   */\n    tag_351:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_353\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_272\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_273:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_274:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_356\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_273\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_275:\n        /* \"#utility.yul\":3765:3789   */\n      tag_358\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_274\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_33:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_360\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_275\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_276:\n        /* \"#utility.yul\":4103:4127   */\n      tag_362\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_274\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_363:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_277:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_365\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_276\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_36:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      0x00\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_368\n      tag_258\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4396:4515   */\n    tag_367:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_369\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_277\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_370\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_272\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_40:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      0x00\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_373\n      tag_258\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4893:5012   */\n    tag_372:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_374\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_277\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_375\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_277\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_376\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_272\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_51:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_379\n      tag_258\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5484:5603   */\n    tag_378:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_380\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_277\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_278:\n        /* \"#utility.yul\":5830:5854   */\n      tag_382\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_270\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_54:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_384\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_278\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_279:\n        /* \"#utility.yul\":6165:6186   */\n      tag_386\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_263\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_387:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_280:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_389\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_279\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_60:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      0x00\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_392\n      tag_258\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6446:6565   */\n    tag_391:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_393\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_277\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_394\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_280\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_281:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_282:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_203:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_283:\n        /* \"#utility.yul\":7345:7372   */\n      tag_399\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_268\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_401\n      tag_203\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7418:7506   */\n    tag_400:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_284:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_403\n      tag_257\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_404\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_283\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_285:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_407\n      tag_203\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7821:7877   */\n    tag_406:\n        /* \"#utility.yul\":7895:7924   */\n      tag_408\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_268\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_286:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_287:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_411\n        /* \"#utility.yul\":8269:8317   */\n      tag_412\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_285\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8253:8318   */\n      tag_284\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_414\n      tag_282\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8393:8505   */\n    tag_413:\n        /* \"#utility.yul\":8514:8568   */\n      tag_415\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_286\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_288:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_418\n      tag_281\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8664:8786   */\n    tag_417:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_419\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_287\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_64:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_422\n      tag_258\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9073:9193   */\n    tag_421:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_423\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_277\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_424\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_277\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_425\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_272\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_427\n      tag_259\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9660:9777   */\n    tag_426:\n        /* \"#utility.yul\":9801:9863   */\n      tag_428\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_288\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_72:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      0x00\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_431\n      tag_258\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9979:10098   */\n    tag_430:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_432\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_277\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_433\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_277\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_289:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_82:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_436:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_438\n      tag_289\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10782:10866   */\n    tag_437:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11098   */\n    tag_290:\n        /* \"#utility.yul\":11018:11052   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11014:11015   */\n      0x00\n        /* \"#utility.yul\":11006:11012   */\n      dup3\n        /* \"#utility.yul\":11002:11016   */\n      add\n        /* \"#utility.yul\":10995:11053   */\n      mstore\n        /* \"#utility.yul\":11087:11090   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11082:11084   */\n      0x20\n        /* \"#utility.yul\":11074:11080   */\n      dup3\n        /* \"#utility.yul\":11070:11085   */\n      add\n        /* \"#utility.yul\":11063:11091   */\n      mstore\n        /* \"#utility.yul\":10878:11098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11104:11470   */\n    tag_291:\n        /* \"#utility.yul\":11246:11249   */\n      0x00\n        /* \"#utility.yul\":11267:11334   */\n      tag_441\n        /* \"#utility.yul\":11331:11333   */\n      0x21\n        /* \"#utility.yul\":11326:11329   */\n      dup4\n        /* \"#utility.yul\":11267:11334   */\n      tag_266\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11260:11334   */\n      swap2\n      pop\n        /* \"#utility.yul\":11343:11436   */\n      tag_442\n        /* \"#utility.yul\":11432:11435   */\n      dup3\n        /* \"#utility.yul\":11343:11436   */\n      tag_290\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11461:11463   */\n      0x40\n        /* \"#utility.yul\":11456:11459   */\n      dup3\n        /* \"#utility.yul\":11452:11464   */\n      add\n        /* \"#utility.yul\":11445:11464   */\n      swap1\n      pop\n        /* \"#utility.yul\":11104:11470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11476:11895   */\n    tag_94:\n        /* \"#utility.yul\":11642:11646   */\n      0x00\n        /* \"#utility.yul\":11680:11682   */\n      0x20\n        /* \"#utility.yul\":11669:11678   */\n      dup3\n        /* \"#utility.yul\":11665:11683   */\n      add\n        /* \"#utility.yul\":11657:11683   */\n      swap1\n      pop\n        /* \"#utility.yul\":11729:11738   */\n      dup2\n        /* \"#utility.yul\":11723:11727   */\n      dup2\n        /* \"#utility.yul\":11719:11739   */\n      sub\n        /* \"#utility.yul\":11715:11716   */\n      0x00\n        /* \"#utility.yul\":11704:11713   */\n      dup4\n        /* \"#utility.yul\":11700:11717   */\n      add\n        /* \"#utility.yul\":11693:11740   */\n      mstore\n        /* \"#utility.yul\":11757:11888   */\n      tag_444\n        /* \"#utility.yul\":11883:11887   */\n      dup2\n        /* \"#utility.yul\":11757:11888   */\n      tag_291\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11749:11888   */\n      swap1\n      pop\n        /* \"#utility.yul\":11476:11895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11901:12149   */\n    tag_292:\n        /* \"#utility.yul\":12041:12075   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12037:12038   */\n      0x00\n        /* \"#utility.yul\":12029:12035   */\n      dup3\n        /* \"#utility.yul\":12025:12039   */\n      add\n        /* \"#utility.yul\":12018:12076   */\n      mstore\n        /* \"#utility.yul\":12110:12141   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12105:12107   */\n      0x20\n        /* \"#utility.yul\":12097:12103   */\n      dup3\n        /* \"#utility.yul\":12093:12108   */\n      add\n        /* \"#utility.yul\":12086:12142   */\n      mstore\n        /* \"#utility.yul\":11901:12149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12155:12521   */\n    tag_293:\n        /* \"#utility.yul\":12297:12300   */\n      0x00\n        /* \"#utility.yul\":12318:12385   */\n      tag_447\n        /* \"#utility.yul\":12382:12384   */\n      0x3d\n        /* \"#utility.yul\":12377:12380   */\n      dup4\n        /* \"#utility.yul\":12318:12385   */\n      tag_266\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12311:12385   */\n      swap2\n      pop\n        /* \"#utility.yul\":12394:12487   */\n      tag_448\n        /* \"#utility.yul\":12483:12486   */\n      dup3\n        /* \"#utility.yul\":12394:12487   */\n      tag_292\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12512:12514   */\n      0x40\n        /* \"#utility.yul\":12507:12510   */\n      dup3\n        /* \"#utility.yul\":12503:12515   */\n      add\n        /* \"#utility.yul\":12496:12515   */\n      swap1\n      pop\n        /* \"#utility.yul\":12155:12521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12527:12946   */\n    tag_102:\n        /* \"#utility.yul\":12693:12697   */\n      0x00\n        /* \"#utility.yul\":12731:12733   */\n      0x20\n        /* \"#utility.yul\":12720:12729   */\n      dup3\n        /* \"#utility.yul\":12716:12734   */\n      add\n        /* \"#utility.yul\":12708:12734   */\n      swap1\n      pop\n        /* \"#utility.yul\":12780:12789   */\n      dup2\n        /* \"#utility.yul\":12774:12778   */\n      dup2\n        /* \"#utility.yul\":12770:12790   */\n      sub\n        /* \"#utility.yul\":12766:12767   */\n      0x00\n        /* \"#utility.yul\":12755:12764   */\n      dup4\n        /* \"#utility.yul\":12751:12768   */\n      add\n        /* \"#utility.yul\":12744:12791   */\n      mstore\n        /* \"#utility.yul\":12808:12939   */\n      tag_450\n        /* \"#utility.yul\":12934:12938   */\n      dup2\n        /* \"#utility.yul\":12808:12939   */\n      tag_293\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12800:12939   */\n      swap1\n      pop\n        /* \"#utility.yul\":12527:12946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12952:13184   */\n    tag_294:\n        /* \"#utility.yul\":13092:13126   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13088:13089   */\n      0x00\n        /* \"#utility.yul\":13080:13086   */\n      dup3\n        /* \"#utility.yul\":13076:13090   */\n      add\n        /* \"#utility.yul\":13069:13127   */\n      mstore\n        /* \"#utility.yul\":13161:13176   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13156:13158   */\n      0x20\n        /* \"#utility.yul\":13148:13154   */\n      dup3\n        /* \"#utility.yul\":13144:13159   */\n      add\n        /* \"#utility.yul\":13137:13177   */\n      mstore\n        /* \"#utility.yul\":12952:13184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13190:13556   */\n    tag_295:\n        /* \"#utility.yul\":13332:13335   */\n      0x00\n        /* \"#utility.yul\":13353:13420   */\n      tag_453\n        /* \"#utility.yul\":13417:13419   */\n      0x2d\n        /* \"#utility.yul\":13412:13415   */\n      dup4\n        /* \"#utility.yul\":13353:13420   */\n      tag_266\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":13346:13420   */\n      swap2\n      pop\n        /* \"#utility.yul\":13429:13522   */\n      tag_454\n        /* \"#utility.yul\":13518:13521   */\n      dup3\n        /* \"#utility.yul\":13429:13522   */\n      tag_294\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13547:13549   */\n      0x40\n        /* \"#utility.yul\":13542:13545   */\n      dup3\n        /* \"#utility.yul\":13538:13550   */\n      add\n        /* \"#utility.yul\":13531:13550   */\n      swap1\n      pop\n        /* \"#utility.yul\":13190:13556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13562:13981   */\n    tag_111:\n        /* \"#utility.yul\":13728:13732   */\n      0x00\n        /* \"#utility.yul\":13766:13768   */\n      0x20\n        /* \"#utility.yul\":13755:13764   */\n      dup3\n        /* \"#utility.yul\":13751:13769   */\n      add\n        /* \"#utility.yul\":13743:13769   */\n      swap1\n      pop\n        /* \"#utility.yul\":13815:13824   */\n      dup2\n        /* \"#utility.yul\":13809:13813   */\n      dup2\n        /* \"#utility.yul\":13805:13825   */\n      sub\n        /* \"#utility.yul\":13801:13802   */\n      0x00\n        /* \"#utility.yul\":13790:13799   */\n      dup4\n        /* \"#utility.yul\":13786:13803   */\n      add\n        /* \"#utility.yul\":13779:13826   */\n      mstore\n        /* \"#utility.yul\":13843:13974   */\n      tag_456\n        /* \"#utility.yul\":13969:13973   */\n      dup2\n        /* \"#utility.yul\":13843:13974   */\n      tag_295\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13835:13974   */\n      swap1\n      pop\n        /* \"#utility.yul\":13562:13981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13987:14161   */\n    tag_296:\n        /* \"#utility.yul\":14127:14153   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14123:14124   */\n      0x00\n        /* \"#utility.yul\":14115:14121   */\n      dup3\n        /* \"#utility.yul\":14111:14125   */\n      add\n        /* \"#utility.yul\":14104:14154   */\n      mstore\n        /* \"#utility.yul\":13987:14161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14167:14533   */\n    tag_297:\n        /* \"#utility.yul\":14309:14312   */\n      0x00\n        /* \"#utility.yul\":14330:14397   */\n      tag_459\n        /* \"#utility.yul\":14394:14396   */\n      0x18\n        /* \"#utility.yul\":14389:14392   */\n      dup4\n        /* \"#utility.yul\":14330:14397   */\n      tag_266\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14323:14397   */\n      swap2\n      pop\n        /* \"#utility.yul\":14406:14499   */\n      tag_460\n        /* \"#utility.yul\":14495:14498   */\n      dup3\n        /* \"#utility.yul\":14406:14499   */\n      tag_296\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":14524:14526   */\n      0x20\n        /* \"#utility.yul\":14519:14522   */\n      dup3\n        /* \"#utility.yul\":14515:14527   */\n      add\n        /* \"#utility.yul\":14508:14527   */\n      swap1\n      pop\n        /* \"#utility.yul\":14167:14533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14539:14958   */\n    tag_121:\n        /* \"#utility.yul\":14705:14709   */\n      0x00\n        /* \"#utility.yul\":14743:14745   */\n      0x20\n        /* \"#utility.yul\":14732:14741   */\n      dup3\n        /* \"#utility.yul\":14728:14746   */\n      add\n        /* \"#utility.yul\":14720:14746   */\n      swap1\n      pop\n        /* \"#utility.yul\":14792:14801   */\n      dup2\n        /* \"#utility.yul\":14786:14790   */\n      dup2\n        /* \"#utility.yul\":14782:14802   */\n      sub\n        /* \"#utility.yul\":14778:14779   */\n      0x00\n        /* \"#utility.yul\":14767:14776   */\n      dup4\n        /* \"#utility.yul\":14763:14780   */\n      add\n        /* \"#utility.yul\":14756:14803   */\n      mstore\n        /* \"#utility.yul\":14820:14951   */\n      tag_462\n        /* \"#utility.yul\":14946:14950   */\n      dup2\n        /* \"#utility.yul\":14820:14951   */\n      tag_297\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14812:14951   */\n      swap1\n      pop\n        /* \"#utility.yul\":14539:14958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14964:15192   */\n    tag_298:\n        /* \"#utility.yul\":15104:15138   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15100:15101   */\n      0x00\n        /* \"#utility.yul\":15092:15098   */\n      dup3\n        /* \"#utility.yul\":15088:15102   */\n      add\n        /* \"#utility.yul\":15081:15139   */\n      mstore\n        /* \"#utility.yul\":15173:15184   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15168:15170   */\n      0x20\n        /* \"#utility.yul\":15160:15166   */\n      dup3\n        /* \"#utility.yul\":15156:15171   */\n      add\n        /* \"#utility.yul\":15149:15185   */\n      mstore\n        /* \"#utility.yul\":14964:15192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15564   */\n    tag_299:\n        /* \"#utility.yul\":15340:15343   */\n      0x00\n        /* \"#utility.yul\":15361:15428   */\n      tag_465\n        /* \"#utility.yul\":15425:15427   */\n      0x29\n        /* \"#utility.yul\":15420:15423   */\n      dup4\n        /* \"#utility.yul\":15361:15428   */\n      tag_266\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":15354:15428   */\n      swap2\n      pop\n        /* \"#utility.yul\":15437:15530   */\n      tag_466\n        /* \"#utility.yul\":15526:15529   */\n      dup3\n        /* \"#utility.yul\":15437:15530   */\n      tag_298\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15555:15557   */\n      0x40\n        /* \"#utility.yul\":15550:15553   */\n      dup3\n        /* \"#utility.yul\":15546:15558   */\n      add\n        /* \"#utility.yul\":15539:15558   */\n      swap1\n      pop\n        /* \"#utility.yul\":15198:15564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15570:15989   */\n    tag_125:\n        /* \"#utility.yul\":15736:15740   */\n      0x00\n        /* \"#utility.yul\":15774:15776   */\n      0x20\n        /* \"#utility.yul\":15763:15772   */\n      dup3\n        /* \"#utility.yul\":15759:15777   */\n      add\n        /* \"#utility.yul\":15751:15777   */\n      swap1\n      pop\n        /* \"#utility.yul\":15823:15832   */\n      dup2\n        /* \"#utility.yul\":15817:15821   */\n      dup2\n        /* \"#utility.yul\":15813:15833   */\n      sub\n        /* \"#utility.yul\":15809:15810   */\n      0x00\n        /* \"#utility.yul\":15798:15807   */\n      dup4\n        /* \"#utility.yul\":15794:15811   */\n      add\n        /* \"#utility.yul\":15787:15834   */\n      mstore\n        /* \"#utility.yul\":15851:15982   */\n      tag_468\n        /* \"#utility.yul\":15977:15981   */\n      dup2\n        /* \"#utility.yul\":15851:15982   */\n      tag_299\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15843:15982   */\n      swap1\n      pop\n        /* \"#utility.yul\":15570:15989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15995:16143   */\n    tag_300:\n        /* \"#utility.yul\":16097:16108   */\n      0x00\n        /* \"#utility.yul\":16134:16137   */\n      dup2\n        /* \"#utility.yul\":16119:16137   */\n      swap1\n      pop\n        /* \"#utility.yul\":15995:16143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16149:16539   */\n    tag_301:\n        /* \"#utility.yul\":16255:16258   */\n      0x00\n        /* \"#utility.yul\":16283:16322   */\n      tag_471\n        /* \"#utility.yul\":16316:16321   */\n      dup3\n        /* \"#utility.yul\":16283:16322   */\n      tag_265\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16338:16427   */\n      tag_472\n        /* \"#utility.yul\":16420:16426   */\n      dup2\n        /* \"#utility.yul\":16415:16418   */\n      dup6\n        /* \"#utility.yul\":16338:16427   */\n      tag_300\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16331:16427   */\n      swap4\n      pop\n        /* \"#utility.yul\":16436:16501   */\n      tag_473\n        /* \"#utility.yul\":16494:16500   */\n      dup2\n        /* \"#utility.yul\":16489:16492   */\n      dup6\n        /* \"#utility.yul\":16482:16486   */\n      0x20\n        /* \"#utility.yul\":16475:16480   */\n      dup7\n        /* \"#utility.yul\":16471:16487   */\n      add\n        /* \"#utility.yul\":16436:16501   */\n      tag_267\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16526:16532   */\n      dup1\n        /* \"#utility.yul\":16521:16524   */\n      dup5\n        /* \"#utility.yul\":16517:16533   */\n      add\n        /* \"#utility.yul\":16510:16533   */\n      swap2\n      pop\n        /* \"#utility.yul\":16259:16539   */\n      pop\n        /* \"#utility.yul\":16149:16539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16545:16980   */\n    tag_152:\n        /* \"#utility.yul\":16725:16728   */\n      0x00\n        /* \"#utility.yul\":16747:16842   */\n      tag_475\n        /* \"#utility.yul\":16838:16841   */\n      dup3\n        /* \"#utility.yul\":16829:16835   */\n      dup6\n        /* \"#utility.yul\":16747:16842   */\n      tag_301\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16740:16842   */\n      swap2\n      pop\n        /* \"#utility.yul\":16859:16954   */\n      tag_476\n        /* \"#utility.yul\":16950:16953   */\n      dup3\n        /* \"#utility.yul\":16941:16947   */\n      dup5\n        /* \"#utility.yul\":16859:16954   */\n      tag_301\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16852:16954   */\n      swap2\n      pop\n        /* \"#utility.yul\":16971:16974   */\n      dup2\n        /* \"#utility.yul\":16964:16974   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16980   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17210   */\n    tag_302:\n        /* \"#utility.yul\":17126:17160   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17122:17123   */\n      0x00\n        /* \"#utility.yul\":17114:17120   */\n      dup3\n        /* \"#utility.yul\":17110:17124   */\n      add\n        /* \"#utility.yul\":17103:17161   */\n      mstore\n        /* \"#utility.yul\":17195:17202   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17190:17192   */\n      0x20\n        /* \"#utility.yul\":17182:17188   */\n      dup3\n        /* \"#utility.yul\":17178:17193   */\n      add\n        /* \"#utility.yul\":17171:17203   */\n      mstore\n        /* \"#utility.yul\":16986:17210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17216:17582   */\n    tag_303:\n        /* \"#utility.yul\":17358:17361   */\n      0x00\n        /* \"#utility.yul\":17379:17446   */\n      tag_479\n        /* \"#utility.yul\":17443:17445   */\n      0x25\n        /* \"#utility.yul\":17438:17441   */\n      dup4\n        /* \"#utility.yul\":17379:17446   */\n      tag_266\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17372:17446   */\n      swap2\n      pop\n        /* \"#utility.yul\":17455:17548   */\n      tag_480\n        /* \"#utility.yul\":17544:17547   */\n      dup3\n        /* \"#utility.yul\":17455:17548   */\n      tag_302\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17573:17575   */\n      0x40\n        /* \"#utility.yul\":17568:17571   */\n      dup3\n        /* \"#utility.yul\":17564:17576   */\n      add\n        /* \"#utility.yul\":17557:17576   */\n      swap1\n      pop\n        /* \"#utility.yul\":17216:17582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17588:18007   */\n    tag_173:\n        /* \"#utility.yul\":17754:17758   */\n      0x00\n        /* \"#utility.yul\":17792:17794   */\n      0x20\n        /* \"#utility.yul\":17781:17790   */\n      dup3\n        /* \"#utility.yul\":17777:17795   */\n      add\n        /* \"#utility.yul\":17769:17795   */\n      swap1\n      pop\n        /* \"#utility.yul\":17841:17850   */\n      dup2\n        /* \"#utility.yul\":17835:17839   */\n      dup2\n        /* \"#utility.yul\":17831:17851   */\n      sub\n        /* \"#utility.yul\":17827:17828   */\n      0x00\n        /* \"#utility.yul\":17816:17825   */\n      dup4\n        /* \"#utility.yul\":17812:17829   */\n      add\n        /* \"#utility.yul\":17805:17852   */\n      mstore\n        /* \"#utility.yul\":17869:18000   */\n      tag_482\n        /* \"#utility.yul\":17995:17999   */\n      dup2\n        /* \"#utility.yul\":17869:18000   */\n      tag_303\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17861:18000   */\n      swap1\n      pop\n        /* \"#utility.yul\":17588:18007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18013:18236   */\n    tag_304:\n        /* \"#utility.yul\":18153:18187   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18149:18150   */\n      0x00\n        /* \"#utility.yul\":18141:18147   */\n      dup3\n        /* \"#utility.yul\":18137:18151   */\n      add\n        /* \"#utility.yul\":18130:18188   */\n      mstore\n        /* \"#utility.yul\":18222:18228   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18217:18219   */\n      0x20\n        /* \"#utility.yul\":18209:18215   */\n      dup3\n        /* \"#utility.yul\":18205:18220   */\n      add\n        /* \"#utility.yul\":18198:18229   */\n      mstore\n        /* \"#utility.yul\":18013:18236   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18242:18608   */\n    tag_305:\n        /* \"#utility.yul\":18384:18387   */\n      0x00\n        /* \"#utility.yul\":18405:18472   */\n      tag_485\n        /* \"#utility.yul\":18469:18471   */\n      0x24\n        /* \"#utility.yul\":18464:18467   */\n      dup4\n        /* \"#utility.yul\":18405:18472   */\n      tag_266\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18398:18472   */\n      swap2\n      pop\n        /* \"#utility.yul\":18481:18574   */\n      tag_486\n        /* \"#utility.yul\":18570:18573   */\n      dup3\n        /* \"#utility.yul\":18481:18574   */\n      tag_304\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":18599:18601   */\n      0x40\n        /* \"#utility.yul\":18594:18597   */\n      dup3\n        /* \"#utility.yul\":18590:18602   */\n      add\n        /* \"#utility.yul\":18583:18602   */\n      swap1\n      pop\n        /* \"#utility.yul\":18242:18608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18614:19033   */\n    tag_176:\n        /* \"#utility.yul\":18780:18784   */\n      0x00\n        /* \"#utility.yul\":18818:18820   */\n      0x20\n        /* \"#utility.yul\":18807:18816   */\n      dup3\n        /* \"#utility.yul\":18803:18821   */\n      add\n        /* \"#utility.yul\":18795:18821   */\n      swap1\n      pop\n        /* \"#utility.yul\":18867:18876   */\n      dup2\n        /* \"#utility.yul\":18861:18865   */\n      dup2\n        /* \"#utility.yul\":18857:18877   */\n      sub\n        /* \"#utility.yul\":18853:18854   */\n      0x00\n        /* \"#utility.yul\":18842:18851   */\n      dup4\n        /* \"#utility.yul\":18838:18855   */\n      add\n        /* \"#utility.yul\":18831:18878   */\n      mstore\n        /* \"#utility.yul\":18895:19026   */\n      tag_488\n        /* \"#utility.yul\":19021:19025   */\n      dup2\n        /* \"#utility.yul\":18895:19026   */\n      tag_305\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18887:19026   */\n      swap1\n      pop\n        /* \"#utility.yul\":18614:19033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19039:19214   */\n    tag_306:\n        /* \"#utility.yul\":19179:19206   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19175:19176   */\n      0x00\n        /* \"#utility.yul\":19167:19173   */\n      dup3\n        /* \"#utility.yul\":19163:19177   */\n      add\n        /* \"#utility.yul\":19156:19207   */\n      mstore\n        /* \"#utility.yul\":19039:19214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19220:19586   */\n    tag_307:\n        /* \"#utility.yul\":19362:19365   */\n      0x00\n        /* \"#utility.yul\":19383:19450   */\n      tag_491\n        /* \"#utility.yul\":19447:19449   */\n      0x19\n        /* \"#utility.yul\":19442:19445   */\n      dup4\n        /* \"#utility.yul\":19383:19450   */\n      tag_266\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":19376:19450   */\n      swap2\n      pop\n        /* \"#utility.yul\":19459:19552   */\n      tag_492\n        /* \"#utility.yul\":19548:19551   */\n      dup3\n        /* \"#utility.yul\":19459:19552   */\n      tag_306\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":19577:19579   */\n      0x20\n        /* \"#utility.yul\":19572:19575   */\n      dup3\n        /* \"#utility.yul\":19568:19580   */\n      add\n        /* \"#utility.yul\":19561:19580   */\n      swap1\n      pop\n        /* \"#utility.yul\":19220:19586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19592:20011   */\n    tag_188:\n        /* \"#utility.yul\":19758:19762   */\n      0x00\n        /* \"#utility.yul\":19796:19798   */\n      0x20\n        /* \"#utility.yul\":19785:19794   */\n      dup3\n        /* \"#utility.yul\":19781:19799   */\n      add\n        /* \"#utility.yul\":19773:19799   */\n      swap1\n      pop\n        /* \"#utility.yul\":19845:19854   */\n      dup2\n        /* \"#utility.yul\":19839:19843   */\n      dup2\n        /* \"#utility.yul\":19835:19855   */\n      sub\n        /* \"#utility.yul\":19831:19832   */\n      0x00\n        /* \"#utility.yul\":19820:19829   */\n      dup4\n        /* \"#utility.yul\":19816:19833   */\n      add\n        /* \"#utility.yul\":19809:19856   */\n      mstore\n        /* \"#utility.yul\":19873:20004   */\n      tag_494\n        /* \"#utility.yul\":19999:20003   */\n      dup2\n        /* \"#utility.yul\":19873:20004   */\n      tag_307\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":19865:20004   */\n      swap1\n      pop\n        /* \"#utility.yul\":19592:20011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20017:20254   */\n    tag_308:\n        /* \"#utility.yul\":20157:20191   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20153:20154   */\n      0x00\n        /* \"#utility.yul\":20145:20151   */\n      dup3\n        /* \"#utility.yul\":20141:20155   */\n      add\n        /* \"#utility.yul\":20134:20192   */\n      mstore\n        /* \"#utility.yul\":20226:20246   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":20221:20223   */\n      0x20\n        /* \"#utility.yul\":20213:20219   */\n      dup3\n        /* \"#utility.yul\":20209:20224   */\n      add\n        /* \"#utility.yul\":20202:20247   */\n      mstore\n        /* \"#utility.yul\":20017:20254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20260:20626   */\n    tag_309:\n        /* \"#utility.yul\":20402:20405   */\n      0x00\n        /* \"#utility.yul\":20423:20490   */\n      tag_497\n        /* \"#utility.yul\":20487:20489   */\n      0x32\n        /* \"#utility.yul\":20482:20485   */\n      dup4\n        /* \"#utility.yul\":20423:20490   */\n      tag_266\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":20416:20490   */\n      swap2\n      pop\n        /* \"#utility.yul\":20499:20592   */\n      tag_498\n        /* \"#utility.yul\":20588:20591   */\n      dup3\n        /* \"#utility.yul\":20499:20592   */\n      tag_308\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":20617:20619   */\n      0x40\n        /* \"#utility.yul\":20612:20615   */\n      dup3\n        /* \"#utility.yul\":20608:20620   */\n      add\n        /* \"#utility.yul\":20601:20620   */\n      swap1\n      pop\n        /* \"#utility.yul\":20260:20626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20632:21051   */\n    tag_196:\n        /* \"#utility.yul\":20798:20802   */\n      0x00\n        /* \"#utility.yul\":20836:20838   */\n      0x20\n        /* \"#utility.yul\":20825:20834   */\n      dup3\n        /* \"#utility.yul\":20821:20839   */\n      add\n        /* \"#utility.yul\":20813:20839   */\n      swap1\n      pop\n        /* \"#utility.yul\":20885:20894   */\n      dup2\n        /* \"#utility.yul\":20879:20883   */\n      dup2\n        /* \"#utility.yul\":20875:20895   */\n      sub\n        /* \"#utility.yul\":20871:20872   */\n      0x00\n        /* \"#utility.yul\":20860:20869   */\n      dup4\n        /* \"#utility.yul\":20856:20873   */\n      add\n        /* \"#utility.yul\":20849:20896   */\n      mstore\n        /* \"#utility.yul\":20913:21044   */\n      tag_500\n        /* \"#utility.yul\":21039:21043   */\n      dup2\n        /* \"#utility.yul\":20913:21044   */\n      tag_309\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":20905:21044   */\n      swap1\n      pop\n        /* \"#utility.yul\":20632:21051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21057:21237   */\n    tag_209:\n        /* \"#utility.yul\":21105:21182   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21102:21103   */\n      0x00\n        /* \"#utility.yul\":21095:21183   */\n      mstore\n        /* \"#utility.yul\":21202:21206   */\n      0x12\n        /* \"#utility.yul\":21199:21200   */\n      0x04\n        /* \"#utility.yul\":21192:21207   */\n      mstore\n        /* \"#utility.yul\":21226:21230   */\n      0x24\n        /* \"#utility.yul\":21223:21224   */\n      0x00\n        /* \"#utility.yul\":21216:21231   */\n      revert\n        /* \"#utility.yul\":21243:21341   */\n    tag_310:\n        /* \"#utility.yul\":21294:21300   */\n      0x00\n        /* \"#utility.yul\":21328:21333   */\n      dup2\n        /* \"#utility.yul\":21322:21334   */\n      mload\n        /* \"#utility.yul\":21312:21334   */\n      swap1\n      pop\n        /* \"#utility.yul\":21243:21341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21347:21515   */\n    tag_311:\n        /* \"#utility.yul\":21430:21441   */\n      0x00\n        /* \"#utility.yul\":21464:21470   */\n      dup3\n        /* \"#utility.yul\":21459:21462   */\n      dup3\n        /* \"#utility.yul\":21452:21471   */\n      mstore\n        /* \"#utility.yul\":21504:21508   */\n      0x20\n        /* \"#utility.yul\":21499:21502   */\n      dup3\n        /* \"#utility.yul\":21495:21509   */\n      add\n        /* \"#utility.yul\":21480:21509   */\n      swap1\n      pop\n        /* \"#utility.yul\":21347:21515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21521:21894   */\n    tag_312:\n        /* \"#utility.yul\":21607:21610   */\n      0x00\n        /* \"#utility.yul\":21635:21673   */\n      tag_505\n        /* \"#utility.yul\":21667:21672   */\n      dup3\n        /* \"#utility.yul\":21635:21673   */\n      tag_310\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":21689:21759   */\n      tag_506\n        /* \"#utility.yul\":21752:21758   */\n      dup2\n        /* \"#utility.yul\":21747:21750   */\n      dup6\n        /* \"#utility.yul\":21689:21759   */\n      tag_311\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":21682:21759   */\n      swap4\n      pop\n        /* \"#utility.yul\":21768:21833   */\n      tag_507\n        /* \"#utility.yul\":21826:21832   */\n      dup2\n        /* \"#utility.yul\":21821:21824   */\n      dup6\n        /* \"#utility.yul\":21814:21818   */\n      0x20\n        /* \"#utility.yul\":21807:21812   */\n      dup7\n        /* \"#utility.yul\":21803:21819   */\n      add\n        /* \"#utility.yul\":21768:21833   */\n      tag_267\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21858:21887   */\n      tag_508\n        /* \"#utility.yul\":21880:21886   */\n      dup2\n        /* \"#utility.yul\":21858:21887   */\n      tag_268\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21853:21856   */\n      dup5\n        /* \"#utility.yul\":21849:21888   */\n      add\n        /* \"#utility.yul\":21842:21888   */\n      swap2\n      pop\n        /* \"#utility.yul\":21611:21894   */\n      pop\n        /* \"#utility.yul\":21521:21894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21900:22540   */\n    tag_221:\n        /* \"#utility.yul\":22095:22099   */\n      0x00\n        /* \"#utility.yul\":22133:22136   */\n      0x80\n        /* \"#utility.yul\":22122:22131   */\n      dup3\n        /* \"#utility.yul\":22118:22137   */\n      add\n        /* \"#utility.yul\":22110:22137   */\n      swap1\n      pop\n        /* \"#utility.yul\":22147:22218   */\n      tag_510\n        /* \"#utility.yul\":22215:22216   */\n      0x00\n        /* \"#utility.yul\":22204:22213   */\n      dup4\n        /* \"#utility.yul\":22200:22217   */\n      add\n        /* \"#utility.yul\":22191:22197   */\n      dup8\n        /* \"#utility.yul\":22147:22218   */\n      tag_275\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":22228:22300   */\n      tag_511\n        /* \"#utility.yul\":22296:22298   */\n      0x20\n        /* \"#utility.yul\":22285:22294   */\n      dup4\n        /* \"#utility.yul\":22281:22299   */\n      add\n        /* \"#utility.yul\":22272:22278   */\n      dup7\n        /* \"#utility.yul\":22228:22300   */\n      tag_275\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":22310:22382   */\n      tag_512\n        /* \"#utility.yul\":22378:22380   */\n      0x40\n        /* \"#utility.yul\":22367:22376   */\n      dup4\n        /* \"#utility.yul\":22363:22381   */\n      add\n        /* \"#utility.yul\":22354:22360   */\n      dup6\n        /* \"#utility.yul\":22310:22382   */\n      tag_278\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":22429:22438   */\n      dup2\n        /* \"#utility.yul\":22423:22427   */\n      dup2\n        /* \"#utility.yul\":22419:22439   */\n      sub\n        /* \"#utility.yul\":22414:22416   */\n      0x60\n        /* \"#utility.yul\":22403:22412   */\n      dup4\n        /* \"#utility.yul\":22399:22417   */\n      add\n        /* \"#utility.yul\":22392:22440   */\n      mstore\n        /* \"#utility.yul\":22457:22533   */\n      tag_513\n        /* \"#utility.yul\":22528:22532   */\n      dup2\n        /* \"#utility.yul\":22519:22525   */\n      dup5\n        /* \"#utility.yul\":22457:22533   */\n      tag_312\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":22449:22533   */\n      swap1\n      pop\n        /* \"#utility.yul\":21900:22540   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22546:22687   */\n    tag_313:\n        /* \"#utility.yul\":22602:22607   */\n      0x00\n        /* \"#utility.yul\":22633:22639   */\n      dup2\n        /* \"#utility.yul\":22627:22640   */\n      mload\n        /* \"#utility.yul\":22618:22640   */\n      swap1\n      pop\n        /* \"#utility.yul\":22649:22681   */\n      tag_515\n        /* \"#utility.yul\":22675:22680   */\n      dup2\n        /* \"#utility.yul\":22649:22681   */\n      tag_261\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22546:22687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22693:23042   */\n    tag_224:\n        /* \"#utility.yul\":22762:22768   */\n      0x00\n        /* \"#utility.yul\":22811:22813   */\n      0x20\n        /* \"#utility.yul\":22799:22808   */\n      dup3\n        /* \"#utility.yul\":22790:22797   */\n      dup5\n        /* \"#utility.yul\":22786:22809   */\n      sub\n        /* \"#utility.yul\":22782:22814   */\n      slt\n        /* \"#utility.yul\":22779:22898   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":22817:22896   */\n      tag_518\n      tag_258\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22779:22898   */\n    tag_517:\n        /* \"#utility.yul\":22937:22938   */\n      0x00\n        /* \"#utility.yul\":22962:23025   */\n      tag_519\n        /* \"#utility.yul\":23017:23024   */\n      dup5\n        /* \"#utility.yul\":23008:23014   */\n      dup3\n        /* \"#utility.yul\":22997:23006   */\n      dup6\n        /* \"#utility.yul\":22993:23015   */\n      add\n        /* \"#utility.yul\":22962:23025   */\n      tag_313\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22952:23025   */\n      swap2\n      pop\n        /* \"#utility.yul\":22908:23035   */\n      pop\n        /* \"#utility.yul\":22693:23042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aa197ce1a1348aeedac55ca34fca8dd36dc2a853a04e58ebdd985c703d80b56e64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:11",
										"nodeType": "YulBlock",
										"src": "0:8467:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "423:28:11",
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:12:11",
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nativeSrc": "433:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nativeSrc": "546:28:11",
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:11",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:11",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nativeSrc": "556:12:11",
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nativeSrc": "556:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nativeSrc": "628:54:11",
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nativeSrc": "638:38:11",
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:11",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nativeSrc": "652:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:11",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nativeSrc": "668:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nativeSrc": "648:28:11",
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:11",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:11",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nativeSrc": "716:152:11",
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:11",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:11",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nativeSrc": "726:88:11",
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nativeSrc": "726:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:11",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:11",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nativeSrc": "823:15:11",
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nativeSrc": "823:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:11",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:11",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nativeSrc": "847:15:11",
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nativeSrc": "847:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nativeSrc": "917:238:11",
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nativeSrc": "927:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nativeSrc": "957:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nativeSrc": "945:40:11",
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:11",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:11",
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nativeSrc": "1098:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nativeSrc": "1098:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nativeSrc": "1036:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nativeSrc": "1072:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nativeSrc": "1033:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nativeSrc": "1030:88:11",
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nativeSrc": "1127:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nativeSrc": "1127:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:11",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:11",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nativeSrc": "1202:88:11",
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nativeSrc": "1212:30:11",
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nativeSrc": "1222:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nativeSrc": "1251:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nativeSrc": "1251:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:11",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:11",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nativeSrc": "1363:241:11",
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:11",
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nativeSrc": "1470:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nativeSrc": "1470:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nativeSrc": "1437:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nativeSrc": "1434:56:11",
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nativeSrc": "1500:37:11",
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nativeSrc": "1508:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nativeSrc": "1574:23:11",
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nativeSrc": "1582:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:11",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:11",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nativeSrc": "1672:77:11",
													"nodeType": "YulBlock",
													"src": "1672:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:11"
																},
																"nativeSrc": "1683:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:11"
															},
															"nativeSrc": "1683:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:11"
																		},
																		"nativeSrc": "1722:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:11"
																},
																"nativeSrc": "1715:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:11"
															},
															"nativeSrc": "1715:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:11",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:11",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:11",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:139:11"
											},
											{
												"body": {
													"nativeSrc": "1850:339:11",
													"nodeType": "YulBlock",
													"src": "1850:339:11",
													"statements": [
														{
															"nativeSrc": "1860:75:11",
															"nodeType": "YulAssignment",
															"src": "1860:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:11"
																		},
																		"nativeSrc": "1885:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:11"
																},
																"nativeSrc": "1869:66:11",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:11"
																},
																"nativeSrc": "1944:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:11"
															},
															"nativeSrc": "1944:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:11"
														},
														{
															"nativeSrc": "1974:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:11"
																},
																"nativeSrc": "1985:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:11",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:11",
																"nodeType": "YulBlock",
																"src": "2039:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:11"
																			},
																			"nativeSrc": "2041:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:11"
																		},
																		"nativeSrc": "2041:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:11"
																		},
																		"nativeSrc": "2016:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:11"
																},
																"nativeSrc": "2013:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:11"
															},
															"nativeSrc": "2010:112:11",
															"nodeType": "YulIf",
															"src": "2010:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:11"
																},
																"nativeSrc": "2131:52:11",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:11"
															},
															"nativeSrc": "2131:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:11",
														"nodeType": "YulTypedName",
														"src": "1823:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:11",
														"nodeType": "YulTypedName",
														"src": "1828:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:11",
														"nodeType": "YulTypedName",
														"src": "1836:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:11",
														"nodeType": "YulTypedName",
														"src": "1844:5:11",
														"type": ""
													}
												],
												"src": "1755:434:11"
											},
											{
												"body": {
													"nativeSrc": "2282:282:11",
													"nodeType": "YulBlock",
													"src": "2282:282:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:11",
																"nodeType": "YulBlock",
																"src": "2331:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:11"
																			},
																			"nativeSrc": "2333:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:11"
																		},
																		"nativeSrc": "2333:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:11"
																				},
																				"nativeSrc": "2306:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:11"
																		},
																		"nativeSrc": "2302:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:11"
																},
																"nativeSrc": "2295:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:11"
															},
															"nativeSrc": "2292:122:11",
															"nodeType": "YulIf",
															"src": "2292:122:11"
														},
														{
															"nativeSrc": "2423:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:11"
																},
																"nativeSrc": "2437:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:11",
															"nodeType": "YulAssignment",
															"src": "2459:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:11"
																		},
																		"nativeSrc": "2527:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:11"
																},
																"nativeSrc": "2468:90:11",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:11",
														"nodeType": "YulTypedName",
														"src": "2260:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:11",
														"nodeType": "YulTypedName",
														"src": "2268:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:11",
														"nodeType": "YulTypedName",
														"src": "2276:5:11",
														"type": ""
													}
												],
												"src": "2209:355:11"
											},
											{
												"body": {
													"nativeSrc": "2684:739:11",
													"nodeType": "YulBlock",
													"src": "2684:739:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:11",
																"nodeType": "YulBlock",
																"src": "2730:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:11"
																			},
																			"nativeSrc": "2732:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:11"
																		},
																		"nativeSrc": "2732:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:11"
																		},
																		"nativeSrc": "2701:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:11"
																},
																"nativeSrc": "2697:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:11"
															},
															"nativeSrc": "2694:119:11",
															"nodeType": "YulIf",
															"src": "2694:119:11"
														},
														{
															"nativeSrc": "2823:291:11",
															"nodeType": "YulBlock",
															"src": "2823:291:11",
															"statements": [
																{
																	"nativeSrc": "2838:38:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:11"
																				},
																				"nativeSrc": "2858:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:11"
																		},
																		"nativeSrc": "2852:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:11",
																		"nodeType": "YulBlock",
																		"src": "2923:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:11"
																					},
																					"nativeSrc": "2925:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:11"
																				},
																				"nativeSrc": "2925:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:11",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:11"
																		},
																		"nativeSrc": "2892:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:11"
																	},
																	"nativeSrc": "2889:117:11",
																	"nodeType": "YulIf",
																	"src": "2889:117:11"
																},
																{
																	"nativeSrc": "3020:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:11"
																				},
																				"nativeSrc": "3072:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:11"
																		},
																		"nativeSrc": "3030:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:11",
															"nodeType": "YulBlock",
															"src": "3124:292:11",
															"statements": [
																{
																	"nativeSrc": "3139:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:11"
																				},
																				"nativeSrc": "3159:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:11"
																		},
																		"nativeSrc": "3153:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:11",
																		"nodeType": "YulBlock",
																		"src": "3225:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:11"
																					},
																					"nativeSrc": "3227:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:11"
																				},
																				"nativeSrc": "3227:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:11"
																		},
																		"nativeSrc": "3194:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:11"
																	},
																	"nativeSrc": "3191:117:11",
																	"nodeType": "YulIf",
																	"src": "3191:117:11"
																},
																{
																	"nativeSrc": "3322:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:11"
																				},
																				"nativeSrc": "3374:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:11"
																		},
																		"nativeSrc": "3332:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:11",
														"nodeType": "YulTypedName",
														"src": "2646:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:11",
														"nodeType": "YulTypedName",
														"src": "2657:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:11",
														"nodeType": "YulTypedName",
														"src": "2669:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:11",
														"nodeType": "YulTypedName",
														"src": "2677:6:11",
														"type": ""
													}
												],
												"src": "2570:853:11"
											},
											{
												"body": {
													"nativeSrc": "3488:40:11",
													"nodeType": "YulBlock",
													"src": "3488:40:11",
													"statements": [
														{
															"nativeSrc": "3499:22:11",
															"nodeType": "YulAssignment",
															"src": "3499:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:11"
																},
																"nativeSrc": "3509:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:11",
														"nodeType": "YulTypedName",
														"src": "3471:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:11",
														"nodeType": "YulTypedName",
														"src": "3481:6:11",
														"type": ""
													}
												],
												"src": "3429:99:11"
											},
											{
												"body": {
													"nativeSrc": "3562:152:11",
													"nodeType": "YulBlock",
													"src": "3562:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:11",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:11"
																},
																"nativeSrc": "3572:88:11",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:11"
															},
															"nativeSrc": "3572:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:11"
																},
																"nativeSrc": "3669:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:11"
															},
															"nativeSrc": "3669:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:11"
																},
																"nativeSrc": "3693:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:11"
															},
															"nativeSrc": "3693:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:11"
											},
											{
												"body": {
													"nativeSrc": "3771:269:11",
													"nodeType": "YulBlock",
													"src": "3771:269:11",
													"statements": [
														{
															"nativeSrc": "3781:22:11",
															"nodeType": "YulAssignment",
															"src": "3781:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:11"
																},
																"nativeSrc": "3791:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:11"
																}
															]
														},
														{
															"nativeSrc": "3812:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:11"
																},
																"nativeSrc": "3838:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:11",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:11",
																"nodeType": "YulBlock",
																"src": "3889:51:11",
																"statements": [
																	{
																		"nativeSrc": "3903:27:11",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:11",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:11"
																			},
																			"nativeSrc": "3913:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:11"
																},
																"nativeSrc": "3862:26:11",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:11"
															},
															"nativeSrc": "3859:81:11",
															"nodeType": "YulIf",
															"src": "3859:81:11"
														},
														{
															"body": {
																"nativeSrc": "3992:42:11",
																"nodeType": "YulBlock",
																"src": "3992:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:11"
																			},
																			"nativeSrc": "4006:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:11"
																		},
																		"nativeSrc": "4006:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:11"
																		},
																		"nativeSrc": "3976:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:11"
																},
																"nativeSrc": "3953:38:11",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:11"
															},
															"nativeSrc": "3950:84:11",
															"nodeType": "YulIf",
															"src": "3950:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:11",
														"nodeType": "YulTypedName",
														"src": "3755:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:11",
														"nodeType": "YulTypedName",
														"src": "3764:6:11",
														"type": ""
													}
												],
												"src": "3720:320:11"
											},
											{
												"body": {
													"nativeSrc": "4100:87:11",
													"nodeType": "YulBlock",
													"src": "4100:87:11",
													"statements": [
														{
															"nativeSrc": "4110:11:11",
															"nodeType": "YulAssignment",
															"src": "4110:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:11",
																"nodeType": "YulIdentifier",
																"src": "4118:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:11"
																},
																"nativeSrc": "4131:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:11"
															},
															"nativeSrc": "4131:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:11"
														},
														{
															"nativeSrc": "4154:26:11",
															"nodeType": "YulAssignment",
															"src": "4154:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:11"
																},
																"nativeSrc": "4162:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:11",
														"nodeType": "YulTypedName",
														"src": "4087:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:11",
														"nodeType": "YulTypedName",
														"src": "4095:4:11",
														"type": ""
													}
												],
												"src": "4046:141:11"
											},
											{
												"body": {
													"nativeSrc": "4237:49:11",
													"nodeType": "YulBlock",
													"src": "4237:49:11",
													"statements": [
														{
															"nativeSrc": "4247:33:11",
															"nodeType": "YulAssignment",
															"src": "4247:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:11"
																		},
																		"nativeSrc": "4261:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:11"
																},
																"nativeSrc": "4257:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:11",
														"nodeType": "YulTypedName",
														"src": "4220:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:11",
														"nodeType": "YulTypedName",
														"src": "4230:6:11",
														"type": ""
													}
												],
												"src": "4193:93:11"
											},
											{
												"body": {
													"nativeSrc": "4345:54:11",
													"nodeType": "YulBlock",
													"src": "4345:54:11",
													"statements": [
														{
															"nativeSrc": "4355:37:11",
															"nodeType": "YulAssignment",
															"src": "4355:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:11"
																},
																"nativeSrc": "4376:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:11",
														"nodeType": "YulTypedName",
														"src": "4320:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:11",
														"nodeType": "YulTypedName",
														"src": "4326:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:11",
														"nodeType": "YulTypedName",
														"src": "4336:8:11",
														"type": ""
													}
												],
												"src": "4292:107:11"
											},
											{
												"body": {
													"nativeSrc": "4481:317:11",
													"nodeType": "YulBlock",
													"src": "4481:317:11",
													"statements": [
														{
															"nativeSrc": "4491:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:11"
																},
																"nativeSrc": "4508:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:11",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:11",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:11"
																},
																"nativeSrc": "4547:97:11",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:11",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:11",
															"nodeType": "YulAssignment",
															"src": "4653:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:11"
																},
																"nativeSrc": "4665:39:11",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:11"
																}
															]
														},
														{
															"nativeSrc": "4713:30:11",
															"nodeType": "YulAssignment",
															"src": "4713:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:11"
																		},
																		"nativeSrc": "4733:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:11"
																},
																"nativeSrc": "4722:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:11"
																}
															]
														},
														{
															"nativeSrc": "4752:40:11",
															"nodeType": "YulAssignment",
															"src": "4752:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:11"
																		},
																		"nativeSrc": "4772:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:11"
																},
																"nativeSrc": "4762:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:11",
														"nodeType": "YulTypedName",
														"src": "4442:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:11",
														"nodeType": "YulTypedName",
														"src": "4449:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:11",
														"nodeType": "YulTypedName",
														"src": "4461:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:11",
														"nodeType": "YulTypedName",
														"src": "4474:6:11",
														"type": ""
													}
												],
												"src": "4405:393:11"
											},
											{
												"body": {
													"nativeSrc": "4849:32:11",
													"nodeType": "YulBlock",
													"src": "4849:32:11",
													"statements": [
														{
															"nativeSrc": "4859:16:11",
															"nodeType": "YulAssignment",
															"src": "4859:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:11",
																"nodeType": "YulIdentifier",
																"src": "4870:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:11",
														"nodeType": "YulTypedName",
														"src": "4831:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:11",
														"nodeType": "YulTypedName",
														"src": "4841:7:11",
														"type": ""
													}
												],
												"src": "4804:77:11"
											},
											{
												"body": {
													"nativeSrc": "4919:28:11",
													"nodeType": "YulBlock",
													"src": "4919:28:11",
													"statements": [
														{
															"nativeSrc": "4929:12:11",
															"nodeType": "YulAssignment",
															"src": "4929:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:11",
																"nodeType": "YulIdentifier",
																"src": "4936:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:11",
														"nodeType": "YulTypedName",
														"src": "4905:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:11",
														"nodeType": "YulTypedName",
														"src": "4915:3:11",
														"type": ""
													}
												],
												"src": "4887:60:11"
											},
											{
												"body": {
													"nativeSrc": "5013:82:11",
													"nodeType": "YulBlock",
													"src": "5013:82:11",
													"statements": [
														{
															"nativeSrc": "5023:66:11",
															"nodeType": "YulAssignment",
															"src": "5023:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:11"
																				},
																				"nativeSrc": "5063:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:11"
																		},
																		"nativeSrc": "5054:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:11"
																},
																"nativeSrc": "5036:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:11",
														"nodeType": "YulTypedName",
														"src": "4993:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:11",
														"nodeType": "YulTypedName",
														"src": "5003:9:11",
														"type": ""
													}
												],
												"src": "4953:142:11"
											},
											{
												"body": {
													"nativeSrc": "5148:28:11",
													"nodeType": "YulBlock",
													"src": "5148:28:11",
													"statements": [
														{
															"nativeSrc": "5158:12:11",
															"nodeType": "YulAssignment",
															"src": "5158:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:11",
																"nodeType": "YulIdentifier",
																"src": "5165:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:11",
														"nodeType": "YulTypedName",
														"src": "5134:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:11",
														"nodeType": "YulTypedName",
														"src": "5144:3:11",
														"type": ""
													}
												],
												"src": "5101:75:11"
											},
											{
												"body": {
													"nativeSrc": "5258:193:11",
													"nodeType": "YulBlock",
													"src": "5258:193:11",
													"statements": [
														{
															"nativeSrc": "5268:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:11"
																},
																"nativeSrc": "5292:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:11",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:11"
																				},
																				"nativeSrc": "5381:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:11"
																				},
																				"nativeSrc": "5402:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:11"
																		},
																		"nativeSrc": "5353:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:11"
																},
																"nativeSrc": "5340:105:11",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:11"
															},
															"nativeSrc": "5340:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:11",
														"nodeType": "YulTypedName",
														"src": "5235:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:11",
														"nodeType": "YulTypedName",
														"src": "5241:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:11",
														"nodeType": "YulTypedName",
														"src": "5249:7:11",
														"type": ""
													}
												],
												"src": "5182:269:11"
											},
											{
												"body": {
													"nativeSrc": "5506:24:11",
													"nodeType": "YulBlock",
													"src": "5506:24:11",
													"statements": [
														{
															"nativeSrc": "5516:8:11",
															"nodeType": "YulAssignment",
															"src": "5516:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:11",
																"nodeType": "YulLiteral",
																"src": "5523:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:11",
														"nodeType": "YulTypedName",
														"src": "5502:3:11",
														"type": ""
													}
												],
												"src": "5457:73:11"
											},
											{
												"body": {
													"nativeSrc": "5589:136:11",
													"nodeType": "YulBlock",
													"src": "5589:136:11",
													"statements": [
														{
															"nativeSrc": "5599:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:11"
																},
																"nativeSrc": "5613:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:11"
																},
																"nativeSrc": "5654:65:11",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:11"
															},
															"nativeSrc": "5654:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:11",
														"nodeType": "YulTypedName",
														"src": "5575:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:11",
														"nodeType": "YulTypedName",
														"src": "5581:6:11",
														"type": ""
													}
												],
												"src": "5536:189:11"
											},
											{
												"body": {
													"nativeSrc": "5781:136:11",
													"nodeType": "YulBlock",
													"src": "5781:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:11",
																"nodeType": "YulBlock",
																"src": "5848:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:11"
																			},
																			"nativeSrc": "5862:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:11"
																		},
																		"nativeSrc": "5862:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:11"
																},
																"nativeSrc": "5798:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:11"
															},
															"nativeSrc": "5791:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:11",
																"nodeType": "YulBlock",
																"src": "5813:26:11",
																"statements": [
																	{
																		"nativeSrc": "5815:22:11",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:11"
																			},
																			"nativeSrc": "5824:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:11",
																"nodeType": "YulBlock",
																"src": "5795:2:11",
																"statements": []
															},
															"src": "5791:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:11",
														"nodeType": "YulTypedName",
														"src": "5769:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:11",
														"nodeType": "YulTypedName",
														"src": "5776:3:11",
														"type": ""
													}
												],
												"src": "5731:186:11"
											},
											{
												"body": {
													"nativeSrc": "6002:464:11",
													"nodeType": "YulBlock",
													"src": "6002:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:11",
																"nodeType": "YulBlock",
																"src": "6028:431:11",
																"statements": [
																	{
																		"nativeSrc": "6042:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:11"
																			},
																			"nativeSrc": "6058:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:11",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:11"
																					},
																					"nativeSrc": "6142:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:11"
																			},
																			"nativeSrc": "6128:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:11",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:11",
																			"nodeType": "YulBlock",
																			"src": "6329:27:11",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:11",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:11",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:11"
																			},
																			"nativeSrc": "6310:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:11"
																		},
																		"nativeSrc": "6307:49:11",
																		"nodeType": "YulIf",
																		"src": "6307:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:11"
																							},
																							"nativeSrc": "6425:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:11"
																					},
																					"nativeSrc": "6411:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:11"
																			},
																			"nativeSrc": "6369:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:11"
																		},
																		"nativeSrc": "6369:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:11"
																},
																"nativeSrc": "6016:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:11"
															},
															"nativeSrc": "6013:446:11",
															"nodeType": "YulIf",
															"src": "6013:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:11",
														"nodeType": "YulTypedName",
														"src": "5978:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:11",
														"nodeType": "YulTypedName",
														"src": "5985:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:11",
														"nodeType": "YulTypedName",
														"src": "5990:10:11",
														"type": ""
													}
												],
												"src": "5923:543:11"
											},
											{
												"body": {
													"nativeSrc": "6535:54:11",
													"nodeType": "YulBlock",
													"src": "6535:54:11",
													"statements": [
														{
															"nativeSrc": "6545:37:11",
															"nodeType": "YulAssignment",
															"src": "6545:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:11"
																},
																"nativeSrc": "6566:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:11",
														"nodeType": "YulTypedName",
														"src": "6510:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:11",
														"nodeType": "YulTypedName",
														"src": "6516:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:11",
														"nodeType": "YulTypedName",
														"src": "6526:8:11",
														"type": ""
													}
												],
												"src": "6472:117:11"
											},
											{
												"body": {
													"nativeSrc": "6646:118:11",
													"nodeType": "YulBlock",
													"src": "6646:118:11",
													"statements": [
														{
															"nativeSrc": "6656:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:11"
																				},
																				"nativeSrc": "6701:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:11"
																				},
																				"nativeSrc": "6716:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:11"
																		},
																		"nativeSrc": "6672:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:11"
																},
																"nativeSrc": "6668:56:11",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:11",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:11",
															"nodeType": "YulAssignment",
															"src": "6733:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:11"
																},
																"nativeSrc": "6743:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:11",
														"nodeType": "YulTypedName",
														"src": "6623:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:11",
														"nodeType": "YulTypedName",
														"src": "6629:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:11",
														"nodeType": "YulTypedName",
														"src": "6639:6:11",
														"type": ""
													}
												],
												"src": "6595:169:11"
											},
											{
												"body": {
													"nativeSrc": "6850:214:11",
													"nodeType": "YulBlock",
													"src": "6850:214:11",
													"statements": [
														{
															"nativeSrc": "6983:37:11",
															"nodeType": "YulAssignment",
															"src": "6983:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:11"
																},
																"nativeSrc": "6991:29:11",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:11"
																}
															]
														},
														{
															"nativeSrc": "7029:29:11",
															"nodeType": "YulAssignment",
															"src": "7029:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:11"
																		},
																		"nativeSrc": "7046:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:11"
																},
																"nativeSrc": "7037:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:11",
														"nodeType": "YulTypedName",
														"src": "6831:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:11",
														"nodeType": "YulTypedName",
														"src": "6837:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:11",
														"nodeType": "YulTypedName",
														"src": "6845:4:11",
														"type": ""
													}
												],
												"src": "6769:295:11"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:11",
													"nodeType": "YulBlock",
													"src": "7161:1303:11",
													"statements": [
														{
															"nativeSrc": "7172:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:11"
																},
																"nativeSrc": "7186:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:11",
																"nodeType": "YulBlock",
																"src": "7308:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:11"
																			},
																			"nativeSrc": "7310:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:11"
																		},
																		"nativeSrc": "7310:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:11",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:11"
																},
																"nativeSrc": "7277:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:11"
															},
															"nativeSrc": "7274:56:11",
															"nodeType": "YulIf",
															"src": "7274:56:11"
														},
														{
															"nativeSrc": "7340:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:11"
																		},
																		"nativeSrc": "7380:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:11"
																},
																"nativeSrc": "7354:38:11",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:11"
																},
																"nativeSrc": "7439:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:11"
															},
															"nativeSrc": "7439:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:11"
														},
														{
															"nativeSrc": "7516:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:11",
																"nodeType": "YulLiteral",
																"src": "7533:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:11",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:11",
															"nodeType": "YulAssignment",
															"src": "7544:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:11",
																"nodeType": "YulLiteral",
																"src": "7557:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:11",
																		"nodeType": "YulBlock",
																		"src": "7608:611:11",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:11",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:11"
																							},
																							"nativeSrc": "7649:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:11"
																					},
																					"nativeSrc": "7637:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:11",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:11"
																					},
																					"nativeSrc": "7687:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:11",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:11",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:11",
																					"nodeType": "YulBlock",
																					"src": "7805:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:11"
																												},
																												"nativeSrc": "7844:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:11"
																										},
																										"nativeSrc": "7838:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:11"
																								},
																								"nativeSrc": "7823:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:11"
																							},
																							"nativeSrc": "7823:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:11"
																						},
																						{
																							"nativeSrc": "7882:24:11",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:11",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:11"
																								},
																								"nativeSrc": "7892:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:11",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:11",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:11"
																								},
																								"nativeSrc": "7936:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:11"
																					},
																					"nativeSrc": "7768:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:11"
																				},
																				"nativeSrc": "7760:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:11",
																					"nodeType": "YulBlock",
																					"src": "7783:21:11",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:11",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:11",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:11"
																								},
																								"nativeSrc": "7790:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:11",
																					"nodeType": "YulBlock",
																					"src": "7764:3:11",
																					"statements": []
																				},
																				"src": "7760:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:11",
																					"nodeType": "YulBlock",
																					"src": "8004:156:11",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:11"
																										},
																										"nativeSrc": "8045:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:11"
																								},
																								"nativeSrc": "8039:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:11",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:11",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:11"
																												},
																												"nativeSrc": "8127:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:11"
																										},
																										"nativeSrc": "8097:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:11"
																								},
																								"nativeSrc": "8082:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:11"
																							},
																							"nativeSrc": "8082:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:11"
																					},
																					"nativeSrc": "7984:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:11"
																				},
																				"nativeSrc": "7981:179:11",
																				"nodeType": "YulIf",
																				"src": "7981:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:11",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:11"
																									},
																									"nativeSrc": "8190:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:11",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:11"
																							},
																							"nativeSrc": "8186:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:11"
																					},
																					"nativeSrc": "8173:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:11"
																				},
																				"nativeSrc": "8173:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:11"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:11",
																	"nodeType": "YulCase",
																	"src": "7601:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:11",
																		"nodeType": "YulBlock",
																		"src": "8236:222:11",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:11",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:11",
																					"nodeType": "YulBlock",
																					"src": "8287:67:11",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:11",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:11"
																										},
																										"nativeSrc": "8320:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:11"
																								},
																								"nativeSrc": "8314:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:11"
																				},
																				"nativeSrc": "8277:77:11",
																				"nodeType": "YulIf",
																				"src": "8277:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:11"
																							},
																							"nativeSrc": "8380:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:11"
																					},
																					"nativeSrc": "8367:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:11"
																				},
																				"nativeSrc": "8367:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:11"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:11",
																	"nodeType": "YulCase",
																	"src": "8228:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:11"
																},
																"nativeSrc": "7578:14:11",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:11"
															},
															"nativeSrc": "7571:887:11",
															"nodeType": "YulSwitch",
															"src": "7571:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:11",
														"nodeType": "YulTypedName",
														"src": "7150:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:11",
														"nodeType": "YulTypedName",
														"src": "7156:3:11",
														"type": ""
													}
												],
												"src": "7069:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612558380380612558833981810160405281019061003191906101a4565b815f908161003f919061042a565b50806001908161004f919061042a565b5050506104f9565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100b682610070565b810181811067ffffffffffffffff821117156100d5576100d4610080565b5b80604052505050565b5f6100e7610057565b90506100f382826100ad565b919050565b5f67ffffffffffffffff82111561011257610111610080565b5b61011b82610070565b9050602081019050919050565b8281835e5f83830152505050565b5f610148610143846100f8565b6100de565b9050828152602081018484840111156101645761016361006c565b5b61016f848285610128565b509392505050565b5f82601f83011261018b5761018a610068565b5b815161019b848260208601610136565b91505092915050565b5f5f604083850312156101ba576101b9610060565b5b5f83015167ffffffffffffffff8111156101d7576101d6610064565b5b6101e385828601610177565b925050602083015167ffffffffffffffff81111561020457610203610064565b5b61021085828601610177565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026857607f821691505b60208210810361027b5761027a610224565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a2565b6102e786836102a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032b610326610321846102ff565b610308565b6102ff565b9050919050565b5f819050919050565b61034483610311565b61035861035082610332565b8484546102ae565b825550505050565b5f5f905090565b61036f610360565b61037a81848461033b565b505050565b5b8181101561039d576103925f82610367565b600181019050610380565b5050565b601f8211156103e2576103b381610281565b6103bc84610293565b810160208510156103cb578190505b6103df6103d785610293565b83018261037f565b50505b505050565b5f82821c905092915050565b5f6104025f19846008026103e7565b1980831691505092915050565b5f61041a83836103f3565b9150826002028217905092915050565b6104338261021a565b67ffffffffffffffff81111561044c5761044b610080565b5b6104568254610251565b6104618282856103a1565b5f60209050601f831160018114610492575f8415610480578287015190505b61048a858261040f565b8655506104f1565b601f1984166104a086610281565b5f5b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103f3565b8355505b6001600288020188555050505b505050505050565b612052806105065f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e691906114a7565b6102b9565b6040516100f891906114ec565b60405180910390f35b61010961039a565b6040516101169190611575565b60405180910390f35b610139600480360381019061013491906115c8565b610429565b6040516101469190611632565b60405180910390f35b61016960048036038101906101649190611675565b61046b565b005b610185600480360381019061018091906116b3565b610581565b005b6101a1600480360381019061019c91906116b3565b6105e1565b005b6101bd60048036038101906101b891906115c8565b610600565b6040516101ca9190611632565b60405180910390f35b6101ed60048036038101906101e89190611703565b610684565b6040516101fa919061173d565b60405180910390f35b61020b610738565b6040516102189190611575565b60405180910390f35b61023b60048036038101906102369190611780565b6107c8565b005b610257600480360381019061025291906118ea565b6107de565b005b610273600480360381019061026e91906115c8565b610840565b6040516102809190611575565b60405180910390f35b6102a3600480360381019061029e919061196a565b6108a5565b6040516102b091906114ec565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610933565b5b9050919050565b60605f80546103a8906119d5565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906119d5565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f6104338261099c565b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61047582610600565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611a75565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105046109e7565b73ffffffffffffffffffffffffffffffffffffffff16148061053357506105328161052d6109e7565b6108a5565b5b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990611b03565b60405180910390fd5b61057c83836109ee565b505050565b61059261058c6109e7565b82610aa4565b6105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611b91565b60405180910390fd5b6105dc838383610b38565b505050565b6105fb83838360405180602001604052805f8152506107de565b505050565b5f5f61060b83610e24565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611bf9565b60405180910390fd5b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611c87565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610747906119d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610773906119d5565b80156107be5780601f10610795576101008083540402835291602001916107be565b820191905f5260205f20905b8154815290600101906020018083116107a157829003601f168201915b5050505050905090565b6107da6107d36109e7565b8383610e5d565b5050565b6107ef6107e96109e7565b83610aa4565b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611b91565b60405180910390fd5b61083a84848484610fc4565b50505050565b606061084b8261099c565b5f610854611020565b90505f8151116108725760405180602001604052805f81525061089d565b8061087c84611036565b60405160200161088d929190611cdf565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109a581611100565b6109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90611bf9565b60405180910390fd5b50565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a5e83610600565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f5f610aaf83610600565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610af15750610af081856108a5565b5b80610b2f57508373ffffffffffffffffffffffffffffffffffffffff16610b1784610429565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b5882610600565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611d72565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1390611e00565b60405180910390fd5b610c298383836001611140565b8273ffffffffffffffffffffffffffffffffffffffff16610c4982610600565b73ffffffffffffffffffffffffffffffffffffffff1614610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611d72565b60405180910390fd5b60045f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540392505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e1f8383836001611146565b505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611e68565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fb791906114ec565b60405180910390a3505050565b610fcf848484610b38565b610fdb8484848461114c565b61101a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101190611ef6565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f6001611044846112ce565b0190505f8167ffffffffffffffff811115611062576110616117c6565b5b6040519080825280601f01601f1916602001820160405280156110945781602001600182028036833780820191505090505b5090505f82602001820190505b6001156110f5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110ea576110e9611f14565b5b0494505f85036110a1575b819350505050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1661112183610e24565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b5f61116c8473ffffffffffffffffffffffffffffffffffffffff1661141f565b156112c1578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111956109e7565b8786866040518563ffffffff1660e01b81526004016111b79493929190611f93565b6020604051808303815f875af19250505080156111f257506040513d601f19601f820116820180604052508101906111ef9190611ff1565b60015b611271573d805f8114611220576040519150601f19603f3d011682016040523d82523d5f602084013e611225565b606091505b505f815103611269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126090611ef6565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112c6565b600190505b949350505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061132a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113205761131f611f14565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611367576d04ee2d6d415b85acef8100000000838161135d5761135c611f14565b5b0492506020810190505b662386f26fc10000831061139657662386f26fc10000838161138c5761138b611f14565b5b0492506010810190505b6305f5e10083106113bf576305f5e10083816113b5576113b4611f14565b5b0492506008810190505b61271083106113e45761271083816113da576113d9611f14565b5b0492506004810190505b6064831061140757606483816113fd576113fc611f14565b5b0492506002810190505b600a8310611416576001810190505b80915050919050565b5f5f8273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61148681611452565b8114611490575f5ffd5b50565b5f813590506114a18161147d565b92915050565b5f602082840312156114bc576114bb61144a565b5b5f6114c984828501611493565b91505092915050565b5f8115159050919050565b6114e6816114d2565b82525050565b5f6020820190506114ff5f8301846114dd565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61154782611505565b611551818561150f565b935061156181856020860161151f565b61156a8161152d565b840191505092915050565b5f6020820190508181035f83015261158d818461153d565b905092915050565b5f819050919050565b6115a781611595565b81146115b1575f5ffd5b50565b5f813590506115c28161159e565b92915050565b5f602082840312156115dd576115dc61144a565b5b5f6115ea848285016115b4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61161c826115f3565b9050919050565b61162c81611612565b82525050565b5f6020820190506116455f830184611623565b92915050565b61165481611612565b811461165e575f5ffd5b50565b5f8135905061166f8161164b565b92915050565b5f5f6040838503121561168b5761168a61144a565b5b5f61169885828601611661565b92505060206116a9858286016115b4565b9150509250929050565b5f5f5f606084860312156116ca576116c961144a565b5b5f6116d786828701611661565b93505060206116e886828701611661565b92505060406116f9868287016115b4565b9150509250925092565b5f602082840312156117185761171761144a565b5b5f61172584828501611661565b91505092915050565b61173781611595565b82525050565b5f6020820190506117505f83018461172e565b92915050565b61175f816114d2565b8114611769575f5ffd5b50565b5f8135905061177a81611756565b92915050565b5f5f604083850312156117965761179561144a565b5b5f6117a385828601611661565b92505060206117b48582860161176c565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117fc8261152d565b810181811067ffffffffffffffff8211171561181b5761181a6117c6565b5b80604052505050565b5f61182d611441565b905061183982826117f3565b919050565b5f67ffffffffffffffff821115611858576118576117c6565b5b6118618261152d565b9050602081019050919050565b828183375f83830152505050565b5f61188e6118898461183e565b611824565b9050828152602081018484840111156118aa576118a96117c2565b5b6118b584828561186e565b509392505050565b5f82601f8301126118d1576118d06117be565b5b81356118e184826020860161187c565b91505092915050565b5f5f5f5f608085870312156119025761190161144a565b5b5f61190f87828801611661565b945050602061192087828801611661565b9350506040611931878288016115b4565b925050606085013567ffffffffffffffff8111156119525761195161144e565b5b61195e878288016118bd565b91505092959194509250565b5f5f604083850312156119805761197f61144a565b5b5f61198d85828601611661565b925050602061199e85828601611661565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119ec57607f821691505b6020821081036119ff576119fe6119a8565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a5f60218361150f565b9150611a6a82611a05565b604082019050919050565b5f6020820190508181035f830152611a8c81611a53565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f5f8201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b5f611aed603d8361150f565b9150611af882611a93565b604082019050919050565b5f6020820190508181035f830152611b1a81611ae1565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e655f8201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b5f611b7b602d8361150f565b9150611b8682611b21565b604082019050919050565b5f6020820190508181035f830152611ba881611b6f565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000005f82015250565b5f611be360188361150f565b9150611bee82611baf565b602082019050919050565b5f6020820190508181035f830152611c1081611bd7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f7420612076615f8201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b5f611c7160298361150f565b9150611c7c82611c17565b604082019050919050565b5f6020820190508181035f830152611c9e81611c65565b9050919050565b5f81905092915050565b5f611cb982611505565b611cc38185611ca5565b9350611cd381856020860161151f565b80840191505092915050565b5f611cea8285611caf565b9150611cf68284611caf565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f611d5c60258361150f565b9150611d6782611d02565b604082019050919050565b5f6020820190508181035f830152611d8981611d50565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611dea60248361150f565b9150611df582611d90565b604082019050919050565b5f6020820190508181035f830152611e1781611dde565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611e5260198361150f565b9150611e5d82611e1e565b602082019050919050565b5f6020820190508181035f830152611e7f81611e46565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f611ee060328361150f565b9150611eeb82611e86565b604082019050919050565b5f6020820190508181035f830152611f0d81611ed4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f611f6582611f41565b611f6f8185611f4b565b9350611f7f81856020860161151f565b611f888161152d565b840191505092915050565b5f608082019050611fa65f830187611623565b611fb36020830186611623565b611fc0604083018561172e565b8181036060830152611fd28184611f5b565b905095945050505050565b5f81519050611feb8161147d565b92915050565b5f602082840312156120065761200561144a565b5b5f61201384828501611fdd565b9150509291505056fea2646970667358221220aa197ce1a1348aeedac55ca34fca8dd36dc2a853a04e58ebdd985c703d80b56e64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2558 CODESIZE SUB DUP1 PUSH2 0x2558 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1A4 JUMP JUMPDEST DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST POP POP POP PUSH2 0x4F9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB6 DUP3 PUSH2 0x70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x80 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE7 PUSH2 0x57 JUMP JUMPDEST SWAP1 POP PUSH2 0xF3 DUP3 DUP3 PUSH2 0xAD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x112 JUMPI PUSH2 0x111 PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH2 0x11B DUP3 PUSH2 0x70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148 PUSH2 0x143 DUP5 PUSH2 0xF8 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH2 0x16F DUP5 DUP3 DUP6 PUSH2 0x128 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x68 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x19B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA JUMPI PUSH2 0x1B9 PUSH2 0x60 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x1D6 PUSH2 0x64 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3 DUP6 DUP3 DUP7 ADD PUSH2 0x177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204 JUMPI PUSH2 0x203 PUSH2 0x64 JUMP JUMPDEST JUMPDEST PUSH2 0x210 DUP6 DUP3 DUP7 ADD PUSH2 0x177 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x268 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x224 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x2E7 DUP7 DUP4 PUSH2 0x2A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32B PUSH2 0x326 PUSH2 0x321 DUP5 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP4 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x350 DUP3 PUSH2 0x332 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36F PUSH2 0x360 JUMP JUMPDEST PUSH2 0x37A DUP2 DUP5 DUP5 PUSH2 0x33B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH2 0x392 PUSH0 DUP3 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3B3 DUP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x3BC DUP5 PUSH2 0x293 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3DF PUSH2 0x3D7 DUP6 PUSH2 0x293 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x402 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41A DUP4 DUP4 PUSH2 0x3F3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x433 DUP3 PUSH2 0x21A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH2 0x456 DUP3 SLOAD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x461 DUP3 DUP3 DUP6 PUSH2 0x3A1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x492 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x480 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48A DUP6 DUP3 PUSH2 0x40F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A0 DUP7 PUSH2 0x281 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2052 DUP1 PUSH2 0x506 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x933 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x504 PUSH2 0x9E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP2 PUSH2 0x52D PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x58C PUSH2 0x9E7 JUMP JUMPDEST DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x60B DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x747 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x795 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D3 PUSH2 0x9E7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E9 PUSH2 0x9E7 JUMP JUMPDEST DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x84B DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH2 0x87C DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5E DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAAF DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAF1 JUMPI POP PUSH2 0xAF0 DUP2 DUP6 PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB17 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1140 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE1F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1146 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFCF DUP5 DUP5 DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xFDB DUP5 DUP5 DUP5 DUP5 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1044 DUP5 PUSH2 0x12CE JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1062 JUMPI PUSH2 0x1061 PUSH2 0x17C6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10F5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x10A1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1121 DUP4 PUSH2 0xE24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x141F JUMP JUMPDEST ISZERO PUSH2 0x12C1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1195 PUSH2 0x9E7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1271 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1260 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x132A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1320 JUMPI PUSH2 0x131F PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1367 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1396 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x138C JUMPI PUSH2 0x138B PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x13BF JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x13E4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x13DA JUMPI PUSH2 0x13D9 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1407 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1416 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1486 DUP2 PUSH2 0x1452 JUMP JUMPDEST DUP2 EQ PUSH2 0x1490 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A1 DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH2 0x14BB PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x14D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FF PUSH0 DUP4 ADD DUP5 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1547 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x1551 DUP2 DUP6 PUSH2 0x150F JUMP JUMPDEST SWAP4 POP PUSH2 0x1561 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST PUSH2 0x156A DUP2 PUSH2 0x152D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158D DUP2 DUP5 PUSH2 0x153D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A7 DUP2 PUSH2 0x1595 JUMP JUMPDEST DUP2 EQ PUSH2 0x15B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C2 DUP2 PUSH2 0x159E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15EA DUP5 DUP3 DUP6 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x161C DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x1612 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1645 PUSH0 DUP4 ADD DUP5 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1654 DUP2 PUSH2 0x1612 JUMP JUMPDEST DUP2 EQ PUSH2 0x165E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166F DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x168B JUMPI PUSH2 0x168A PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1698 DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A9 DUP6 DUP3 DUP7 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D7 DUP7 DUP3 DUP8 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F9 DUP7 DUP3 DUP8 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP5 DUP3 DUP6 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1737 DUP2 PUSH2 0x1595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1750 PUSH0 DUP4 ADD DUP5 PUSH2 0x172E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x175F DUP2 PUSH2 0x14D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1769 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x177A DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B4 DUP6 DUP3 DUP7 ADD PUSH2 0x176C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17FC DUP3 PUSH2 0x152D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x17C6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x182D PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP PUSH2 0x1839 DUP3 DUP3 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH2 0x1857 PUSH2 0x17C6 JUMP JUMPDEST JUMPDEST PUSH2 0x1861 DUP3 PUSH2 0x152D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188E PUSH2 0x1889 DUP5 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x1824 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST PUSH2 0x18B5 DUP5 DUP3 DUP6 PUSH2 0x186E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x17BE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18E1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1902 JUMPI PUSH2 0x1901 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x190F DUP8 DUP3 DUP9 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1920 DUP8 DUP3 DUP9 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1931 DUP8 DUP3 DUP9 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x144E JUMP JUMPDEST JUMPDEST PUSH2 0x195E DUP8 DUP3 DUP9 ADD PUSH2 0x18BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199E DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19FF JUMPI PUSH2 0x19FE PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5F PUSH1 0x21 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6A DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x1A53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AED PUSH1 0x3D DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF8 DUP3 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B1A DUP2 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B7B PUSH1 0x2D DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B86 DUP3 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA8 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE3 PUSH1 0x18 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEE DUP3 PUSH2 0x1BAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C10 DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C71 PUSH1 0x29 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7C DUP3 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9E DUP2 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB9 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x1CC3 DUP2 DUP6 PUSH2 0x1CA5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CD3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEA DUP3 DUP6 PUSH2 0x1CAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF6 DUP3 DUP5 PUSH2 0x1CAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5C PUSH1 0x25 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D67 DUP3 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D89 DUP2 PUSH2 0x1D50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEA PUSH1 0x24 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF5 DUP3 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E17 DUP2 PUSH2 0x1DDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E52 PUSH1 0x19 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5D DUP3 PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E7F DUP2 PUSH2 0x1E46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE0 PUSH1 0x32 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEB DUP3 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0D DUP2 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F65 DUP3 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0x1F6F DUP2 DUP6 PUSH2 0x1F4B JUMP JUMPDEST SWAP4 POP PUSH2 0x1F7F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST PUSH2 0x1F88 DUP2 PUSH2 0x152D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FA6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1FB3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1FC0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x172E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FD2 DUP2 DUP5 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FEB DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2013 DUP5 DUP3 DUP6 ADD PUSH2 0x1FDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA NOT PUSH29 0xE1A1348AEEDAC55CA34FCA8DD36DC2A853A04E58EBDD985C703D80B56E PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "628:16377:0:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:16377;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;628:16377:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_910": {
									"entryPoint": 4422,
									"id": 910,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_776": {
									"entryPoint": 2542,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_213": {
									"entryPoint": 4128,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_897": {
									"entryPoint": 4416,
									"id": 897,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_884": {
									"entryPoint": 4428,
									"id": 884,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_445": {
									"entryPoint": 4352,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_479": {
									"entryPoint": 2724,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1429": {
									"entryPoint": 2535,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_427": {
									"entryPoint": 3620,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_822": {
									"entryPoint": 2460,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_414": {
									"entryPoint": 4036,
									"id": 414,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_808": {
									"entryPoint": 3677,
									"id": 808,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_752": {
									"entryPoint": 2872,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_256": {
									"entryPoint": 1131,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_117": {
									"entryPoint": 1668,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_274": {
									"entryPoint": 1065,
									"id": 274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_309": {
									"entryPoint": 2213,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1105": {
									"entryPoint": 5151,
									"id": 1105,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2415": {
									"entryPoint": 4814,
									"id": 2415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_155": {
									"entryPoint": 922,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1536,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_355": {
									"entryPoint": 1505,
									"id": 355,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_385": {
									"entryPoint": 2014,
									"id": 385,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_291": {
									"entryPoint": 1992,
									"id": 291,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1699": {
									"entryPoint": 2355,
									"id": 1699,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 697,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1848,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1506": {
									"entryPoint": 4150,
									"id": 1506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_204": {
									"entryPoint": 2112,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_336": {
									"entryPoint": 1409,
									"id": 336,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8083,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 7191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 6803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23045:11",
										"nodeType": "YulBlock",
										"src": "0:23045:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:77:11",
													"nodeType": "YulBlock",
													"src": "1860:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:11"
																},
																"nativeSrc": "1871:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:11"
															},
															"nativeSrc": "1871:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:11"
																		},
																		"nativeSrc": "1910:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:11"
																},
																"nativeSrc": "1903:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:11"
															},
															"nativeSrc": "1903:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:139:11"
											},
											{
												"body": {
													"nativeSrc": "1991:54:11",
													"nodeType": "YulBlock",
													"src": "1991:54:11",
													"statements": [
														{
															"nativeSrc": "2001:38:11",
															"nodeType": "YulAssignment",
															"src": "2001:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:11"
																		},
																		"nativeSrc": "2015:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:11"
																		},
																		"nativeSrc": "2031:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:11"
																},
																"nativeSrc": "2011:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:11",
														"nodeType": "YulTypedName",
														"src": "1974:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:11",
														"nodeType": "YulTypedName",
														"src": "1984:6:11",
														"type": ""
													}
												],
												"src": "1943:102:11"
											},
											{
												"body": {
													"nativeSrc": "2143:285:11",
													"nodeType": "YulBlock",
													"src": "2143:285:11",
													"statements": [
														{
															"nativeSrc": "2153:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:11"
																},
																"nativeSrc": "2167:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:11",
															"nodeType": "YulAssignment",
															"src": "2215:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:11"
																},
																"nativeSrc": "2222:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:11"
																		},
																		"nativeSrc": "2337:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:11"
																},
																"nativeSrc": "2302:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:11"
															},
															"nativeSrc": "2302:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:11"
														},
														{
															"nativeSrc": "2376:46:11",
															"nodeType": "YulAssignment",
															"src": "2376:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:11"
																		},
																		"nativeSrc": "2392:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:11"
																},
																"nativeSrc": "2383:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:11",
														"nodeType": "YulTypedName",
														"src": "2124:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:11",
														"nodeType": "YulTypedName",
														"src": "2131:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:11",
														"nodeType": "YulTypedName",
														"src": "2139:3:11",
														"type": ""
													}
												],
												"src": "2051:377:11"
											},
											{
												"body": {
													"nativeSrc": "2552:195:11",
													"nodeType": "YulBlock",
													"src": "2552:195:11",
													"statements": [
														{
															"nativeSrc": "2562:26:11",
															"nodeType": "YulAssignment",
															"src": "2562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:11"
																},
																"nativeSrc": "2570:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:11"
																		},
																		"nativeSrc": "2605:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:11"
																		},
																		"nativeSrc": "2624:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:11"
																},
																"nativeSrc": "2598:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:11"
															},
															"nativeSrc": "2598:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:11"
														},
														{
															"nativeSrc": "2654:86:11",
															"nodeType": "YulAssignment",
															"src": "2654:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:11"
																},
																"nativeSrc": "2662:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:11",
														"nodeType": "YulTypedName",
														"src": "2524:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:11",
														"nodeType": "YulTypedName",
														"src": "2536:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:11",
														"nodeType": "YulTypedName",
														"src": "2547:4:11",
														"type": ""
													}
												],
												"src": "2434:313:11"
											},
											{
												"body": {
													"nativeSrc": "2798:32:11",
													"nodeType": "YulBlock",
													"src": "2798:32:11",
													"statements": [
														{
															"nativeSrc": "2808:16:11",
															"nodeType": "YulAssignment",
															"src": "2808:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:11",
																"nodeType": "YulIdentifier",
																"src": "2819:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:11",
														"nodeType": "YulTypedName",
														"src": "2780:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:11",
														"nodeType": "YulTypedName",
														"src": "2790:7:11",
														"type": ""
													}
												],
												"src": "2753:77:11"
											},
											{
												"body": {
													"nativeSrc": "2879:79:11",
													"nodeType": "YulBlock",
													"src": "2879:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:11",
																"nodeType": "YulBlock",
																"src": "2936:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:11"
																			},
																			"nativeSrc": "2938:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:11"
																		},
																		"nativeSrc": "2938:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:11"
																				},
																				"nativeSrc": "2909:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:11"
																		},
																		"nativeSrc": "2899:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:11"
																},
																"nativeSrc": "2892:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:11"
															},
															"nativeSrc": "2889:63:11",
															"nodeType": "YulIf",
															"src": "2889:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:11",
														"nodeType": "YulTypedName",
														"src": "2872:5:11",
														"type": ""
													}
												],
												"src": "2836:122:11"
											},
											{
												"body": {
													"nativeSrc": "3016:87:11",
													"nodeType": "YulBlock",
													"src": "3016:87:11",
													"statements": [
														{
															"nativeSrc": "3026:29:11",
															"nodeType": "YulAssignment",
															"src": "3026:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:11"
																},
																"nativeSrc": "3035:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:11"
																},
																"nativeSrc": "3064:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:11"
															},
															"nativeSrc": "3064:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:11",
														"nodeType": "YulTypedName",
														"src": "2994:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:11",
														"nodeType": "YulTypedName",
														"src": "3002:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:11",
														"nodeType": "YulTypedName",
														"src": "3010:5:11",
														"type": ""
													}
												],
												"src": "2964:139:11"
											},
											{
												"body": {
													"nativeSrc": "3175:263:11",
													"nodeType": "YulBlock",
													"src": "3175:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:11",
																"nodeType": "YulBlock",
																"src": "3221:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:11"
																			},
																			"nativeSrc": "3223:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:11"
																		},
																		"nativeSrc": "3223:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:11"
																		},
																		"nativeSrc": "3192:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:11"
																},
																"nativeSrc": "3188:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:11"
															},
															"nativeSrc": "3185:119:11",
															"nodeType": "YulIf",
															"src": "3185:119:11"
														},
														{
															"nativeSrc": "3314:117:11",
															"nodeType": "YulBlock",
															"src": "3314:117:11",
															"statements": [
																{
																	"nativeSrc": "3329:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:11"
																				},
																				"nativeSrc": "3389:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:11"
																		},
																		"nativeSrc": "3368:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:11",
														"nodeType": "YulTypedName",
														"src": "3145:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:11",
														"nodeType": "YulTypedName",
														"src": "3156:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:11",
														"nodeType": "YulTypedName",
														"src": "3168:6:11",
														"type": ""
													}
												],
												"src": "3109:329:11"
											},
											{
												"body": {
													"nativeSrc": "3489:81:11",
													"nodeType": "YulBlock",
													"src": "3489:81:11",
													"statements": [
														{
															"nativeSrc": "3499:65:11",
															"nodeType": "YulAssignment",
															"src": "3499:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:11",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:11"
																},
																"nativeSrc": "3510:54:11",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:11",
														"nodeType": "YulTypedName",
														"src": "3471:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:11",
														"nodeType": "YulTypedName",
														"src": "3481:7:11",
														"type": ""
													}
												],
												"src": "3444:126:11"
											},
											{
												"body": {
													"nativeSrc": "3621:51:11",
													"nodeType": "YulBlock",
													"src": "3621:51:11",
													"statements": [
														{
															"nativeSrc": "3631:35:11",
															"nodeType": "YulAssignment",
															"src": "3631:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:11"
																},
																"nativeSrc": "3642:24:11",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:11",
														"nodeType": "YulTypedName",
														"src": "3603:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:11",
														"nodeType": "YulTypedName",
														"src": "3613:7:11",
														"type": ""
													}
												],
												"src": "3576:96:11"
											},
											{
												"body": {
													"nativeSrc": "3743:53:11",
													"nodeType": "YulBlock",
													"src": "3743:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:11"
																		},
																		"nativeSrc": "3765:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:11"
																},
																"nativeSrc": "3753:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:11"
															},
															"nativeSrc": "3753:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:11",
														"nodeType": "YulTypedName",
														"src": "3731:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:11",
														"nodeType": "YulTypedName",
														"src": "3738:3:11",
														"type": ""
													}
												],
												"src": "3678:118:11"
											},
											{
												"body": {
													"nativeSrc": "3900:124:11",
													"nodeType": "YulBlock",
													"src": "3900:124:11",
													"statements": [
														{
															"nativeSrc": "3910:26:11",
															"nodeType": "YulAssignment",
															"src": "3910:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:11"
																},
																"nativeSrc": "3918:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:11"
																		},
																		"nativeSrc": "3999:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:11"
																},
																"nativeSrc": "3946:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:11"
															},
															"nativeSrc": "3946:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:11",
														"nodeType": "YulTypedName",
														"src": "3872:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:11",
														"nodeType": "YulTypedName",
														"src": "3884:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:11",
														"nodeType": "YulTypedName",
														"src": "3895:4:11",
														"type": ""
													}
												],
												"src": "3802:222:11"
											},
											{
												"body": {
													"nativeSrc": "4073:79:11",
													"nodeType": "YulBlock",
													"src": "4073:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:11",
																"nodeType": "YulBlock",
																"src": "4130:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:11"
																			},
																			"nativeSrc": "4132:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:11"
																		},
																		"nativeSrc": "4132:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:11"
																				},
																				"nativeSrc": "4103:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:11"
																		},
																		"nativeSrc": "4093:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:11"
																},
																"nativeSrc": "4086:43:11",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:11"
															},
															"nativeSrc": "4083:63:11",
															"nodeType": "YulIf",
															"src": "4083:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:11",
														"nodeType": "YulTypedName",
														"src": "4066:5:11",
														"type": ""
													}
												],
												"src": "4030:122:11"
											},
											{
												"body": {
													"nativeSrc": "4210:87:11",
													"nodeType": "YulBlock",
													"src": "4210:87:11",
													"statements": [
														{
															"nativeSrc": "4220:29:11",
															"nodeType": "YulAssignment",
															"src": "4220:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:11"
																},
																"nativeSrc": "4229:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:11"
																},
																"nativeSrc": "4258:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:11"
															},
															"nativeSrc": "4258:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:11",
														"nodeType": "YulTypedName",
														"src": "4188:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:11",
														"nodeType": "YulTypedName",
														"src": "4196:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:11",
														"nodeType": "YulTypedName",
														"src": "4204:5:11",
														"type": ""
													}
												],
												"src": "4158:139:11"
											},
											{
												"body": {
													"nativeSrc": "4386:391:11",
													"nodeType": "YulBlock",
													"src": "4386:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:11",
																"nodeType": "YulBlock",
																"src": "4432:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:11"
																			},
																			"nativeSrc": "4434:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:11"
																		},
																		"nativeSrc": "4434:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:11"
																		},
																		"nativeSrc": "4403:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:11"
																},
																"nativeSrc": "4399:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:11"
															},
															"nativeSrc": "4396:119:11",
															"nodeType": "YulIf",
															"src": "4396:119:11"
														},
														{
															"nativeSrc": "4525:117:11",
															"nodeType": "YulBlock",
															"src": "4525:117:11",
															"statements": [
																{
																	"nativeSrc": "4540:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:11"
																				},
																				"nativeSrc": "4600:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:11"
																		},
																		"nativeSrc": "4579:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:11",
															"nodeType": "YulBlock",
															"src": "4652:118:11",
															"statements": [
																{
																	"nativeSrc": "4667:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:11"
																				},
																				"nativeSrc": "4728:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:11"
																		},
																		"nativeSrc": "4707:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:11",
														"nodeType": "YulTypedName",
														"src": "4348:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:11",
														"nodeType": "YulTypedName",
														"src": "4359:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:11",
														"nodeType": "YulTypedName",
														"src": "4371:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:11",
														"nodeType": "YulTypedName",
														"src": "4379:6:11",
														"type": ""
													}
												],
												"src": "4303:474:11"
											},
											{
												"body": {
													"nativeSrc": "4883:519:11",
													"nodeType": "YulBlock",
													"src": "4883:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:11",
																"nodeType": "YulBlock",
																"src": "4929:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:11"
																			},
																			"nativeSrc": "4931:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:11"
																		},
																		"nativeSrc": "4931:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:11"
																		},
																		"nativeSrc": "4900:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:11"
																},
																"nativeSrc": "4896:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:11"
															},
															"nativeSrc": "4893:119:11",
															"nodeType": "YulIf",
															"src": "4893:119:11"
														},
														{
															"nativeSrc": "5022:117:11",
															"nodeType": "YulBlock",
															"src": "5022:117:11",
															"statements": [
																{
																	"nativeSrc": "5037:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:11"
																				},
																				"nativeSrc": "5097:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:11"
																		},
																		"nativeSrc": "5076:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:11",
															"nodeType": "YulBlock",
															"src": "5149:118:11",
															"statements": [
																{
																	"nativeSrc": "5164:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:11"
																				},
																				"nativeSrc": "5225:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:11"
																		},
																		"nativeSrc": "5204:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:11",
															"nodeType": "YulBlock",
															"src": "5277:118:11",
															"statements": [
																{
																	"nativeSrc": "5292:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:11"
																				},
																				"nativeSrc": "5353:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:11"
																		},
																		"nativeSrc": "5332:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:11",
														"nodeType": "YulTypedName",
														"src": "4837:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:11",
														"nodeType": "YulTypedName",
														"src": "4848:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:11",
														"nodeType": "YulTypedName",
														"src": "4860:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:11",
														"nodeType": "YulTypedName",
														"src": "4868:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:11",
														"nodeType": "YulTypedName",
														"src": "4876:6:11",
														"type": ""
													}
												],
												"src": "4783:619:11"
											},
											{
												"body": {
													"nativeSrc": "5474:263:11",
													"nodeType": "YulBlock",
													"src": "5474:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:11",
																"nodeType": "YulBlock",
																"src": "5520:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:11"
																			},
																			"nativeSrc": "5522:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:11"
																		},
																		"nativeSrc": "5522:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:11"
																		},
																		"nativeSrc": "5491:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:11"
																},
																"nativeSrc": "5487:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:11"
															},
															"nativeSrc": "5484:119:11",
															"nodeType": "YulIf",
															"src": "5484:119:11"
														},
														{
															"nativeSrc": "5613:117:11",
															"nodeType": "YulBlock",
															"src": "5613:117:11",
															"statements": [
																{
																	"nativeSrc": "5628:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:11"
																				},
																				"nativeSrc": "5688:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:11"
																		},
																		"nativeSrc": "5667:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:11",
														"nodeType": "YulTypedName",
														"src": "5444:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:11",
														"nodeType": "YulTypedName",
														"src": "5455:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:11",
														"nodeType": "YulTypedName",
														"src": "5467:6:11",
														"type": ""
													}
												],
												"src": "5408:329:11"
											},
											{
												"body": {
													"nativeSrc": "5808:53:11",
													"nodeType": "YulBlock",
													"src": "5808:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:11"
																		},
																		"nativeSrc": "5830:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:11"
																},
																"nativeSrc": "5818:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:11"
															},
															"nativeSrc": "5818:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:11",
														"nodeType": "YulTypedName",
														"src": "5796:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:11",
														"nodeType": "YulTypedName",
														"src": "5803:3:11",
														"type": ""
													}
												],
												"src": "5743:118:11"
											},
											{
												"body": {
													"nativeSrc": "5965:124:11",
													"nodeType": "YulBlock",
													"src": "5965:124:11",
													"statements": [
														{
															"nativeSrc": "5975:26:11",
															"nodeType": "YulAssignment",
															"src": "5975:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:11"
																},
																"nativeSrc": "5983:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:11"
																		},
																		"nativeSrc": "6064:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:11"
																},
																"nativeSrc": "6011:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:11"
															},
															"nativeSrc": "6011:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:11",
														"nodeType": "YulTypedName",
														"src": "5937:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:11",
														"nodeType": "YulTypedName",
														"src": "5949:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:11",
														"nodeType": "YulTypedName",
														"src": "5960:4:11",
														"type": ""
													}
												],
												"src": "5867:222:11"
											},
											{
												"body": {
													"nativeSrc": "6135:76:11",
													"nodeType": "YulBlock",
													"src": "6135:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:11",
																"nodeType": "YulBlock",
																"src": "6189:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:11"
																			},
																			"nativeSrc": "6191:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:11"
																		},
																		"nativeSrc": "6191:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:11"
																				},
																				"nativeSrc": "6165:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:11"
																		},
																		"nativeSrc": "6155:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:11"
																},
																"nativeSrc": "6148:40:11",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:11"
															},
															"nativeSrc": "6145:60:11",
															"nodeType": "YulIf",
															"src": "6145:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:11",
														"nodeType": "YulTypedName",
														"src": "6128:5:11",
														"type": ""
													}
												],
												"src": "6095:116:11"
											},
											{
												"body": {
													"nativeSrc": "6266:84:11",
													"nodeType": "YulBlock",
													"src": "6266:84:11",
													"statements": [
														{
															"nativeSrc": "6276:29:11",
															"nodeType": "YulAssignment",
															"src": "6276:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:11"
																},
																"nativeSrc": "6285:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:11"
																},
																"nativeSrc": "6314:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:11"
															},
															"nativeSrc": "6314:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:11",
														"nodeType": "YulTypedName",
														"src": "6244:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:11",
														"nodeType": "YulTypedName",
														"src": "6252:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:11",
														"nodeType": "YulTypedName",
														"src": "6260:5:11",
														"type": ""
													}
												],
												"src": "6217:133:11"
											},
											{
												"body": {
													"nativeSrc": "6436:388:11",
													"nodeType": "YulBlock",
													"src": "6436:388:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:11",
																"nodeType": "YulBlock",
																"src": "6482:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:11"
																			},
																			"nativeSrc": "6484:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:11"
																		},
																		"nativeSrc": "6484:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:11"
																		},
																		"nativeSrc": "6453:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:11"
																},
																"nativeSrc": "6449:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:11"
															},
															"nativeSrc": "6446:119:11",
															"nodeType": "YulIf",
															"src": "6446:119:11"
														},
														{
															"nativeSrc": "6575:117:11",
															"nodeType": "YulBlock",
															"src": "6575:117:11",
															"statements": [
																{
																	"nativeSrc": "6590:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:11"
																				},
																				"nativeSrc": "6650:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:11"
																		},
																		"nativeSrc": "6629:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:11",
															"nodeType": "YulBlock",
															"src": "6702:115:11",
															"statements": [
																{
																	"nativeSrc": "6717:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:11",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:11"
																				},
																				"nativeSrc": "6775:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:11"
																		},
																		"nativeSrc": "6757:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:11",
														"nodeType": "YulTypedName",
														"src": "6398:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:11",
														"nodeType": "YulTypedName",
														"src": "6409:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:11",
														"nodeType": "YulTypedName",
														"src": "6421:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:11",
														"nodeType": "YulTypedName",
														"src": "6429:6:11",
														"type": ""
													}
												],
												"src": "6356:468:11"
											},
											{
												"body": {
													"nativeSrc": "6919:28:11",
													"nodeType": "YulBlock",
													"src": "6919:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:11"
																},
																"nativeSrc": "6929:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:11"
															},
															"nativeSrc": "6929:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:11"
											},
											{
												"body": {
													"nativeSrc": "7042:28:11",
													"nodeType": "YulBlock",
													"src": "7042:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:11"
																},
																"nativeSrc": "7052:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:11"
															},
															"nativeSrc": "7052:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:11"
											},
											{
												"body": {
													"nativeSrc": "7104:152:11",
													"nodeType": "YulBlock",
													"src": "7104:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:11"
																},
																"nativeSrc": "7114:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:11"
															},
															"nativeSrc": "7114:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:11"
																},
																"nativeSrc": "7211:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:11"
															},
															"nativeSrc": "7211:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:11"
																},
																"nativeSrc": "7235:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:11"
															},
															"nativeSrc": "7235:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:11"
											},
											{
												"body": {
													"nativeSrc": "7305:238:11",
													"nodeType": "YulBlock",
													"src": "7305:238:11",
													"statements": [
														{
															"nativeSrc": "7315:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:11"
																		},
																		"nativeSrc": "7345:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:11"
																},
																"nativeSrc": "7333:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:11",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:11",
																"nodeType": "YulBlock",
																"src": "7484:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:11"
																			},
																			"nativeSrc": "7486:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:11"
																		},
																		"nativeSrc": "7486:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:11",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:11"
																		},
																		"nativeSrc": "7424:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:11"
																		},
																		"nativeSrc": "7460:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:11"
																},
																"nativeSrc": "7421:62:11",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:11"
															},
															"nativeSrc": "7418:88:11",
															"nodeType": "YulIf",
															"src": "7418:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:11"
																},
																"nativeSrc": "7515:22:11",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:11"
															},
															"nativeSrc": "7515:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:11",
														"nodeType": "YulTypedName",
														"src": "7291:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:11",
														"nodeType": "YulTypedName",
														"src": "7299:4:11",
														"type": ""
													}
												],
												"src": "7262:281:11"
											},
											{
												"body": {
													"nativeSrc": "7590:88:11",
													"nodeType": "YulBlock",
													"src": "7590:88:11",
													"statements": [
														{
															"nativeSrc": "7600:30:11",
															"nodeType": "YulAssignment",
															"src": "7600:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:11"
																},
																"nativeSrc": "7610:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:11"
																},
																"nativeSrc": "7639:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:11"
															},
															"nativeSrc": "7639:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:11",
														"nodeType": "YulTypedName",
														"src": "7574:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:11",
														"nodeType": "YulTypedName",
														"src": "7583:6:11",
														"type": ""
													}
												],
												"src": "7549:129:11"
											},
											{
												"body": {
													"nativeSrc": "7750:241:11",
													"nodeType": "YulBlock",
													"src": "7750:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:11",
																"nodeType": "YulBlock",
																"src": "7855:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:11"
																			},
																			"nativeSrc": "7857:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:11"
																		},
																		"nativeSrc": "7857:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:11",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:11"
																},
																"nativeSrc": "7824:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:11"
															},
															"nativeSrc": "7821:56:11",
															"nodeType": "YulIf",
															"src": "7821:56:11"
														},
														{
															"nativeSrc": "7887:37:11",
															"nodeType": "YulAssignment",
															"src": "7887:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:11"
																},
																"nativeSrc": "7895:29:11",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:11"
																}
															]
														},
														{
															"nativeSrc": "7961:23:11",
															"nodeType": "YulAssignment",
															"src": "7961:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:11"
																},
																"nativeSrc": "7969:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:11",
														"nodeType": "YulTypedName",
														"src": "7734:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:11",
														"nodeType": "YulTypedName",
														"src": "7745:4:11",
														"type": ""
													}
												],
												"src": "7684:307:11"
											},
											{
												"body": {
													"nativeSrc": "8061:84:11",
													"nodeType": "YulBlock",
													"src": "8061:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:11"
																},
																"nativeSrc": "8072:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:11"
															},
															"nativeSrc": "8072:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:11"
																		},
																		"nativeSrc": "8118:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:11"
																},
																"nativeSrc": "8111:27:11",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:11"
															},
															"nativeSrc": "8111:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:11",
														"nodeType": "YulTypedName",
														"src": "8043:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:11",
														"nodeType": "YulTypedName",
														"src": "8048:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:11",
														"nodeType": "YulTypedName",
														"src": "8053:6:11",
														"type": ""
													}
												],
												"src": "7997:148:11"
											},
											{
												"body": {
													"nativeSrc": "8234:340:11",
													"nodeType": "YulBlock",
													"src": "8234:340:11",
													"statements": [
														{
															"nativeSrc": "8244:74:11",
															"nodeType": "YulAssignment",
															"src": "8244:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:11",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:11"
																		},
																		"nativeSrc": "8269:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:11"
																},
																"nativeSrc": "8253:65:11",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:11"
																},
																"nativeSrc": "8327:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:11"
															},
															"nativeSrc": "8327:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:11"
														},
														{
															"nativeSrc": "8357:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:11"
																},
																"nativeSrc": "8368:16:11",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:11",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:11",
																"nodeType": "YulBlock",
																"src": "8422:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:11"
																			},
																			"nativeSrc": "8424:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:11"
																		},
																		"nativeSrc": "8424:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:11"
																		},
																		"nativeSrc": "8399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:11"
																},
																"nativeSrc": "8396:25:11",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:11"
															},
															"nativeSrc": "8393:112:11",
															"nodeType": "YulIf",
															"src": "8393:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:11",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:11"
																},
																"nativeSrc": "8514:54:11",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:11"
															},
															"nativeSrc": "8514:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:11",
														"nodeType": "YulTypedName",
														"src": "8207:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:11",
														"nodeType": "YulTypedName",
														"src": "8212:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:11",
														"nodeType": "YulTypedName",
														"src": "8220:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:11",
														"nodeType": "YulTypedName",
														"src": "8228:5:11",
														"type": ""
													}
												],
												"src": "8151:423:11"
											},
											{
												"body": {
													"nativeSrc": "8654:277:11",
													"nodeType": "YulBlock",
													"src": "8654:277:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:11",
																"nodeType": "YulBlock",
																"src": "8703:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:11"
																			},
																			"nativeSrc": "8705:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:11"
																		},
																		"nativeSrc": "8705:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:11",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:11"
																				},
																				"nativeSrc": "8678:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:11"
																		},
																		"nativeSrc": "8674:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:11"
																},
																"nativeSrc": "8667:35:11",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:11"
															},
															"nativeSrc": "8664:122:11",
															"nodeType": "YulIf",
															"src": "8664:122:11"
														},
														{
															"nativeSrc": "8795:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:11"
																},
																"nativeSrc": "8809:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:11",
															"nodeType": "YulAssignment",
															"src": "8838:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:11"
																		},
																		"nativeSrc": "8894:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:11",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:11"
																},
																"nativeSrc": "8847:78:11",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:11",
														"nodeType": "YulTypedName",
														"src": "8632:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:11",
														"nodeType": "YulTypedName",
														"src": "8640:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:11",
														"nodeType": "YulTypedName",
														"src": "8648:5:11",
														"type": ""
													}
												],
												"src": "8593:338:11"
											},
											{
												"body": {
													"nativeSrc": "9063:817:11",
													"nodeType": "YulBlock",
													"src": "9063:817:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:11",
																"nodeType": "YulBlock",
																"src": "9110:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:11"
																			},
																			"nativeSrc": "9112:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:11"
																		},
																		"nativeSrc": "9112:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:11"
																		},
																		"nativeSrc": "9080:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:11"
																},
																"nativeSrc": "9076:33:11",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:11"
															},
															"nativeSrc": "9073:120:11",
															"nodeType": "YulIf",
															"src": "9073:120:11"
														},
														{
															"nativeSrc": "9203:117:11",
															"nodeType": "YulBlock",
															"src": "9203:117:11",
															"statements": [
																{
																	"nativeSrc": "9218:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:11"
																				},
																				"nativeSrc": "9278:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:11"
																		},
																		"nativeSrc": "9257:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:11",
															"nodeType": "YulBlock",
															"src": "9330:118:11",
															"statements": [
																{
																	"nativeSrc": "9345:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:11"
																				},
																				"nativeSrc": "9406:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:11"
																		},
																		"nativeSrc": "9385:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:11",
															"nodeType": "YulBlock",
															"src": "9458:118:11",
															"statements": [
																{
																	"nativeSrc": "9473:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:11"
																				},
																				"nativeSrc": "9534:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:11"
																		},
																		"nativeSrc": "9513:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:11",
															"nodeType": "YulBlock",
															"src": "9586:287:11",
															"statements": [
																{
																	"nativeSrc": "9601:46:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:11",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:11"
																				},
																				"nativeSrc": "9628:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:11"
																		},
																		"nativeSrc": "9615:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:11",
																		"nodeType": "YulBlock",
																		"src": "9694:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:11"
																					},
																					"nativeSrc": "9696:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:11"
																				},
																				"nativeSrc": "9696:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:11",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:11"
																		},
																		"nativeSrc": "9663:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:11"
																	},
																	"nativeSrc": "9660:117:11",
																	"nodeType": "YulIf",
																	"src": "9660:117:11"
																},
																{
																	"nativeSrc": "9791:72:11",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:11"
																				},
																				"nativeSrc": "9831:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:11",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:11"
																		},
																		"nativeSrc": "9801:62:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:11",
														"nodeType": "YulTypedName",
														"src": "9009:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:11",
														"nodeType": "YulTypedName",
														"src": "9020:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:11",
														"nodeType": "YulTypedName",
														"src": "9032:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:11",
														"nodeType": "YulTypedName",
														"src": "9040:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:11",
														"nodeType": "YulTypedName",
														"src": "9048:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:11",
														"nodeType": "YulTypedName",
														"src": "9056:6:11",
														"type": ""
													}
												],
												"src": "8937:943:11"
											},
											{
												"body": {
													"nativeSrc": "9969:391:11",
													"nodeType": "YulBlock",
													"src": "9969:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:11",
																"nodeType": "YulBlock",
																"src": "10015:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:11"
																			},
																			"nativeSrc": "10017:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:11"
																		},
																		"nativeSrc": "10017:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:11"
																		},
																		"nativeSrc": "9986:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:11"
																},
																"nativeSrc": "9982:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:11"
															},
															"nativeSrc": "9979:119:11",
															"nodeType": "YulIf",
															"src": "9979:119:11"
														},
														{
															"nativeSrc": "10108:117:11",
															"nodeType": "YulBlock",
															"src": "10108:117:11",
															"statements": [
																{
																	"nativeSrc": "10123:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:11"
																				},
																				"nativeSrc": "10183:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:11"
																		},
																		"nativeSrc": "10162:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:11",
															"nodeType": "YulBlock",
															"src": "10235:118:11",
															"statements": [
																{
																	"nativeSrc": "10250:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:11"
																				},
																				"nativeSrc": "10311:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:11"
																		},
																		"nativeSrc": "10290:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:11",
														"nodeType": "YulTypedName",
														"src": "9931:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:11",
														"nodeType": "YulTypedName",
														"src": "9942:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:11",
														"nodeType": "YulTypedName",
														"src": "9954:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:11",
														"nodeType": "YulTypedName",
														"src": "9962:6:11",
														"type": ""
													}
												],
												"src": "9886:474:11"
											},
											{
												"body": {
													"nativeSrc": "10394:152:11",
													"nodeType": "YulBlock",
													"src": "10394:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:11"
																},
																"nativeSrc": "10404:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:11"
															},
															"nativeSrc": "10404:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:11"
																},
																"nativeSrc": "10501:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:11"
															},
															"nativeSrc": "10501:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:11"
																},
																"nativeSrc": "10525:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:11"
															},
															"nativeSrc": "10525:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:11"
											},
											{
												"body": {
													"nativeSrc": "10603:269:11",
													"nodeType": "YulBlock",
													"src": "10603:269:11",
													"statements": [
														{
															"nativeSrc": "10613:22:11",
															"nodeType": "YulAssignment",
															"src": "10613:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:11"
																},
																"nativeSrc": "10623:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:11"
																}
															]
														},
														{
															"nativeSrc": "10644:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:11"
																},
																"nativeSrc": "10670:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:11",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:11",
																"nodeType": "YulBlock",
																"src": "10721:51:11",
																"statements": [
																	{
																		"nativeSrc": "10735:27:11",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:11"
																			},
																			"nativeSrc": "10745:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:11"
																},
																"nativeSrc": "10694:26:11",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:11"
															},
															"nativeSrc": "10691:81:11",
															"nodeType": "YulIf",
															"src": "10691:81:11"
														},
														{
															"body": {
																"nativeSrc": "10824:42:11",
																"nodeType": "YulBlock",
																"src": "10824:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:11"
																			},
																			"nativeSrc": "10838:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:11"
																		},
																		"nativeSrc": "10838:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:11"
																		},
																		"nativeSrc": "10808:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:11"
																},
																"nativeSrc": "10785:38:11",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:11"
															},
															"nativeSrc": "10782:84:11",
															"nodeType": "YulIf",
															"src": "10782:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:11",
														"nodeType": "YulTypedName",
														"src": "10587:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:11",
														"nodeType": "YulTypedName",
														"src": "10596:6:11",
														"type": ""
													}
												],
												"src": "10552:320:11"
											},
											{
												"body": {
													"nativeSrc": "10984:114:11",
													"nodeType": "YulBlock",
													"src": "10984:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11006:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11006:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11014:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11014:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11002:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11002:3:11"
																		},
																		"nativeSrc": "11002:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11002:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "11018:34:11",
																		"nodeType": "YulLiteral",
																		"src": "11018:34:11",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10995:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10995:6:11"
																},
																"nativeSrc": "10995:58:11",
																"nodeType": "YulFunctionCall",
																"src": "10995:58:11"
															},
															"nativeSrc": "10995:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "10995:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11074:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11074:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11082:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11082:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11070:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11070:3:11"
																		},
																		"nativeSrc": "11070:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11070:15:11"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "11087:3:11",
																		"nodeType": "YulLiteral",
																		"src": "11087:3:11",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11063:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:11"
																},
																"nativeSrc": "11063:28:11",
																"nodeType": "YulFunctionCall",
																"src": "11063:28:11"
															},
															"nativeSrc": "11063:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "11063:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "10878:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10976:6:11",
														"nodeType": "YulTypedName",
														"src": "10976:6:11",
														"type": ""
													}
												],
												"src": "10878:220:11"
											},
											{
												"body": {
													"nativeSrc": "11250:220:11",
													"nodeType": "YulBlock",
													"src": "11250:220:11",
													"statements": [
														{
															"nativeSrc": "11260:74:11",
															"nodeType": "YulAssignment",
															"src": "11260:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11326:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11326:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11331:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11331:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11267:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11267:58:11"
																},
																"nativeSrc": "11267:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11267:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11260:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11432:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11432:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "11343:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11343:88:11"
																},
																"nativeSrc": "11343:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11343:93:11"
															},
															"nativeSrc": "11343:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11343:93:11"
														},
														{
															"nativeSrc": "11445:19:11",
															"nodeType": "YulAssignment",
															"src": "11445:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11456:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11456:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11461:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11461:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11452:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:11"
																},
																"nativeSrc": "11452:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11452:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11445:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11445:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11104:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11238:3:11",
														"nodeType": "YulTypedName",
														"src": "11238:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11246:3:11",
														"nodeType": "YulTypedName",
														"src": "11246:3:11",
														"type": ""
													}
												],
												"src": "11104:366:11"
											},
											{
												"body": {
													"nativeSrc": "11647:248:11",
													"nodeType": "YulBlock",
													"src": "11647:248:11",
													"statements": [
														{
															"nativeSrc": "11657:26:11",
															"nodeType": "YulAssignment",
															"src": "11657:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11669:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11669:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11680:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11680:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11665:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11665:3:11"
																},
																"nativeSrc": "11665:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11665:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11657:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11657:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11704:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11704:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11715:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11715:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11700:3:11"
																		},
																		"nativeSrc": "11700:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11700:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11723:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11723:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11729:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11729:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11719:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11719:3:11"
																		},
																		"nativeSrc": "11719:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11719:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11693:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11693:6:11"
																},
																"nativeSrc": "11693:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11693:47:11"
															},
															"nativeSrc": "11693:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11693:47:11"
														},
														{
															"nativeSrc": "11749:139:11",
															"nodeType": "YulAssignment",
															"src": "11749:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11883:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11883:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11757:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11757:124:11"
																},
																"nativeSrc": "11757:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11757:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11749:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11749:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11476:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11627:9:11",
														"nodeType": "YulTypedName",
														"src": "11627:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11642:4:11",
														"nodeType": "YulTypedName",
														"src": "11642:4:11",
														"type": ""
													}
												],
												"src": "11476:419:11"
											},
											{
												"body": {
													"nativeSrc": "12007:142:11",
													"nodeType": "YulBlock",
													"src": "12007:142:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12029:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12029:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12037:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12037:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12025:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12025:3:11"
																		},
																		"nativeSrc": "12025:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12025:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "12041:34:11",
																		"nodeType": "YulLiteral",
																		"src": "12041:34:11",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12018:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12018:6:11"
																},
																"nativeSrc": "12018:58:11",
																"nodeType": "YulFunctionCall",
																"src": "12018:58:11"
															},
															"nativeSrc": "12018:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "12018:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12097:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12097:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12105:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12105:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12093:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12093:3:11"
																		},
																		"nativeSrc": "12093:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12093:15:11"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "12110:31:11",
																		"nodeType": "YulLiteral",
																		"src": "12110:31:11",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12086:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12086:6:11"
																},
																"nativeSrc": "12086:56:11",
																"nodeType": "YulFunctionCall",
																"src": "12086:56:11"
															},
															"nativeSrc": "12086:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "12086:56:11"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nativeSrc": "11901:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11999:6:11",
														"nodeType": "YulTypedName",
														"src": "11999:6:11",
														"type": ""
													}
												],
												"src": "11901:248:11"
											},
											{
												"body": {
													"nativeSrc": "12301:220:11",
													"nodeType": "YulBlock",
													"src": "12301:220:11",
													"statements": [
														{
															"nativeSrc": "12311:74:11",
															"nodeType": "YulAssignment",
															"src": "12311:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12377:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12377:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12382:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12382:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12318:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12318:58:11"
																},
																"nativeSrc": "12318:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12318:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12311:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12311:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12483:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12483:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nativeSrc": "12394:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12394:88:11"
																},
																"nativeSrc": "12394:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12394:93:11"
															},
															"nativeSrc": "12394:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12394:93:11"
														},
														{
															"nativeSrc": "12496:19:11",
															"nodeType": "YulAssignment",
															"src": "12496:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12507:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12507:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12512:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12512:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12503:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12503:3:11"
																},
																"nativeSrc": "12503:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12503:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12496:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12155:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12289:3:11",
														"nodeType": "YulTypedName",
														"src": "12289:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12297:3:11",
														"nodeType": "YulTypedName",
														"src": "12297:3:11",
														"type": ""
													}
												],
												"src": "12155:366:11"
											},
											{
												"body": {
													"nativeSrc": "12698:248:11",
													"nodeType": "YulBlock",
													"src": "12698:248:11",
													"statements": [
														{
															"nativeSrc": "12708:26:11",
															"nodeType": "YulAssignment",
															"src": "12708:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12720:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12720:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12731:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12731:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12716:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12716:3:11"
																},
																"nativeSrc": "12716:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12716:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12708:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12708:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12755:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12755:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12766:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12766:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12751:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12751:3:11"
																		},
																		"nativeSrc": "12751:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12751:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12774:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12774:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12780:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12780:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12770:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12770:3:11"
																		},
																		"nativeSrc": "12770:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12770:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12744:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12744:6:11"
																},
																"nativeSrc": "12744:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12744:47:11"
															},
															"nativeSrc": "12744:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12744:47:11"
														},
														{
															"nativeSrc": "12800:139:11",
															"nodeType": "YulAssignment",
															"src": "12800:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12934:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12934:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12808:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12808:124:11"
																},
																"nativeSrc": "12808:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12808:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12800:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12800:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12527:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12678:9:11",
														"nodeType": "YulTypedName",
														"src": "12678:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12693:4:11",
														"nodeType": "YulTypedName",
														"src": "12693:4:11",
														"type": ""
													}
												],
												"src": "12527:419:11"
											},
											{
												"body": {
													"nativeSrc": "13058:126:11",
													"nodeType": "YulBlock",
													"src": "13058:126:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13080:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13080:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13088:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13088:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13076:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13076:3:11"
																		},
																		"nativeSrc": "13076:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13076:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "13092:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13092:34:11",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13069:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13069:6:11"
																},
																"nativeSrc": "13069:58:11",
																"nodeType": "YulFunctionCall",
																"src": "13069:58:11"
															},
															"nativeSrc": "13069:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "13069:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13148:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13148:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13156:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13156:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13144:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13144:3:11"
																		},
																		"nativeSrc": "13144:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13144:15:11"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "13161:15:11",
																		"nodeType": "YulLiteral",
																		"src": "13161:15:11",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13137:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13137:6:11"
																},
																"nativeSrc": "13137:40:11",
																"nodeType": "YulFunctionCall",
																"src": "13137:40:11"
															},
															"nativeSrc": "13137:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "13137:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nativeSrc": "12952:232:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13050:6:11",
														"nodeType": "YulTypedName",
														"src": "13050:6:11",
														"type": ""
													}
												],
												"src": "12952:232:11"
											},
											{
												"body": {
													"nativeSrc": "13336:220:11",
													"nodeType": "YulBlock",
													"src": "13336:220:11",
													"statements": [
														{
															"nativeSrc": "13346:74:11",
															"nodeType": "YulAssignment",
															"src": "13346:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13412:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13412:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13417:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13417:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13353:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13353:58:11"
																},
																"nativeSrc": "13353:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13353:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13346:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13346:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13518:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13518:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nativeSrc": "13429:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13429:88:11"
																},
																"nativeSrc": "13429:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13429:93:11"
															},
															"nativeSrc": "13429:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13429:93:11"
														},
														{
															"nativeSrc": "13531:19:11",
															"nodeType": "YulAssignment",
															"src": "13531:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13542:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13547:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13547:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13538:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13538:3:11"
																},
																"nativeSrc": "13538:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13538:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13531:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13531:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13190:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13324:3:11",
														"nodeType": "YulTypedName",
														"src": "13324:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13332:3:11",
														"nodeType": "YulTypedName",
														"src": "13332:3:11",
														"type": ""
													}
												],
												"src": "13190:366:11"
											},
											{
												"body": {
													"nativeSrc": "13733:248:11",
													"nodeType": "YulBlock",
													"src": "13733:248:11",
													"statements": [
														{
															"nativeSrc": "13743:26:11",
															"nodeType": "YulAssignment",
															"src": "13743:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13755:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13755:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13766:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13766:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13751:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13751:3:11"
																},
																"nativeSrc": "13751:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13751:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13743:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13743:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13790:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13790:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13801:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13801:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13786:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13786:3:11"
																		},
																		"nativeSrc": "13786:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13786:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13809:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13809:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13815:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13815:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13805:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13805:3:11"
																		},
																		"nativeSrc": "13805:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13805:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13779:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13779:6:11"
																},
																"nativeSrc": "13779:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13779:47:11"
															},
															"nativeSrc": "13779:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13779:47:11"
														},
														{
															"nativeSrc": "13835:139:11",
															"nodeType": "YulAssignment",
															"src": "13835:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13969:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13969:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13843:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13843:124:11"
																},
																"nativeSrc": "13843:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13843:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13835:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13835:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13562:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13713:9:11",
														"nodeType": "YulTypedName",
														"src": "13713:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13728:4:11",
														"nodeType": "YulTypedName",
														"src": "13728:4:11",
														"type": ""
													}
												],
												"src": "13562:419:11"
											},
											{
												"body": {
													"nativeSrc": "14093:68:11",
													"nodeType": "YulBlock",
													"src": "14093:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14115:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14115:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14123:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14123:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14111:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:11"
																		},
																		"nativeSrc": "14111:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14111:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "14127:26:11",
																		"nodeType": "YulLiteral",
																		"src": "14127:26:11",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14104:6:11"
																},
																"nativeSrc": "14104:50:11",
																"nodeType": "YulFunctionCall",
																"src": "14104:50:11"
															},
															"nativeSrc": "14104:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "14104:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nativeSrc": "13987:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14085:6:11",
														"nodeType": "YulTypedName",
														"src": "14085:6:11",
														"type": ""
													}
												],
												"src": "13987:174:11"
											},
											{
												"body": {
													"nativeSrc": "14313:220:11",
													"nodeType": "YulBlock",
													"src": "14313:220:11",
													"statements": [
														{
															"nativeSrc": "14323:74:11",
															"nodeType": "YulAssignment",
															"src": "14323:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14389:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14389:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14394:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14394:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14330:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14330:58:11"
																},
																"nativeSrc": "14330:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14330:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14323:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14323:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14495:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14495:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nativeSrc": "14406:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14406:88:11"
																},
																"nativeSrc": "14406:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14406:93:11"
															},
															"nativeSrc": "14406:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14406:93:11"
														},
														{
															"nativeSrc": "14508:19:11",
															"nodeType": "YulAssignment",
															"src": "14508:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14519:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14519:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14524:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14524:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14515:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14515:3:11"
																},
																"nativeSrc": "14515:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14515:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14508:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14167:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14301:3:11",
														"nodeType": "YulTypedName",
														"src": "14301:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14309:3:11",
														"nodeType": "YulTypedName",
														"src": "14309:3:11",
														"type": ""
													}
												],
												"src": "14167:366:11"
											},
											{
												"body": {
													"nativeSrc": "14710:248:11",
													"nodeType": "YulBlock",
													"src": "14710:248:11",
													"statements": [
														{
															"nativeSrc": "14720:26:11",
															"nodeType": "YulAssignment",
															"src": "14720:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14732:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14732:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14743:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14743:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14728:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14728:3:11"
																},
																"nativeSrc": "14728:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14728:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14720:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14720:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14767:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14767:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14778:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14778:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14763:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14763:3:11"
																		},
																		"nativeSrc": "14763:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14763:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14786:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14786:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14792:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14792:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14782:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14782:3:11"
																		},
																		"nativeSrc": "14782:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14782:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14756:6:11"
																},
																"nativeSrc": "14756:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14756:47:11"
															},
															"nativeSrc": "14756:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14756:47:11"
														},
														{
															"nativeSrc": "14812:139:11",
															"nodeType": "YulAssignment",
															"src": "14812:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14946:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14946:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14820:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14820:124:11"
																},
																"nativeSrc": "14820:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14820:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14812:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14812:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14539:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14690:9:11",
														"nodeType": "YulTypedName",
														"src": "14690:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14705:4:11",
														"nodeType": "YulTypedName",
														"src": "14705:4:11",
														"type": ""
													}
												],
												"src": "14539:419:11"
											},
											{
												"body": {
													"nativeSrc": "15070:122:11",
													"nodeType": "YulBlock",
													"src": "15070:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15092:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15092:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15100:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15100:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15088:3:11"
																		},
																		"nativeSrc": "15088:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15088:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "15104:34:11",
																		"nodeType": "YulLiteral",
																		"src": "15104:34:11",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15081:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15081:6:11"
																},
																"nativeSrc": "15081:58:11",
																"nodeType": "YulFunctionCall",
																"src": "15081:58:11"
															},
															"nativeSrc": "15081:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "15081:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15160:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15160:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15168:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15168:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15156:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15156:3:11"
																		},
																		"nativeSrc": "15156:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15156:15:11"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "15173:11:11",
																		"nodeType": "YulLiteral",
																		"src": "15173:11:11",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15149:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15149:6:11"
																},
																"nativeSrc": "15149:36:11",
																"nodeType": "YulFunctionCall",
																"src": "15149:36:11"
															},
															"nativeSrc": "15149:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "15149:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nativeSrc": "14964:228:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15062:6:11",
														"nodeType": "YulTypedName",
														"src": "15062:6:11",
														"type": ""
													}
												],
												"src": "14964:228:11"
											},
											{
												"body": {
													"nativeSrc": "15344:220:11",
													"nodeType": "YulBlock",
													"src": "15344:220:11",
													"statements": [
														{
															"nativeSrc": "15354:74:11",
															"nodeType": "YulAssignment",
															"src": "15354:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15420:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15420:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15425:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15425:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15361:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15361:58:11"
																},
																"nativeSrc": "15361:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15361:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15354:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15354:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15526:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15526:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nativeSrc": "15437:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15437:88:11"
																},
																"nativeSrc": "15437:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15437:93:11"
															},
															"nativeSrc": "15437:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15437:93:11"
														},
														{
															"nativeSrc": "15539:19:11",
															"nodeType": "YulAssignment",
															"src": "15539:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15550:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15550:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15555:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15555:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15546:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15546:3:11"
																},
																"nativeSrc": "15546:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15546:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15539:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15539:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15198:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15332:3:11",
														"nodeType": "YulTypedName",
														"src": "15332:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15340:3:11",
														"nodeType": "YulTypedName",
														"src": "15340:3:11",
														"type": ""
													}
												],
												"src": "15198:366:11"
											},
											{
												"body": {
													"nativeSrc": "15741:248:11",
													"nodeType": "YulBlock",
													"src": "15741:248:11",
													"statements": [
														{
															"nativeSrc": "15751:26:11",
															"nodeType": "YulAssignment",
															"src": "15751:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15763:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15763:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15774:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15774:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15759:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15759:3:11"
																},
																"nativeSrc": "15759:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15759:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15751:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15751:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15798:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15798:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15809:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15809:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15794:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15794:3:11"
																		},
																		"nativeSrc": "15794:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15794:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15817:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15817:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15823:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15823:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15813:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15813:3:11"
																		},
																		"nativeSrc": "15813:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15813:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15787:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15787:6:11"
																},
																"nativeSrc": "15787:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15787:47:11"
															},
															"nativeSrc": "15787:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15787:47:11"
														},
														{
															"nativeSrc": "15843:139:11",
															"nodeType": "YulAssignment",
															"src": "15843:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15977:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15977:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15851:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15851:124:11"
																},
																"nativeSrc": "15851:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15851:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15843:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15843:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15570:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15721:9:11",
														"nodeType": "YulTypedName",
														"src": "15721:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15736:4:11",
														"nodeType": "YulTypedName",
														"src": "15736:4:11",
														"type": ""
													}
												],
												"src": "15570:419:11"
											},
											{
												"body": {
													"nativeSrc": "16109:34:11",
													"nodeType": "YulBlock",
													"src": "16109:34:11",
													"statements": [
														{
															"nativeSrc": "16119:18:11",
															"nodeType": "YulAssignment",
															"src": "16119:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "16134:3:11",
																"nodeType": "YulIdentifier",
																"src": "16134:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16119:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "16119:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15995:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16081:3:11",
														"nodeType": "YulTypedName",
														"src": "16081:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16086:6:11",
														"nodeType": "YulTypedName",
														"src": "16086:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16097:11:11",
														"nodeType": "YulTypedName",
														"src": "16097:11:11",
														"type": ""
													}
												],
												"src": "15995:148:11"
											},
											{
												"body": {
													"nativeSrc": "16259:280:11",
													"nodeType": "YulBlock",
													"src": "16259:280:11",
													"statements": [
														{
															"nativeSrc": "16269:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "16269:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16316:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "16316:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16283:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "16283:32:11"
																},
																"nativeSrc": "16283:39:11",
																"nodeType": "YulFunctionCall",
																"src": "16283:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16273:6:11",
																	"nodeType": "YulTypedName",
																	"src": "16273:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16331:96:11",
															"nodeType": "YulAssignment",
															"src": "16331:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16415:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16415:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16420:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16420:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16338:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "16338:76:11"
																},
																"nativeSrc": "16338:89:11",
																"nodeType": "YulFunctionCall",
																"src": "16338:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16331:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16331:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16475:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "16475:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16482:4:11",
																				"nodeType": "YulLiteral",
																				"src": "16482:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16471:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16471:3:11"
																		},
																		"nativeSrc": "16471:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16471:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16489:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16489:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16494:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16494:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16436:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "16436:34:11"
																},
																"nativeSrc": "16436:65:11",
																"nodeType": "YulFunctionCall",
																"src": "16436:65:11"
															},
															"nativeSrc": "16436:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "16436:65:11"
														},
														{
															"nativeSrc": "16510:23:11",
															"nodeType": "YulAssignment",
															"src": "16510:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16521:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16521:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16526:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16526:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16517:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16517:3:11"
																},
																"nativeSrc": "16517:16:11",
																"nodeType": "YulFunctionCall",
																"src": "16517:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16510:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16510:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16149:390:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16240:5:11",
														"nodeType": "YulTypedName",
														"src": "16240:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16247:3:11",
														"nodeType": "YulTypedName",
														"src": "16247:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16255:3:11",
														"nodeType": "YulTypedName",
														"src": "16255:3:11",
														"type": ""
													}
												],
												"src": "16149:390:11"
											},
											{
												"body": {
													"nativeSrc": "16729:251:11",
													"nodeType": "YulBlock",
													"src": "16729:251:11",
													"statements": [
														{
															"nativeSrc": "16740:102:11",
															"nodeType": "YulAssignment",
															"src": "16740:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16829:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16829:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16838:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16838:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16747:81:11",
																	"nodeType": "YulIdentifier",
																	"src": "16747:81:11"
																},
																"nativeSrc": "16747:95:11",
																"nodeType": "YulFunctionCall",
																"src": "16747:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16740:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16740:3:11"
																}
															]
														},
														{
															"nativeSrc": "16852:102:11",
															"nodeType": "YulAssignment",
															"src": "16852:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16941:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16941:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16950:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16950:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16859:81:11",
																	"nodeType": "YulIdentifier",
																	"src": "16859:81:11"
																},
																"nativeSrc": "16859:95:11",
																"nodeType": "YulFunctionCall",
																"src": "16859:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16852:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16852:3:11"
																}
															]
														},
														{
															"nativeSrc": "16964:10:11",
															"nodeType": "YulAssignment",
															"src": "16964:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "16971:3:11",
																"nodeType": "YulIdentifier",
																"src": "16971:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16964:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16964:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16545:435:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16700:3:11",
														"nodeType": "YulTypedName",
														"src": "16700:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16706:6:11",
														"nodeType": "YulTypedName",
														"src": "16706:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16714:6:11",
														"nodeType": "YulTypedName",
														"src": "16714:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16725:3:11",
														"nodeType": "YulTypedName",
														"src": "16725:3:11",
														"type": ""
													}
												],
												"src": "16545:435:11"
											},
											{
												"body": {
													"nativeSrc": "17092:118:11",
													"nodeType": "YulBlock",
													"src": "17092:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17114:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17114:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17122:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17122:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17110:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17110:3:11"
																		},
																		"nativeSrc": "17110:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17110:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "17126:34:11",
																		"nodeType": "YulLiteral",
																		"src": "17126:34:11",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17103:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17103:6:11"
																},
																"nativeSrc": "17103:58:11",
																"nodeType": "YulFunctionCall",
																"src": "17103:58:11"
															},
															"nativeSrc": "17103:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "17103:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17182:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17182:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17190:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17190:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17178:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17178:3:11"
																		},
																		"nativeSrc": "17178:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17178:15:11"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "17195:7:11",
																		"nodeType": "YulLiteral",
																		"src": "17195:7:11",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17171:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17171:6:11"
																},
																"nativeSrc": "17171:32:11",
																"nodeType": "YulFunctionCall",
																"src": "17171:32:11"
															},
															"nativeSrc": "17171:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "17171:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nativeSrc": "16986:224:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17084:6:11",
														"nodeType": "YulTypedName",
														"src": "17084:6:11",
														"type": ""
													}
												],
												"src": "16986:224:11"
											},
											{
												"body": {
													"nativeSrc": "17362:220:11",
													"nodeType": "YulBlock",
													"src": "17362:220:11",
													"statements": [
														{
															"nativeSrc": "17372:74:11",
															"nodeType": "YulAssignment",
															"src": "17372:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17438:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17438:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17443:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17443:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17379:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17379:58:11"
																},
																"nativeSrc": "17379:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17379:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17372:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17372:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17544:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17544:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nativeSrc": "17455:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17455:88:11"
																},
																"nativeSrc": "17455:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17455:93:11"
															},
															"nativeSrc": "17455:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17455:93:11"
														},
														{
															"nativeSrc": "17557:19:11",
															"nodeType": "YulAssignment",
															"src": "17557:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17568:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17568:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17573:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17573:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17564:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17564:3:11"
																},
																"nativeSrc": "17564:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17564:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17557:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17557:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17216:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17350:3:11",
														"nodeType": "YulTypedName",
														"src": "17350:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17358:3:11",
														"nodeType": "YulTypedName",
														"src": "17358:3:11",
														"type": ""
													}
												],
												"src": "17216:366:11"
											},
											{
												"body": {
													"nativeSrc": "17759:248:11",
													"nodeType": "YulBlock",
													"src": "17759:248:11",
													"statements": [
														{
															"nativeSrc": "17769:26:11",
															"nodeType": "YulAssignment",
															"src": "17769:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17781:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17781:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17792:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17792:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17777:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17777:3:11"
																},
																"nativeSrc": "17777:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17777:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17769:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17769:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17816:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17816:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17827:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17827:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17812:3:11"
																		},
																		"nativeSrc": "17812:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17812:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17835:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17835:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17841:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17841:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17831:3:11"
																		},
																		"nativeSrc": "17831:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17831:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17805:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17805:6:11"
																},
																"nativeSrc": "17805:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17805:47:11"
															},
															"nativeSrc": "17805:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17805:47:11"
														},
														{
															"nativeSrc": "17861:139:11",
															"nodeType": "YulAssignment",
															"src": "17861:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17995:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17995:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17869:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17869:124:11"
																},
																"nativeSrc": "17869:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17869:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17861:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17861:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17588:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17739:9:11",
														"nodeType": "YulTypedName",
														"src": "17739:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17754:4:11",
														"nodeType": "YulTypedName",
														"src": "17754:4:11",
														"type": ""
													}
												],
												"src": "17588:419:11"
											},
											{
												"body": {
													"nativeSrc": "18119:117:11",
													"nodeType": "YulBlock",
													"src": "18119:117:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18141:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18141:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18149:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18149:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18137:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18137:3:11"
																		},
																		"nativeSrc": "18137:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18137:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "18153:34:11",
																		"nodeType": "YulLiteral",
																		"src": "18153:34:11",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18130:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18130:6:11"
																},
																"nativeSrc": "18130:58:11",
																"nodeType": "YulFunctionCall",
																"src": "18130:58:11"
															},
															"nativeSrc": "18130:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "18130:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18209:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18209:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18217:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18217:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18205:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18205:3:11"
																		},
																		"nativeSrc": "18205:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18205:15:11"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "18222:6:11",
																		"nodeType": "YulLiteral",
																		"src": "18222:6:11",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18198:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18198:6:11"
																},
																"nativeSrc": "18198:31:11",
																"nodeType": "YulFunctionCall",
																"src": "18198:31:11"
															},
															"nativeSrc": "18198:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "18198:31:11"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nativeSrc": "18013:223:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18111:6:11",
														"nodeType": "YulTypedName",
														"src": "18111:6:11",
														"type": ""
													}
												],
												"src": "18013:223:11"
											},
											{
												"body": {
													"nativeSrc": "18388:220:11",
													"nodeType": "YulBlock",
													"src": "18388:220:11",
													"statements": [
														{
															"nativeSrc": "18398:74:11",
															"nodeType": "YulAssignment",
															"src": "18398:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18464:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18464:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18469:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18469:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18405:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "18405:58:11"
																},
																"nativeSrc": "18405:67:11",
																"nodeType": "YulFunctionCall",
																"src": "18405:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18398:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18398:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18570:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18570:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nativeSrc": "18481:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "18481:88:11"
																},
																"nativeSrc": "18481:93:11",
																"nodeType": "YulFunctionCall",
																"src": "18481:93:11"
															},
															"nativeSrc": "18481:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "18481:93:11"
														},
														{
															"nativeSrc": "18583:19:11",
															"nodeType": "YulAssignment",
															"src": "18583:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18594:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18594:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18599:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18599:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18590:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18590:3:11"
																},
																"nativeSrc": "18590:12:11",
																"nodeType": "YulFunctionCall",
																"src": "18590:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18583:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18583:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18242:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18376:3:11",
														"nodeType": "YulTypedName",
														"src": "18376:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18384:3:11",
														"nodeType": "YulTypedName",
														"src": "18384:3:11",
														"type": ""
													}
												],
												"src": "18242:366:11"
											},
											{
												"body": {
													"nativeSrc": "18785:248:11",
													"nodeType": "YulBlock",
													"src": "18785:248:11",
													"statements": [
														{
															"nativeSrc": "18795:26:11",
															"nodeType": "YulAssignment",
															"src": "18795:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18807:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18807:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18818:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18818:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18803:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18803:3:11"
																},
																"nativeSrc": "18803:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18803:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18795:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18795:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18842:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18842:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18853:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18853:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18838:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18838:3:11"
																		},
																		"nativeSrc": "18838:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18838:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18861:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18861:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18867:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18867:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18857:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18857:3:11"
																		},
																		"nativeSrc": "18857:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18857:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18831:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18831:6:11"
																},
																"nativeSrc": "18831:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18831:47:11"
															},
															"nativeSrc": "18831:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18831:47:11"
														},
														{
															"nativeSrc": "18887:139:11",
															"nodeType": "YulAssignment",
															"src": "18887:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19021:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19021:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18895:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18895:124:11"
																},
																"nativeSrc": "18895:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18895:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18887:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18887:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18614:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18765:9:11",
														"nodeType": "YulTypedName",
														"src": "18765:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18780:4:11",
														"nodeType": "YulTypedName",
														"src": "18780:4:11",
														"type": ""
													}
												],
												"src": "18614:419:11"
											},
											{
												"body": {
													"nativeSrc": "19145:69:11",
													"nodeType": "YulBlock",
													"src": "19145:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19167:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19167:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19175:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19175:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19163:3:11"
																		},
																		"nativeSrc": "19163:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19163:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "19179:27:11",
																		"nodeType": "YulLiteral",
																		"src": "19179:27:11",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19156:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19156:6:11"
																},
																"nativeSrc": "19156:51:11",
																"nodeType": "YulFunctionCall",
																"src": "19156:51:11"
															},
															"nativeSrc": "19156:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "19156:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nativeSrc": "19039:175:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19137:6:11",
														"nodeType": "YulTypedName",
														"src": "19137:6:11",
														"type": ""
													}
												],
												"src": "19039:175:11"
											},
											{
												"body": {
													"nativeSrc": "19366:220:11",
													"nodeType": "YulBlock",
													"src": "19366:220:11",
													"statements": [
														{
															"nativeSrc": "19376:74:11",
															"nodeType": "YulAssignment",
															"src": "19376:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19442:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19442:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19447:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19447:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19383:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19383:58:11"
																},
																"nativeSrc": "19383:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19383:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19376:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19548:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19548:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nativeSrc": "19459:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19459:88:11"
																},
																"nativeSrc": "19459:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19459:93:11"
															},
															"nativeSrc": "19459:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19459:93:11"
														},
														{
															"nativeSrc": "19561:19:11",
															"nodeType": "YulAssignment",
															"src": "19561:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19572:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19577:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19577:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19568:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19568:3:11"
																},
																"nativeSrc": "19568:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19568:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19561:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19561:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19220:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19354:3:11",
														"nodeType": "YulTypedName",
														"src": "19354:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19362:3:11",
														"nodeType": "YulTypedName",
														"src": "19362:3:11",
														"type": ""
													}
												],
												"src": "19220:366:11"
											},
											{
												"body": {
													"nativeSrc": "19763:248:11",
													"nodeType": "YulBlock",
													"src": "19763:248:11",
													"statements": [
														{
															"nativeSrc": "19773:26:11",
															"nodeType": "YulAssignment",
															"src": "19773:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19785:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19785:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19796:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19796:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19781:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19781:3:11"
																},
																"nativeSrc": "19781:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19781:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19773:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19773:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19820:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19820:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19831:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19831:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19816:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19816:3:11"
																		},
																		"nativeSrc": "19816:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19816:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19839:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19839:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19845:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19845:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19835:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19835:3:11"
																		},
																		"nativeSrc": "19835:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19835:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19809:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19809:6:11"
																},
																"nativeSrc": "19809:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19809:47:11"
															},
															"nativeSrc": "19809:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19809:47:11"
														},
														{
															"nativeSrc": "19865:139:11",
															"nodeType": "YulAssignment",
															"src": "19865:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19999:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19999:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19873:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "19873:124:11"
																},
																"nativeSrc": "19873:131:11",
																"nodeType": "YulFunctionCall",
																"src": "19873:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19865:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19865:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19592:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19743:9:11",
														"nodeType": "YulTypedName",
														"src": "19743:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19758:4:11",
														"nodeType": "YulTypedName",
														"src": "19758:4:11",
														"type": ""
													}
												],
												"src": "19592:419:11"
											},
											{
												"body": {
													"nativeSrc": "20123:131:11",
													"nodeType": "YulBlock",
													"src": "20123:131:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20145:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20145:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20153:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20153:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20141:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20141:3:11"
																		},
																		"nativeSrc": "20141:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20141:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "20157:34:11",
																		"nodeType": "YulLiteral",
																		"src": "20157:34:11",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20134:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20134:6:11"
																},
																"nativeSrc": "20134:58:11",
																"nodeType": "YulFunctionCall",
																"src": "20134:58:11"
															},
															"nativeSrc": "20134:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "20134:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20213:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20213:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20221:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20221:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20209:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20209:3:11"
																		},
																		"nativeSrc": "20209:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20209:15:11"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "20226:20:11",
																		"nodeType": "YulLiteral",
																		"src": "20226:20:11",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20202:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20202:6:11"
																},
																"nativeSrc": "20202:45:11",
																"nodeType": "YulFunctionCall",
																"src": "20202:45:11"
															},
															"nativeSrc": "20202:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "20202:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nativeSrc": "20017:237:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20115:6:11",
														"nodeType": "YulTypedName",
														"src": "20115:6:11",
														"type": ""
													}
												],
												"src": "20017:237:11"
											},
											{
												"body": {
													"nativeSrc": "20406:220:11",
													"nodeType": "YulBlock",
													"src": "20406:220:11",
													"statements": [
														{
															"nativeSrc": "20416:74:11",
															"nodeType": "YulAssignment",
															"src": "20416:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20482:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20482:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20487:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20487:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20423:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "20423:58:11"
																},
																"nativeSrc": "20423:67:11",
																"nodeType": "YulFunctionCall",
																"src": "20423:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20416:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20416:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20588:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20588:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nativeSrc": "20499:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "20499:88:11"
																},
																"nativeSrc": "20499:93:11",
																"nodeType": "YulFunctionCall",
																"src": "20499:93:11"
															},
															"nativeSrc": "20499:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "20499:93:11"
														},
														{
															"nativeSrc": "20601:19:11",
															"nodeType": "YulAssignment",
															"src": "20601:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20612:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20612:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20617:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20617:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20608:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20608:3:11"
																},
																"nativeSrc": "20608:12:11",
																"nodeType": "YulFunctionCall",
																"src": "20608:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20601:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20601:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20260:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20394:3:11",
														"nodeType": "YulTypedName",
														"src": "20394:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20402:3:11",
														"nodeType": "YulTypedName",
														"src": "20402:3:11",
														"type": ""
													}
												],
												"src": "20260:366:11"
											},
											{
												"body": {
													"nativeSrc": "20803:248:11",
													"nodeType": "YulBlock",
													"src": "20803:248:11",
													"statements": [
														{
															"nativeSrc": "20813:26:11",
															"nodeType": "YulAssignment",
															"src": "20813:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20825:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20825:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20836:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20836:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20821:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20821:3:11"
																},
																"nativeSrc": "20821:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20821:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20813:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20813:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20860:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20860:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20871:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20871:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20856:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20856:3:11"
																		},
																		"nativeSrc": "20856:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20856:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20879:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "20879:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20885:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20885:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20875:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20875:3:11"
																		},
																		"nativeSrc": "20875:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20875:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20849:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20849:6:11"
																},
																"nativeSrc": "20849:47:11",
																"nodeType": "YulFunctionCall",
																"src": "20849:47:11"
															},
															"nativeSrc": "20849:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "20849:47:11"
														},
														{
															"nativeSrc": "20905:139:11",
															"nodeType": "YulAssignment",
															"src": "20905:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21039:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "21039:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20913:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "20913:124:11"
																},
																"nativeSrc": "20913:131:11",
																"nodeType": "YulFunctionCall",
																"src": "20913:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20905:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20905:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20632:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20783:9:11",
														"nodeType": "YulTypedName",
														"src": "20783:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20798:4:11",
														"nodeType": "YulTypedName",
														"src": "20798:4:11",
														"type": ""
													}
												],
												"src": "20632:419:11"
											},
											{
												"body": {
													"nativeSrc": "21085:152:11",
													"nodeType": "YulBlock",
													"src": "21085:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21102:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21102:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21105:77:11",
																		"nodeType": "YulLiteral",
																		"src": "21105:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21095:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21095:6:11"
																},
																"nativeSrc": "21095:88:11",
																"nodeType": "YulFunctionCall",
																"src": "21095:88:11"
															},
															"nativeSrc": "21095:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "21095:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21199:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21199:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21202:4:11",
																		"nodeType": "YulLiteral",
																		"src": "21202:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21192:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21192:6:11"
																},
																"nativeSrc": "21192:15:11",
																"nodeType": "YulFunctionCall",
																"src": "21192:15:11"
															},
															"nativeSrc": "21192:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "21192:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21223:1:11",
																		"nodeType": "YulLiteral",
																		"src": "21223:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21226:4:11",
																		"nodeType": "YulLiteral",
																		"src": "21226:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21216:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21216:6:11"
																},
																"nativeSrc": "21216:15:11",
																"nodeType": "YulFunctionCall",
																"src": "21216:15:11"
															},
															"nativeSrc": "21216:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "21216:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21057:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "21057:180:11"
											},
											{
												"body": {
													"nativeSrc": "21301:40:11",
													"nodeType": "YulBlock",
													"src": "21301:40:11",
													"statements": [
														{
															"nativeSrc": "21312:22:11",
															"nodeType": "YulAssignment",
															"src": "21312:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21328:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "21328:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21322:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "21322:5:11"
																},
																"nativeSrc": "21322:12:11",
																"nodeType": "YulFunctionCall",
																"src": "21322:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21312:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21312:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21243:98:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21284:5:11",
														"nodeType": "YulTypedName",
														"src": "21284:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21294:6:11",
														"nodeType": "YulTypedName",
														"src": "21294:6:11",
														"type": ""
													}
												],
												"src": "21243:98:11"
											},
											{
												"body": {
													"nativeSrc": "21442:73:11",
													"nodeType": "YulBlock",
													"src": "21442:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21459:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21459:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21464:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21464:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21452:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21452:6:11"
																},
																"nativeSrc": "21452:19:11",
																"nodeType": "YulFunctionCall",
																"src": "21452:19:11"
															},
															"nativeSrc": "21452:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "21452:19:11"
														},
														{
															"nativeSrc": "21480:29:11",
															"nodeType": "YulAssignment",
															"src": "21480:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21499:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21499:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21504:4:11",
																		"nodeType": "YulLiteral",
																		"src": "21504:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21495:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21495:3:11"
																},
																"nativeSrc": "21495:14:11",
																"nodeType": "YulFunctionCall",
																"src": "21495:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21480:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "21480:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21347:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21414:3:11",
														"nodeType": "YulTypedName",
														"src": "21414:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21419:6:11",
														"nodeType": "YulTypedName",
														"src": "21419:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21430:11:11",
														"nodeType": "YulTypedName",
														"src": "21430:11:11",
														"type": ""
													}
												],
												"src": "21347:168:11"
											},
											{
												"body": {
													"nativeSrc": "21611:283:11",
													"nodeType": "YulBlock",
													"src": "21611:283:11",
													"statements": [
														{
															"nativeSrc": "21621:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "21621:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21667:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "21667:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21635:31:11",
																	"nodeType": "YulIdentifier",
																	"src": "21635:31:11"
																},
																"nativeSrc": "21635:38:11",
																"nodeType": "YulFunctionCall",
																"src": "21635:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21625:6:11",
																	"nodeType": "YulTypedName",
																	"src": "21625:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21682:77:11",
															"nodeType": "YulAssignment",
															"src": "21682:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21747:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21747:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21752:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21752:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21689:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "21689:57:11"
																},
																"nativeSrc": "21689:70:11",
																"nodeType": "YulFunctionCall",
																"src": "21689:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21682:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21682:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21807:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "21807:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21814:4:11",
																				"nodeType": "YulLiteral",
																				"src": "21814:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21803:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21803:3:11"
																		},
																		"nativeSrc": "21803:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21803:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21821:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21821:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21826:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21826:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21768:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "21768:34:11"
																},
																"nativeSrc": "21768:65:11",
																"nodeType": "YulFunctionCall",
																"src": "21768:65:11"
															},
															"nativeSrc": "21768:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "21768:65:11"
														},
														{
															"nativeSrc": "21842:46:11",
															"nodeType": "YulAssignment",
															"src": "21842:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21853:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21853:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21880:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "21880:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21858:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "21858:21:11"
																		},
																		"nativeSrc": "21858:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21858:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21849:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21849:3:11"
																},
																"nativeSrc": "21849:39:11",
																"nodeType": "YulFunctionCall",
																"src": "21849:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21842:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21842:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21521:373:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21592:5:11",
														"nodeType": "YulTypedName",
														"src": "21592:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21599:3:11",
														"nodeType": "YulTypedName",
														"src": "21599:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21607:3:11",
														"nodeType": "YulTypedName",
														"src": "21607:3:11",
														"type": ""
													}
												],
												"src": "21521:373:11"
											},
											{
												"body": {
													"nativeSrc": "22100:440:11",
													"nodeType": "YulBlock",
													"src": "22100:440:11",
													"statements": [
														{
															"nativeSrc": "22110:27:11",
															"nodeType": "YulAssignment",
															"src": "22110:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22122:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "22122:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22133:3:11",
																		"nodeType": "YulLiteral",
																		"src": "22133:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22118:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22118:3:11"
																},
																"nativeSrc": "22118:19:11",
																"nodeType": "YulFunctionCall",
																"src": "22118:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22110:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "22110:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22191:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22191:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22204:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22204:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22215:1:11",
																				"nodeType": "YulLiteral",
																				"src": "22215:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22200:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22200:3:11"
																		},
																		"nativeSrc": "22200:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22200:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22147:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "22147:43:11"
																},
																"nativeSrc": "22147:71:11",
																"nodeType": "YulFunctionCall",
																"src": "22147:71:11"
															},
															"nativeSrc": "22147:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "22147:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22272:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22272:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22285:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22285:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22296:2:11",
																				"nodeType": "YulLiteral",
																				"src": "22296:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22281:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22281:3:11"
																		},
																		"nativeSrc": "22281:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22281:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22228:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "22228:43:11"
																},
																"nativeSrc": "22228:72:11",
																"nodeType": "YulFunctionCall",
																"src": "22228:72:11"
															},
															"nativeSrc": "22228:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "22228:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22354:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22354:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22367:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22367:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22378:2:11",
																				"nodeType": "YulLiteral",
																				"src": "22378:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22363:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22363:3:11"
																		},
																		"nativeSrc": "22363:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22363:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22310:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "22310:43:11"
																},
																"nativeSrc": "22310:72:11",
																"nodeType": "YulFunctionCall",
																"src": "22310:72:11"
															},
															"nativeSrc": "22310:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "22310:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22403:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22403:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22414:2:11",
																				"nodeType": "YulLiteral",
																				"src": "22414:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22399:3:11"
																		},
																		"nativeSrc": "22399:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22399:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22423:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "22423:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22429:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22429:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22419:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22419:3:11"
																		},
																		"nativeSrc": "22419:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22419:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22392:6:11"
																},
																"nativeSrc": "22392:48:11",
																"nodeType": "YulFunctionCall",
																"src": "22392:48:11"
															},
															"nativeSrc": "22392:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "22392:48:11"
														},
														{
															"nativeSrc": "22449:84:11",
															"nodeType": "YulAssignment",
															"src": "22449:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22519:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22519:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22528:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "22528:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22457:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "22457:61:11"
																},
																"nativeSrc": "22457:76:11",
																"nodeType": "YulFunctionCall",
																"src": "22457:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22449:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "22449:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21900:640:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22048:9:11",
														"nodeType": "YulTypedName",
														"src": "22048:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22060:6:11",
														"nodeType": "YulTypedName",
														"src": "22060:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22068:6:11",
														"nodeType": "YulTypedName",
														"src": "22068:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22076:6:11",
														"nodeType": "YulTypedName",
														"src": "22076:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22084:6:11",
														"nodeType": "YulTypedName",
														"src": "22084:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22095:4:11",
														"nodeType": "YulTypedName",
														"src": "22095:4:11",
														"type": ""
													}
												],
												"src": "21900:640:11"
											},
											{
												"body": {
													"nativeSrc": "22608:79:11",
													"nodeType": "YulBlock",
													"src": "22608:79:11",
													"statements": [
														{
															"nativeSrc": "22618:22:11",
															"nodeType": "YulAssignment",
															"src": "22618:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22633:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22633:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22627:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "22627:5:11"
																},
																"nativeSrc": "22627:13:11",
																"nodeType": "YulFunctionCall",
																"src": "22627:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22618:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "22618:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22675:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "22675:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "22649:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "22649:25:11"
																},
																"nativeSrc": "22649:32:11",
																"nodeType": "YulFunctionCall",
																"src": "22649:32:11"
															},
															"nativeSrc": "22649:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "22649:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "22546:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22586:6:11",
														"nodeType": "YulTypedName",
														"src": "22586:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22594:3:11",
														"nodeType": "YulTypedName",
														"src": "22594:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22602:5:11",
														"nodeType": "YulTypedName",
														"src": "22602:5:11",
														"type": ""
													}
												],
												"src": "22546:141:11"
											},
											{
												"body": {
													"nativeSrc": "22769:273:11",
													"nodeType": "YulBlock",
													"src": "22769:273:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "22815:83:11",
																"nodeType": "YulBlock",
																"src": "22815:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22817:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "22817:77:11"
																			},
																			"nativeSrc": "22817:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22817:79:11"
																		},
																		"nativeSrc": "22817:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22817:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22790:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "22790:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22799:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22799:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22786:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22786:3:11"
																		},
																		"nativeSrc": "22786:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22786:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22811:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22811:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22782:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22782:3:11"
																},
																"nativeSrc": "22782:32:11",
																"nodeType": "YulFunctionCall",
																"src": "22782:32:11"
															},
															"nativeSrc": "22779:119:11",
															"nodeType": "YulIf",
															"src": "22779:119:11"
														},
														{
															"nativeSrc": "22908:127:11",
															"nodeType": "YulBlock",
															"src": "22908:127:11",
															"statements": [
																{
																	"nativeSrc": "22923:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22923:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22937:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22937:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22927:6:11",
																			"nodeType": "YulTypedName",
																			"src": "22927:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22952:73:11",
																	"nodeType": "YulAssignment",
																	"src": "22952:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22997:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "22997:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23008:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "23008:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22993:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "22993:3:11"
																				},
																				"nativeSrc": "22993:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "22993:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23017:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "23017:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22962:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "22962:30:11"
																		},
																		"nativeSrc": "22962:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22962:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22952:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "22952:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "22693:349:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22739:9:11",
														"nodeType": "YulTypedName",
														"src": "22739:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22750:7:11",
														"nodeType": "YulTypedName",
														"src": "22750:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22762:6:11",
														"nodeType": "YulTypedName",
														"src": "22762:6:11",
														"type": ""
													}
												],
												"src": "22693:349:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e691906114a7565b6102b9565b6040516100f891906114ec565b60405180910390f35b61010961039a565b6040516101169190611575565b60405180910390f35b610139600480360381019061013491906115c8565b610429565b6040516101469190611632565b60405180910390f35b61016960048036038101906101649190611675565b61046b565b005b610185600480360381019061018091906116b3565b610581565b005b6101a1600480360381019061019c91906116b3565b6105e1565b005b6101bd60048036038101906101b891906115c8565b610600565b6040516101ca9190611632565b60405180910390f35b6101ed60048036038101906101e89190611703565b610684565b6040516101fa919061173d565b60405180910390f35b61020b610738565b6040516102189190611575565b60405180910390f35b61023b60048036038101906102369190611780565b6107c8565b005b610257600480360381019061025291906118ea565b6107de565b005b610273600480360381019061026e91906115c8565b610840565b6040516102809190611575565b60405180910390f35b6102a3600480360381019061029e919061196a565b6108a5565b6040516102b091906114ec565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610933565b5b9050919050565b60605f80546103a8906119d5565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906119d5565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f6104338261099c565b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61047582610600565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611a75565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105046109e7565b73ffffffffffffffffffffffffffffffffffffffff16148061053357506105328161052d6109e7565b6108a5565b5b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990611b03565b60405180910390fd5b61057c83836109ee565b505050565b61059261058c6109e7565b82610aa4565b6105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611b91565b60405180910390fd5b6105dc838383610b38565b505050565b6105fb83838360405180602001604052805f8152506107de565b505050565b5f5f61060b83610e24565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611bf9565b60405180910390fd5b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611c87565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610747906119d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610773906119d5565b80156107be5780601f10610795576101008083540402835291602001916107be565b820191905f5260205f20905b8154815290600101906020018083116107a157829003601f168201915b5050505050905090565b6107da6107d36109e7565b8383610e5d565b5050565b6107ef6107e96109e7565b83610aa4565b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611b91565b60405180910390fd5b61083a84848484610fc4565b50505050565b606061084b8261099c565b5f610854611020565b90505f8151116108725760405180602001604052805f81525061089d565b8061087c84611036565b60405160200161088d929190611cdf565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109a581611100565b6109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90611bf9565b60405180910390fd5b50565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a5e83610600565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f5f610aaf83610600565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610af15750610af081856108a5565b5b80610b2f57508373ffffffffffffffffffffffffffffffffffffffff16610b1784610429565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b5882610600565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611d72565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1390611e00565b60405180910390fd5b610c298383836001611140565b8273ffffffffffffffffffffffffffffffffffffffff16610c4982610600565b73ffffffffffffffffffffffffffffffffffffffff1614610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611d72565b60405180910390fd5b60045f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540392505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e1f8383836001611146565b505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611e68565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fb791906114ec565b60405180910390a3505050565b610fcf848484610b38565b610fdb8484848461114c565b61101a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101190611ef6565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f6001611044846112ce565b0190505f8167ffffffffffffffff811115611062576110616117c6565b5b6040519080825280601f01601f1916602001820160405280156110945781602001600182028036833780820191505090505b5090505f82602001820190505b6001156110f5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110ea576110e9611f14565b5b0494505f85036110a1575b819350505050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1661112183610e24565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b5f61116c8473ffffffffffffffffffffffffffffffffffffffff1661141f565b156112c1578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111956109e7565b8786866040518563ffffffff1660e01b81526004016111b79493929190611f93565b6020604051808303815f875af19250505080156111f257506040513d601f19601f820116820180604052508101906111ef9190611ff1565b60015b611271573d805f8114611220576040519150601f19603f3d011682016040523d82523d5f602084013e611225565b606091505b505f815103611269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126090611ef6565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112c6565b600190505b949350505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061132a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113205761131f611f14565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611367576d04ee2d6d415b85acef8100000000838161135d5761135c611f14565b5b0492506020810190505b662386f26fc10000831061139657662386f26fc10000838161138c5761138b611f14565b5b0492506010810190505b6305f5e10083106113bf576305f5e10083816113b5576113b4611f14565b5b0492506008810190505b61271083106113e45761271083816113da576113d9611f14565b5b0492506004810190505b6064831061140757606483816113fd576113fc611f14565b5b0492506002810190505b600a8310611416576001810190505b80915050919050565b5f5f8273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61148681611452565b8114611490575f5ffd5b50565b5f813590506114a18161147d565b92915050565b5f602082840312156114bc576114bb61144a565b5b5f6114c984828501611493565b91505092915050565b5f8115159050919050565b6114e6816114d2565b82525050565b5f6020820190506114ff5f8301846114dd565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61154782611505565b611551818561150f565b935061156181856020860161151f565b61156a8161152d565b840191505092915050565b5f6020820190508181035f83015261158d818461153d565b905092915050565b5f819050919050565b6115a781611595565b81146115b1575f5ffd5b50565b5f813590506115c28161159e565b92915050565b5f602082840312156115dd576115dc61144a565b5b5f6115ea848285016115b4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61161c826115f3565b9050919050565b61162c81611612565b82525050565b5f6020820190506116455f830184611623565b92915050565b61165481611612565b811461165e575f5ffd5b50565b5f8135905061166f8161164b565b92915050565b5f5f6040838503121561168b5761168a61144a565b5b5f61169885828601611661565b92505060206116a9858286016115b4565b9150509250929050565b5f5f5f606084860312156116ca576116c961144a565b5b5f6116d786828701611661565b93505060206116e886828701611661565b92505060406116f9868287016115b4565b9150509250925092565b5f602082840312156117185761171761144a565b5b5f61172584828501611661565b91505092915050565b61173781611595565b82525050565b5f6020820190506117505f83018461172e565b92915050565b61175f816114d2565b8114611769575f5ffd5b50565b5f8135905061177a81611756565b92915050565b5f5f604083850312156117965761179561144a565b5b5f6117a385828601611661565b92505060206117b48582860161176c565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117fc8261152d565b810181811067ffffffffffffffff8211171561181b5761181a6117c6565b5b80604052505050565b5f61182d611441565b905061183982826117f3565b919050565b5f67ffffffffffffffff821115611858576118576117c6565b5b6118618261152d565b9050602081019050919050565b828183375f83830152505050565b5f61188e6118898461183e565b611824565b9050828152602081018484840111156118aa576118a96117c2565b5b6118b584828561186e565b509392505050565b5f82601f8301126118d1576118d06117be565b5b81356118e184826020860161187c565b91505092915050565b5f5f5f5f608085870312156119025761190161144a565b5b5f61190f87828801611661565b945050602061192087828801611661565b9350506040611931878288016115b4565b925050606085013567ffffffffffffffff8111156119525761195161144e565b5b61195e878288016118bd565b91505092959194509250565b5f5f604083850312156119805761197f61144a565b5b5f61198d85828601611661565b925050602061199e85828601611661565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119ec57607f821691505b6020821081036119ff576119fe6119a8565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a5f60218361150f565b9150611a6a82611a05565b604082019050919050565b5f6020820190508181035f830152611a8c81611a53565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f5f8201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b5f611aed603d8361150f565b9150611af882611a93565b604082019050919050565b5f6020820190508181035f830152611b1a81611ae1565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e655f8201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b5f611b7b602d8361150f565b9150611b8682611b21565b604082019050919050565b5f6020820190508181035f830152611ba881611b6f565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000005f82015250565b5f611be360188361150f565b9150611bee82611baf565b602082019050919050565b5f6020820190508181035f830152611c1081611bd7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f7420612076615f8201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b5f611c7160298361150f565b9150611c7c82611c17565b604082019050919050565b5f6020820190508181035f830152611c9e81611c65565b9050919050565b5f81905092915050565b5f611cb982611505565b611cc38185611ca5565b9350611cd381856020860161151f565b80840191505092915050565b5f611cea8285611caf565b9150611cf68284611caf565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f611d5c60258361150f565b9150611d6782611d02565b604082019050919050565b5f6020820190508181035f830152611d8981611d50565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611dea60248361150f565b9150611df582611d90565b604082019050919050565b5f6020820190508181035f830152611e1781611dde565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611e5260198361150f565b9150611e5d82611e1e565b602082019050919050565b5f6020820190508181035f830152611e7f81611e46565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f611ee060328361150f565b9150611eeb82611e86565b604082019050919050565b5f6020820190508181035f830152611f0d81611ed4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f611f6582611f41565b611f6f8185611f4b565b9350611f7f81856020860161151f565b611f888161152d565b840191505092915050565b5f608082019050611fa65f830187611623565b611fb36020830186611623565b611fc0604083018561172e565b8181036060830152611fd28184611f5b565b905095945050505050565b5f81519050611feb8161147d565b92915050565b5f602082840312156120065761200561144a565b5b5f61201384828501611fdd565b9150509291505056fea2646970667358221220aa197ce1a1348aeedac55ca34fca8dd36dc2a853a04e58ebdd985c703d80b56e64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x933 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x504 PUSH2 0x9E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP2 PUSH2 0x52D PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x58C PUSH2 0x9E7 JUMP JUMPDEST DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x60B DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x747 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x795 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D3 PUSH2 0x9E7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E9 PUSH2 0x9E7 JUMP JUMPDEST DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x84B DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH2 0x87C DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5E DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAAF DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAF1 JUMPI POP PUSH2 0xAF0 DUP2 DUP6 PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB17 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1140 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE1F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1146 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFCF DUP5 DUP5 DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xFDB DUP5 DUP5 DUP5 DUP5 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1044 DUP5 PUSH2 0x12CE JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1062 JUMPI PUSH2 0x1061 PUSH2 0x17C6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10F5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x10A1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1121 DUP4 PUSH2 0xE24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x141F JUMP JUMPDEST ISZERO PUSH2 0x12C1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1195 PUSH2 0x9E7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1271 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1260 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x132A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1320 JUMPI PUSH2 0x131F PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1367 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1396 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x138C JUMPI PUSH2 0x138B PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x13BF JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x13E4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x13DA JUMPI PUSH2 0x13D9 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1407 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1416 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1486 DUP2 PUSH2 0x1452 JUMP JUMPDEST DUP2 EQ PUSH2 0x1490 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A1 DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH2 0x14BB PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x14D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FF PUSH0 DUP4 ADD DUP5 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1547 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x1551 DUP2 DUP6 PUSH2 0x150F JUMP JUMPDEST SWAP4 POP PUSH2 0x1561 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST PUSH2 0x156A DUP2 PUSH2 0x152D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158D DUP2 DUP5 PUSH2 0x153D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A7 DUP2 PUSH2 0x1595 JUMP JUMPDEST DUP2 EQ PUSH2 0x15B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C2 DUP2 PUSH2 0x159E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15EA DUP5 DUP3 DUP6 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x161C DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x1612 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1645 PUSH0 DUP4 ADD DUP5 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1654 DUP2 PUSH2 0x1612 JUMP JUMPDEST DUP2 EQ PUSH2 0x165E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166F DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x168B JUMPI PUSH2 0x168A PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1698 DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A9 DUP6 DUP3 DUP7 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D7 DUP7 DUP3 DUP8 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F9 DUP7 DUP3 DUP8 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP5 DUP3 DUP6 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1737 DUP2 PUSH2 0x1595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1750 PUSH0 DUP4 ADD DUP5 PUSH2 0x172E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x175F DUP2 PUSH2 0x14D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1769 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x177A DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B4 DUP6 DUP3 DUP7 ADD PUSH2 0x176C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17FC DUP3 PUSH2 0x152D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x17C6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x182D PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP PUSH2 0x1839 DUP3 DUP3 PUSH2 0x17F3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH2 0x1857 PUSH2 0x17C6 JUMP JUMPDEST JUMPDEST PUSH2 0x1861 DUP3 PUSH2 0x152D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188E PUSH2 0x1889 DUP5 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x1824 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x17C2 JUMP JUMPDEST JUMPDEST PUSH2 0x18B5 DUP5 DUP3 DUP6 PUSH2 0x186E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x17BE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18E1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1902 JUMPI PUSH2 0x1901 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x190F DUP8 DUP3 DUP9 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1920 DUP8 DUP3 DUP9 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1931 DUP8 DUP3 DUP9 ADD PUSH2 0x15B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x144E JUMP JUMPDEST JUMPDEST PUSH2 0x195E DUP8 DUP3 DUP9 ADD PUSH2 0x18BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199E DUP6 DUP3 DUP7 ADD PUSH2 0x1661 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19FF JUMPI PUSH2 0x19FE PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5F PUSH1 0x21 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6A DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x1A53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AED PUSH1 0x3D DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF8 DUP3 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B1A DUP2 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B7B PUSH1 0x2D DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B86 DUP3 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA8 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE3 PUSH1 0x18 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEE DUP3 PUSH2 0x1BAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C10 DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C71 PUSH1 0x29 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7C DUP3 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9E DUP2 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB9 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x1CC3 DUP2 DUP6 PUSH2 0x1CA5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CD3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEA DUP3 DUP6 PUSH2 0x1CAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF6 DUP3 DUP5 PUSH2 0x1CAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5C PUSH1 0x25 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D67 DUP3 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D89 DUP2 PUSH2 0x1D50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEA PUSH1 0x24 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF5 DUP3 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E17 DUP2 PUSH2 0x1DDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E52 PUSH1 0x19 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5D DUP3 PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E7F DUP2 PUSH2 0x1E46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE0 PUSH1 0x32 DUP4 PUSH2 0x150F JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEB DUP3 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0D DUP2 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F65 DUP3 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0x1F6F DUP2 DUP6 PUSH2 0x1F4B JUMP JUMPDEST SWAP4 POP PUSH2 0x1F7F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST PUSH2 0x1F88 DUP2 PUSH2 0x152D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FA6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1FB3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1FC0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x172E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FD2 DUP2 DUP5 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FEB DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2013 DUP5 DUP3 DUP6 ADD PUSH2 0x1FDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA NOT PUSH29 0xE1A1348AEEDAC55CA34FCA8DD36DC2A853A04E58EBDD985C703D80B56E PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "628:16377:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:0:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;655:96:5:-;708:7;734:10;727:17;;655:96;:::o;12572:171:0:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:6:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:0:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:9:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:4:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:220::-;11018:34;11014:1;11006:6;11002:14;10995:58;11087:3;11082:2;11074:6;11070:15;11063:28;10878:220;:::o;11104:366::-;11246:3;11267:67;11331:2;11326:3;11267:67;:::i;:::-;11260:74;;11343:93;11432:3;11343:93;:::i;:::-;11461:2;11456:3;11452:12;11445:19;;11104:366;;;:::o;11476:419::-;11642:4;11680:2;11669:9;11665:18;11657:26;;11729:9;11723:4;11719:20;11715:1;11704:9;11700:17;11693:47;11757:131;11883:4;11757:131;:::i;:::-;11749:139;;11476:419;;;:::o;11901:248::-;12041:34;12037:1;12029:6;12025:14;12018:58;12110:31;12105:2;12097:6;12093:15;12086:56;11901:248;:::o;12155:366::-;12297:3;12318:67;12382:2;12377:3;12318:67;:::i;:::-;12311:74;;12394:93;12483:3;12394:93;:::i;:::-;12512:2;12507:3;12503:12;12496:19;;12155:366;;;:::o;12527:419::-;12693:4;12731:2;12720:9;12716:18;12708:26;;12780:9;12774:4;12770:20;12766:1;12755:9;12751:17;12744:47;12808:131;12934:4;12808:131;:::i;:::-;12800:139;;12527:419;;;:::o;12952:232::-;13092:34;13088:1;13080:6;13076:14;13069:58;13161:15;13156:2;13148:6;13144:15;13137:40;12952:232;:::o;13190:366::-;13332:3;13353:67;13417:2;13412:3;13353:67;:::i;:::-;13346:74;;13429:93;13518:3;13429:93;:::i;:::-;13547:2;13542:3;13538:12;13531:19;;13190:366;;;:::o;13562:419::-;13728:4;13766:2;13755:9;13751:18;13743:26;;13815:9;13809:4;13805:20;13801:1;13790:9;13786:17;13779:47;13843:131;13969:4;13843:131;:::i;:::-;13835:139;;13562:419;;;:::o;13987:174::-;14127:26;14123:1;14115:6;14111:14;14104:50;13987:174;:::o;14167:366::-;14309:3;14330:67;14394:2;14389:3;14330:67;:::i;:::-;14323:74;;14406:93;14495:3;14406:93;:::i;:::-;14524:2;14519:3;14515:12;14508:19;;14167:366;;;:::o;14539:419::-;14705:4;14743:2;14732:9;14728:18;14720:26;;14792:9;14786:4;14782:20;14778:1;14767:9;14763:17;14756:47;14820:131;14946:4;14820:131;:::i;:::-;14812:139;;14539:419;;;:::o;14964:228::-;15104:34;15100:1;15092:6;15088:14;15081:58;15173:11;15168:2;15160:6;15156:15;15149:36;14964:228;:::o;15198:366::-;15340:3;15361:67;15425:2;15420:3;15361:67;:::i;:::-;15354:74;;15437:93;15526:3;15437:93;:::i;:::-;15555:2;15550:3;15546:12;15539:19;;15198:366;;;:::o;15570:419::-;15736:4;15774:2;15763:9;15759:18;15751:26;;15823:9;15817:4;15813:20;15809:1;15798:9;15794:17;15787:47;15851:131;15977:4;15851:131;:::i;:::-;15843:139;;15570:419;;;:::o;15995:148::-;16097:11;16134:3;16119:18;;15995:148;;;;:::o;16149:390::-;16255:3;16283:39;16316:5;16283:39;:::i;:::-;16338:89;16420:6;16415:3;16338:89;:::i;:::-;16331:96;;16436:65;16494:6;16489:3;16482:4;16475:5;16471:16;16436:65;:::i;:::-;16526:6;16521:3;16517:16;16510:23;;16259:280;16149:390;;;;:::o;16545:435::-;16725:3;16747:95;16838:3;16829:6;16747:95;:::i;:::-;16740:102;;16859:95;16950:3;16941:6;16859:95;:::i;:::-;16852:102;;16971:3;16964:10;;16545:435;;;;;:::o;16986:224::-;17126:34;17122:1;17114:6;17110:14;17103:58;17195:7;17190:2;17182:6;17178:15;17171:32;16986:224;:::o;17216:366::-;17358:3;17379:67;17443:2;17438:3;17379:67;:::i;:::-;17372:74;;17455:93;17544:3;17455:93;:::i;:::-;17573:2;17568:3;17564:12;17557:19;;17216:366;;;:::o;17588:419::-;17754:4;17792:2;17781:9;17777:18;17769:26;;17841:9;17835:4;17831:20;17827:1;17816:9;17812:17;17805:47;17869:131;17995:4;17869:131;:::i;:::-;17861:139;;17588:419;;;:::o;18013:223::-;18153:34;18149:1;18141:6;18137:14;18130:58;18222:6;18217:2;18209:6;18205:15;18198:31;18013:223;:::o;18242:366::-;18384:3;18405:67;18469:2;18464:3;18405:67;:::i;:::-;18398:74;;18481:93;18570:3;18481:93;:::i;:::-;18599:2;18594:3;18590:12;18583:19;;18242:366;;;:::o;18614:419::-;18780:4;18818:2;18807:9;18803:18;18795:26;;18867:9;18861:4;18857:20;18853:1;18842:9;18838:17;18831:47;18895:131;19021:4;18895:131;:::i;:::-;18887:139;;18614:419;;;:::o;19039:175::-;19179:27;19175:1;19167:6;19163:14;19156:51;19039:175;:::o;19220:366::-;19362:3;19383:67;19447:2;19442:3;19383:67;:::i;:::-;19376:74;;19459:93;19548:3;19459:93;:::i;:::-;19577:2;19572:3;19568:12;19561:19;;19220:366;;;:::o;19592:419::-;19758:4;19796:2;19785:9;19781:18;19773:26;;19845:9;19839:4;19835:20;19831:1;19820:9;19816:17;19809:47;19873:131;19999:4;19873:131;:::i;:::-;19865:139;;19592:419;;;:::o;20017:237::-;20157:34;20153:1;20145:6;20141:14;20134:58;20226:20;20221:2;20213:6;20209:15;20202:45;20017:237;:::o;20260:366::-;20402:3;20423:67;20487:2;20482:3;20423:67;:::i;:::-;20416:74;;20499:93;20588:3;20499:93;:::i;:::-;20617:2;20612:3;20608:12;20601:19;;20260:366;;;:::o;20632:419::-;20798:4;20836:2;20825:9;20821:18;20813:26;;20885:9;20879:4;20875:20;20871:1;20860:9;20856:17;20849:47;20913:131;21039:4;20913:131;:::i;:::-;20905:139;;20632:419;;;:::o;21057:180::-;21105:77;21102:1;21095:88;21202:4;21199:1;21192:15;21226:4;21223:1;21216:15;21243:98;21294:6;21328:5;21322:12;21312:22;;21243:98;;;:::o;21347:168::-;21430:11;21464:6;21459:3;21452:19;21504:4;21499:3;21495:14;21480:29;;21347:168;;;;:::o;21521:373::-;21607:3;21635:38;21667:5;21635:38;:::i;:::-;21689:70;21752:6;21747:3;21689:70;:::i;:::-;21682:77;;21768:65;21826:6;21821:3;21814:4;21807:5;21803:16;21768:65;:::i;:::-;21858:29;21880:6;21858:29;:::i;:::-;21853:3;21849:39;21842:46;;21611:283;21521:373;;;;:::o;21900:640::-;22095:4;22133:3;22122:9;22118:19;22110:27;;22147:71;22215:1;22204:9;22200:17;22191:6;22147:71;:::i;:::-;22228:72;22296:2;22285:9;22281:18;22272:6;22228:72;:::i;:::-;22310;22378:2;22367:9;22363:18;22354:6;22310:72;:::i;:::-;22429:9;22423:4;22419:20;22414:2;22403:9;22399:18;22392:48;22457:76;22528:4;22519:6;22457:76;:::i;:::-;22449:84;;21900:640;;;;;;;:::o;22546:141::-;22602:5;22633:6;22627:13;22618:22;;22649:32;22675:5;22649:32;:::i;:::-;22546:141;;;;:::o;22693:349::-;22762:6;22811:2;22799:9;22790:7;22786:23;22782:32;22779:119;;;22817:79;;:::i;:::-;22779:119;22937:1;22962:63;23017:7;23008:6;22997:9;22993:22;22962:63;:::i;:::-;22952:73;;22908:127;22693:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1654800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"getApproved(uint256)": "5258",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3005",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2306",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2244",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa197ce1a1348aeedac55ca34fca8dd36dc2a853a04e58ebdd985c703d80b56e64736f6c634300081b0033",
									".code": [
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1827,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3597,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3686,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3686,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3735,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3711,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3665,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4790,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4790,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4771,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4763,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4873,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2297,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2324,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2020,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4282,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5338,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5338,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5319,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5311,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2957,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 13329,
											"end": 13336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 13321,
											"end": 13337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13337,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 13321,
											"end": 13337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13313,
											"end": 13366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 751,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 655,
											"end": 751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 655,
											"end": 751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 655,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12662,
											"end": 12669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12728,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12714,
											"end": 12721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12699,
											"end": 12722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12572,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7529,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7607,
											"end": 7612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7590,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7590,
											"end": 7622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7626,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11354,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11346,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11437,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11513,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11544,
											"end": 11551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11553,
											"end": 11554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11513,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11513,
											"end": 11555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11513,
											"end": 11555,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11513,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11670,
											"end": 11677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11655,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11647,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12284,
											"end": 12285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12279,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12316,
											"end": 12317,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12309,
											"end": 12311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12356,
											"end": 12358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12389,
											"end": 12391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12432,
											"end": 12436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12412,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 12412,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12453,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12412,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11257,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12999,
											"end": 13007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 12995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12982,
											"end": 13037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13085,
											"end": 13093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13071,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13140,
											"end": 13148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13108,
											"end": 13149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6448,
											"end": 6452,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6438,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6484,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6476,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7217,
											"end": 7224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7208,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7120,
											"end": 7246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14094,
											"end": 14096,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 14094,
											"end": 14109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 14109,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14094,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14147,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14166,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14166,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14166,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14166,
											"end": 14178,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14166,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14367,
											"end": 14380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 14409,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14630,
											"end": 14643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14606,
											"end": 14644,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14260,
											"end": 14301,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14260,
											"end": 14301,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14260,
											"end": 14301,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14728,
											"end": 14739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14728,
											"end": 14739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 14756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10878,
											"end": 11098,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 10878,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11052,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11053,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11090,
											"name": "PUSH",
											"source": 11,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11082,
											"end": 11084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11070,
											"end": 11085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11063,
											"end": 11091,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10878,
											"end": 11098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10878,
											"end": 11098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11246,
											"end": 11249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 11331,
											"end": 11333,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 11267,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11260,
											"end": 11334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11260,
											"end": 11334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11432,
											"end": 11435,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 11343,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11456,
											"end": 11459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11452,
											"end": 11464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11445,
											"end": 11464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11445,
											"end": 11464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11104,
											"end": 11470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11642,
											"end": 11646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11680,
											"end": 11682,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11669,
											"end": 11678,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11657,
											"end": 11683,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11657,
											"end": 11683,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11729,
											"end": 11738,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 11727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11713,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11700,
											"end": 11717,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11693,
											"end": 11740,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 11883,
											"end": 11887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 11757,
											"end": 11888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11901,
											"end": 12149,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 11901,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12041,
											"end": 12075,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12029,
											"end": 12035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12025,
											"end": 12039,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12018,
											"end": 12076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12110,
											"end": 12141,
											"name": "PUSH",
											"source": 11,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12105,
											"end": 12107,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12093,
											"end": 12108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12086,
											"end": 12142,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11901,
											"end": 12149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11901,
											"end": 12149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12297,
											"end": 12300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 12382,
											"end": 12384,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12318,
											"end": 12385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12311,
											"end": 12385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12311,
											"end": 12385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 12483,
											"end": 12486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 12394,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12512,
											"end": 12514,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12507,
											"end": 12510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12503,
											"end": 12515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12496,
											"end": 12515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12496,
											"end": 12515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12733,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 12734,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 12734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 12789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12774,
											"end": 12778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12770,
											"end": 12790,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12766,
											"end": 12767,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12755,
											"end": 12764,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12751,
											"end": 12768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12744,
											"end": 12791,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 12934,
											"end": 12938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 12808,
											"end": 12939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12800,
											"end": 12939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12800,
											"end": 12939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 12946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 13184,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 12952,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13092,
											"end": 13126,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13088,
											"end": 13089,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13127,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13161,
											"end": 13176,
											"name": "PUSH",
											"source": 11,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13156,
											"end": 13158,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13144,
											"end": 13159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13177,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 13184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 13184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13332,
											"end": 13335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13417,
											"end": 13419,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 13412,
											"end": 13415,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 13353,
											"end": 13420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13346,
											"end": 13420,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13346,
											"end": 13420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 13518,
											"end": 13521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 13429,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13547,
											"end": 13549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13542,
											"end": 13545,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13538,
											"end": 13550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13550,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13190,
											"end": 13556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13728,
											"end": 13732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13766,
											"end": 13768,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13755,
											"end": 13764,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13743,
											"end": 13769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13743,
											"end": 13769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13815,
											"end": 13824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13809,
											"end": 13813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13805,
											"end": 13825,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13801,
											"end": 13802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13790,
											"end": 13799,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13786,
											"end": 13803,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13779,
											"end": 13826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13969,
											"end": 13973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 13843,
											"end": 13974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13835,
											"end": 13974,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13835,
											"end": 13974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13562,
											"end": 13981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13987,
											"end": 14161,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 13987,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14127,
											"end": 14153,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14123,
											"end": 14124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14121,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14111,
											"end": 14125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14104,
											"end": 14154,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13987,
											"end": 14161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13987,
											"end": 14161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14309,
											"end": 14312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14394,
											"end": 14396,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 14389,
											"end": 14392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 14330,
											"end": 14397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14323,
											"end": 14397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14323,
											"end": 14397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 14495,
											"end": 14498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 14406,
											"end": 14499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14524,
											"end": 14526,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14519,
											"end": 14522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14515,
											"end": 14527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14508,
											"end": 14527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14508,
											"end": 14527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14705,
											"end": 14709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14743,
											"end": 14745,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14732,
											"end": 14741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14728,
											"end": 14746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 14746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 14746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14792,
											"end": 14801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14786,
											"end": 14790,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14782,
											"end": 14802,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14778,
											"end": 14779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14767,
											"end": 14776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14763,
											"end": 14780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14756,
											"end": 14803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14946,
											"end": 14950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 14820,
											"end": 14951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14812,
											"end": 14951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14812,
											"end": 14951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14964,
											"end": 15192,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 14964,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15104,
											"end": 15138,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15092,
											"end": 15098,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15088,
											"end": 15102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15081,
											"end": 15139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15173,
											"end": 15184,
											"name": "PUSH",
											"source": 11,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15168,
											"end": 15170,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15160,
											"end": 15166,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15156,
											"end": 15171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15149,
											"end": 15185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14964,
											"end": 15192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14964,
											"end": 15192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15343,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 15425,
											"end": 15427,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 15361,
											"end": 15428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15354,
											"end": 15428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15354,
											"end": 15428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 15526,
											"end": 15529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 15437,
											"end": 15530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15555,
											"end": 15557,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15550,
											"end": 15553,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15546,
											"end": 15558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15539,
											"end": 15558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15539,
											"end": 15558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15198,
											"end": 15564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15736,
											"end": 15740,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15774,
											"end": 15776,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15763,
											"end": 15772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15759,
											"end": 15777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15823,
											"end": 15832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15817,
											"end": 15821,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15833,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15809,
											"end": 15810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15798,
											"end": 15807,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15794,
											"end": 15811,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15787,
											"end": 15834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15977,
											"end": 15981,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 15851,
											"end": 15982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15843,
											"end": 15982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15843,
											"end": 15982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15570,
											"end": 15989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16097,
											"end": 16108,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16134,
											"end": 16137,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15995,
											"end": 16143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16255,
											"end": 16258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 16316,
											"end": 16321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 16283,
											"end": 16322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 16420,
											"end": 16426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16418,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 16338,
											"end": 16427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16331,
											"end": 16427,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16331,
											"end": 16427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 16494,
											"end": 16500,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16492,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16482,
											"end": 16486,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16475,
											"end": 16480,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 16436,
											"end": 16501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16526,
											"end": 16532,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16521,
											"end": 16524,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16517,
											"end": 16533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16510,
											"end": 16533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16510,
											"end": 16533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16149,
											"end": 16539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 16838,
											"end": 16841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16829,
											"end": 16835,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 16747,
											"end": 16842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16740,
											"end": 16842,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16740,
											"end": 16842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 16950,
											"end": 16953,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16941,
											"end": 16947,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 16859,
											"end": 16954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16852,
											"end": 16954,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16852,
											"end": 16954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16971,
											"end": 16974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 16974,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 16974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16986,
											"end": 17210,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 16986,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17126,
											"end": 17160,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17122,
											"end": 17123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17114,
											"end": 17120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17110,
											"end": 17124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17103,
											"end": 17161,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17195,
											"end": 17202,
											"name": "PUSH",
											"source": 11,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17190,
											"end": 17192,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17178,
											"end": 17193,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17171,
											"end": 17203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16986,
											"end": 17210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16986,
											"end": 17210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17358,
											"end": 17361,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 17443,
											"end": 17445,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 17438,
											"end": 17441,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 17379,
											"end": 17446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17372,
											"end": 17446,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17372,
											"end": 17446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 17544,
											"end": 17547,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 17455,
											"end": 17548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17573,
											"end": 17575,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17568,
											"end": 17571,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17564,
											"end": 17576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17557,
											"end": 17576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17557,
											"end": 17576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17216,
											"end": 17582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17754,
											"end": 17758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17792,
											"end": 17794,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17781,
											"end": 17790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17777,
											"end": 17795,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17769,
											"end": 17795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17769,
											"end": 17795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17841,
											"end": 17850,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17835,
											"end": 17839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17831,
											"end": 17851,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17827,
											"end": 17828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17816,
											"end": 17825,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17812,
											"end": 17829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17805,
											"end": 17852,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 17995,
											"end": 17999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 17869,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17861,
											"end": 18000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17861,
											"end": 18000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17588,
											"end": 18007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18013,
											"end": 18236,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 18013,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18153,
											"end": 18187,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18149,
											"end": 18150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18147,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18137,
											"end": 18151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18130,
											"end": 18188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18222,
											"end": 18228,
											"name": "PUSH",
											"source": 11,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18217,
											"end": 18219,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18209,
											"end": 18215,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18205,
											"end": 18220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18198,
											"end": 18229,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18013,
											"end": 18236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18013,
											"end": 18236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18384,
											"end": 18387,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 18469,
											"end": 18471,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 18464,
											"end": 18467,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 18405,
											"end": 18472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18398,
											"end": 18472,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18398,
											"end": 18472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 18570,
											"end": 18573,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 18481,
											"end": 18574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18599,
											"end": 18601,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18594,
											"end": 18597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18590,
											"end": 18602,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18583,
											"end": 18602,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18583,
											"end": 18602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18780,
											"end": 18784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18820,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18807,
											"end": 18816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18803,
											"end": 18821,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18795,
											"end": 18821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18795,
											"end": 18821,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18867,
											"end": 18876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18861,
											"end": 18865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18857,
											"end": 18877,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18853,
											"end": 18854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18842,
											"end": 18851,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18838,
											"end": 18855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18831,
											"end": 18878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 19021,
											"end": 19025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 18895,
											"end": 19026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18887,
											"end": 19026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18887,
											"end": 19026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19039,
											"end": 19214,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 19039,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19179,
											"end": 19206,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19175,
											"end": 19176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19167,
											"end": 19173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19163,
											"end": 19177,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19156,
											"end": 19207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19039,
											"end": 19214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19039,
											"end": 19214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19362,
											"end": 19365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 19447,
											"end": 19449,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 19442,
											"end": 19445,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 19383,
											"end": 19450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19376,
											"end": 19450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19376,
											"end": 19450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 19548,
											"end": 19551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 19459,
											"end": 19552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19577,
											"end": 19579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19572,
											"end": 19575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19568,
											"end": 19580,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19561,
											"end": 19580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19561,
											"end": 19580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19758,
											"end": 19762,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19796,
											"end": 19798,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19785,
											"end": 19794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19845,
											"end": 19854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19839,
											"end": 19843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19835,
											"end": 19855,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19831,
											"end": 19832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19820,
											"end": 19829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19816,
											"end": 19833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19809,
											"end": 19856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 19999,
											"end": 20003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 19873,
											"end": 20004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19865,
											"end": 20004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19865,
											"end": 20004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19592,
											"end": 20011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20254,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 20017,
											"end": 20254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20157,
											"end": 20191,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20153,
											"end": 20154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20145,
											"end": 20151,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20141,
											"end": 20155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20134,
											"end": 20192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20226,
											"end": 20246,
											"name": "PUSH",
											"source": 11,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 20221,
											"end": 20223,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20213,
											"end": 20219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20209,
											"end": 20224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20202,
											"end": 20247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20402,
											"end": 20405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 20487,
											"end": 20489,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 20482,
											"end": 20485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 20423,
											"end": 20490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 20588,
											"end": 20591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 20499,
											"end": 20592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20617,
											"end": 20619,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20612,
											"end": 20615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20608,
											"end": 20620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20601,
											"end": 20620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20601,
											"end": 20620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20260,
											"end": 20626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20798,
											"end": 20802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20836,
											"end": 20838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20825,
											"end": 20834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20821,
											"end": 20839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20813,
											"end": 20839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20813,
											"end": 20839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20885,
											"end": 20894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20879,
											"end": 20883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20875,
											"end": 20895,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20871,
											"end": 20872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20860,
											"end": 20869,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20856,
											"end": 20873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20849,
											"end": 20896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 21039,
											"end": 21043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 20913,
											"end": 21044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20905,
											"end": 21044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20905,
											"end": 21044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20632,
											"end": 21051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21057,
											"end": 21237,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 21057,
											"end": 21237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21105,
											"end": 21182,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21102,
											"end": 21103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21095,
											"end": 21183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21202,
											"end": 21206,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 21199,
											"end": 21200,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 21192,
											"end": 21207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21226,
											"end": 21230,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 21223,
											"end": 21224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21231,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 21243,
											"end": 21341,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 21243,
											"end": 21341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21294,
											"end": 21300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21328,
											"end": 21333,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21322,
											"end": 21334,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21312,
											"end": 21334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21312,
											"end": 21334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21243,
											"end": 21341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21243,
											"end": 21341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21243,
											"end": 21341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21243,
											"end": 21341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21515,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 21347,
											"end": 21515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21430,
											"end": 21441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21464,
											"end": 21470,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21459,
											"end": 21462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21471,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21504,
											"end": 21508,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21499,
											"end": 21502,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21495,
											"end": 21509,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21480,
											"end": 21509,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21480,
											"end": 21509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21515,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21894,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 21521,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21607,
											"end": 21610,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21635,
											"end": 21673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21635,
											"end": 21673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 21635,
											"end": 21673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21635,
											"end": 21673,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 21635,
											"end": 21673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21689,
											"end": 21759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 21752,
											"end": 21758,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21747,
											"end": 21750,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21689,
											"end": 21759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 21689,
											"end": 21759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21689,
											"end": 21759,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 21689,
											"end": 21759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21682,
											"end": 21759,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21682,
											"end": 21759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21768,
											"end": 21833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 21826,
											"end": 21832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21821,
											"end": 21824,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21814,
											"end": 21818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21807,
											"end": 21812,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 21803,
											"end": 21819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21768,
											"end": 21833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 21768,
											"end": 21833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21768,
											"end": 21833,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 21768,
											"end": 21833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 21880,
											"end": 21886,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 21858,
											"end": 21887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21887,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 21858,
											"end": 21887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21853,
											"end": 21856,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21849,
											"end": 21888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21842,
											"end": 21888,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21842,
											"end": 21888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21611,
											"end": 21894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21894,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21894,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21521,
											"end": 21894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22095,
											"end": 22099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22133,
											"end": 22136,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 22122,
											"end": 22131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22118,
											"end": 22137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22110,
											"end": 22137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22110,
											"end": 22137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22147,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 22215,
											"end": 22216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22204,
											"end": 22213,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22200,
											"end": 22217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22191,
											"end": 22197,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 22147,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 22147,
											"end": 22218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22147,
											"end": 22218,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 22147,
											"end": 22218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22228,
											"end": 22300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 22296,
											"end": 22298,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22285,
											"end": 22294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22281,
											"end": 22299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22272,
											"end": 22278,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 22228,
											"end": 22300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 22228,
											"end": 22300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22228,
											"end": 22300,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 22228,
											"end": 22300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22310,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 22378,
											"end": 22380,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22367,
											"end": 22376,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22363,
											"end": 22381,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22354,
											"end": 22360,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22310,
											"end": 22382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 22310,
											"end": 22382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22310,
											"end": 22382,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 22310,
											"end": 22382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22429,
											"end": 22438,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22423,
											"end": 22427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22419,
											"end": 22439,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22414,
											"end": 22416,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 22403,
											"end": 22412,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22399,
											"end": 22417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22392,
											"end": 22440,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22457,
											"end": 22533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 22528,
											"end": 22532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22519,
											"end": 22525,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22457,
											"end": 22533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 22457,
											"end": 22533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22457,
											"end": 22533,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 22457,
											"end": 22533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22449,
											"end": 22533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22449,
											"end": 22533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21900,
											"end": 22540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22546,
											"end": 22687,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 22546,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22602,
											"end": 22607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22633,
											"end": 22639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22627,
											"end": 22640,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22618,
											"end": 22640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22618,
											"end": 22640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22649,
											"end": 22681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 22675,
											"end": 22680,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22649,
											"end": 22681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 22649,
											"end": 22681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22649,
											"end": 22681,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 22649,
											"end": 22681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22546,
											"end": 22687,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22546,
											"end": 22687,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22546,
											"end": 22687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22546,
											"end": 22687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22546,
											"end": 22687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 23042,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 22693,
											"end": 23042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22762,
											"end": 22768,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22811,
											"end": 22813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22799,
											"end": 22808,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22790,
											"end": 22797,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22786,
											"end": 22809,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22782,
											"end": 22814,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 22779,
											"end": 22898,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22779,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 22779,
											"end": 22898,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22817,
											"end": 22896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 22817,
											"end": 22896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 22817,
											"end": 22896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22817,
											"end": 22896,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 22817,
											"end": 22896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22779,
											"end": 22898,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 22779,
											"end": 22898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22937,
											"end": 22938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22962,
											"end": 23025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 23017,
											"end": 23024,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23008,
											"end": 23014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22997,
											"end": 23006,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22993,
											"end": 23015,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22962,
											"end": 23025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 22962,
											"end": 23025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22962,
											"end": 23025,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 22962,
											"end": 23025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22952,
											"end": 23025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22908,
											"end": 23035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 23042,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 23042,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 23042,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 23042,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22693,
											"end": 23042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f81e40e57a700772a74fabf6caa8103c6b7bc4144f0c2b342cb38b2168cba32764736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f81e40e57a700772a74fabf6caa8103c6b7bc4144f0c2b342cb38b2168cba32764736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0x1E BLOCKHASH 0xE5 PUSH27 0x700772A74FABF6CAA8103C6B7BC4144F0C2B342CB38B2168CBA327 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f81e40e57a700772a74fabf6caa8103c6b7bc4144f0c2b342cb38b2168cba32764736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0x1E BLOCKHASH 0xE5 PUSH27 0x700772A74FABF6CAA8103C6B7BC4144F0C2B342CB38B2168CBA327 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f81e40e57a700772a74fabf6caa8103c6b7bc4144f0c2b342cb38b2168cba32764736f6c634300081b0033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f48356dc19b71b8ad96454cc355eff99248af3a680983fdb31be1051d86ba5b364736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f48356dc19b71b8ad96454cc355eff99248af3a680983fdb31be1051d86ba5b364736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 JUMP 0xDC NOT 0xB7 SHL DUP11 0xD9 PUSH5 0x54CC355EFF SWAP10 0x24 DUP11 RETURN 0xA6 DUP1 SWAP9 EXTCODEHASH 0xDB BALANCE 0xBE LT MLOAD 0xD8 PUSH12 0xA5B364736F6C634300081B00 CALLER ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f48356dc19b71b8ad96454cc355eff99248af3a680983fdb31be1051d86ba5b364736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 JUMP 0xDC NOT 0xB7 SHL DUP11 0xD9 PUSH5 0x54CC355EFF SWAP10 0x24 DUP11 RETURN 0xA6 DUP1 SWAP9 EXTCODEHASH 0xDB BALANCE 0xBE LT MLOAD 0xD8 PUSH12 0xA5B364736F6C634300081B00 CALLER ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f48356dc19b71b8ad96454cc355eff99248af3a680983fdb31be1051d86ba5b364736f6c634300081b0033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220beafe88760e772f50d41ca386564cf13fe882781972c2d61753dfd4bd24bd97b64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220beafe88760e772f50d41ca386564cf13fe882781972c2d61753dfd4bd24bd97b64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xAF 0xE8 DUP8 PUSH1 0xE7 PUSH19 0xF50D41CA386564CF13FE882781972C2D61753D REVERT 0x4B 0xD2 0x4B 0xD9 PUSH28 0x64736F6C634300081B00330000000000000000000000000000000000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220beafe88760e772f50d41ca386564cf13fe882781972c2d61753dfd4bd24bd97b64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xAF 0xE8 DUP8 PUSH1 0xE7 PUSH19 0xF50D41CA386564CF13FE882781972C2D61753D REVERT 0x4B 0xD2 0x4B 0xD9 PUSH28 0x64736F6C634300081B00330000000000000000000000000000000000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220beafe88760e772f50d41ca386564cf13fe882781972c2d61753dfd4bd24bd97b64736f6c634300081b0033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c356682a3ceabfb737aa4bd5f31320b37b233efe51e90272a83eced602cb28dc64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c356682a3ceabfb737aa4bd5f31320b37b233efe51e90272a83eced602cb28dc64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 JUMP PUSH9 0x2A3CEABFB737AA4BD5 RETURN SGT KECCAK256 0xB3 PUSH28 0x233EFE51E90272A83ECED602CB28DC64736F6C634300081B00330000 ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c356682a3ceabfb737aa4bd5f31320b37b233efe51e90272a83eced602cb28dc64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 JUMP PUSH9 0x2A3CEABFB737AA4BD5 RETURN SGT KECCAK256 0xB3 PUSH28 0x233EFE51E90272A83ECED602CB28DC64736F6C634300081B00330000 ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c356682a3ceabfb737aa4bd5f31320b37b233efe51e90272a83eced602cb28dc64736f6c634300081b0033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"Context": [
							1447
						],
						"ERC165": [
							1700
						],
						"ERC721": [
							926
						],
						"IERC165": [
							1712
						],
						"IERC721": [
							1042
						],
						"IERC721Metadata": [
							1087
						],
						"IERC721Receiver": [
							1060
						],
						"Math": [
							2578
						],
						"SignedMath": [
							2683
						],
						"Strings": [
							1676
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1043,
							"src": "132:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1061,
							"src": "156:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1088,
							"src": "188:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1418,
							"src": "231:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1448,
							"src": "265:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1677,
							"src": "299:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1701,
							"src": "333:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"647:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1447,
										"src": "647:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nameLocations": [
											"656:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1700,
										"src": "656:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nameLocations": [
											"664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1042,
										"src": "664:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "673:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1087,
								1042,
								1700,
								1712,
								1447
							],
							"name": "ERC721",
							"nameLocation": "637:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nameLocations": [
											"701:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1417,
										"src": "701:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"732:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1676,
										"src": "732:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "776:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "823:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "898:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "992:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1093:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "1199:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1446:57:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1456:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1464:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1402:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1423:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:0"
									},
									"scope": 926,
									"src": "1390:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1699,
										1711
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1678:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 75,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "1727:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1042_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1042_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 74,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1042",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1763:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 81,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "1783:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1087_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1087_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 80,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1087",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 88,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1851:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 86,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$926_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1699,
															"src": "1827:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 91,
												"nodeType": "Return",
												"src": "1688:175:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1700,
												"src": "1646:6:0"
											},
											{
												"id": 68,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1712,
												"src": "1654:7:0"
											}
										],
										"src": "1637:25:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1597:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:0"
									},
									"scope": 926,
									"src": "1570:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2010:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2028:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 112,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2110:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"id": 113,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2120:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 115,
												"nodeType": "Return",
												"src": "2103:23:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:0"
									},
									"scope": 926,
									"src": "1929:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2271:138:0",
										"statements": [
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2281:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"arguments": [
														{
															"id": 129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:0"
											},
											{
												"expression": {
													"id": 142,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "2397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 125,
												"id": 143,
												"nodeType": "Return",
												"src": "2390:12:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:0"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:0"
									},
									"scope": 926,
									"src": "2190:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1072
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2540:29:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "2550:12:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2525:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:0"
									},
									"scope": 926,
									"src": "2471:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1078
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2704:31:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "2714:14:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2689:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:0"
									},
									"scope": 926,
									"src": "2633:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1086
									],
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2889:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 174,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "2899:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "2933:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 178,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 180,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2957:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 185,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "2990:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 183,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 194,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3036:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 195,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3045:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1506,
																			"src": "3045:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 192,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 190,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 202,
												"nodeType": "Return",
												"src": "2977:93:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2874:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:0"
									},
									"scope": 926,
									"src": "2801:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3385:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "3395:9:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3370:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:0"
									},
									"scope": 926,
									"src": "3319:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3538:336:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3548:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 224,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3564:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 230,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "3605:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 231,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "3611:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 237,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "3686:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 239,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "3728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 243,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "3735:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "3711:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3855:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "3846:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:0"
									},
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3485:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:0"
									},
									"scope": 926,
									"src": "3468:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1031
									],
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "4020:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4030:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 269,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4071:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 271,
													"indexExpression": {
														"id": 270,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4087:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 264,
												"id": 272,
												"nodeType": "Return",
												"src": "4064:31:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3956:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:0"
									},
									"scope": 926,
									"src": "3935:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1023
									],
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4253:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "4282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4296:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 283,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "4263:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:0"
									},
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4196:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4214:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:0"
									},
									"scope": 926,
									"src": "4169:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "4491:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 302,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4508:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 304,
														"indexExpression": {
															"id": 303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4527:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 306,
													"indexExpression": {
														"id": 305,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "4534:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 301,
												"id": 307,
												"nodeType": "Return",
												"src": "4501:42:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:0"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4414:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4429:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4485:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:0"
									},
									"scope": 926,
									"src": "4388:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "4701:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 322,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "4790:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4790:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 324,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "4804:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 321,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "4771:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4814:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4763:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4763:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4883:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4889:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 329,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4873:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "4873:28:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4692:8:0"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4642:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4656:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4648:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:43:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4701:0:0"
									},
									"scope": 926,
									"src": "4612:296:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										997
									],
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "5067:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5094:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5100:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5113:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 347,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															355,
															385
														],
														"referencedDeclaration": 385,
														"src": "5077:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5077:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "5077:39:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "4914:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4983:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5058:8:0"
									},
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5008:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5000:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5022:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5014:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:43:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5067:0:0"
									},
									"scope": 926,
									"src": "4974:149:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										987
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "5301:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 370,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "5338:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5338:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5352:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 369,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "5319:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5319:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5362:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "5311:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5440:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5453:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "5420:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "5420:38:0"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "5129:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5198:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5292:8:0"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5223:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5215:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5237:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5241:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5271:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5258:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:62:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5301:0:0"
									},
									"scope": 926,
									"src": "5189:276:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "6428:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "6448:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6454:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "6458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "6438:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6438:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "6438:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6507:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 406,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "6513:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 407,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "6517:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 408,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6526:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 404,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "6484:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6484:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6533:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "6476:110:0"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "5471:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6335:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6349:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6371:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6363:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6405:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6392:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:62:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:0:0"
									},
									"scope": 926,
									"src": "6326:267:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "6777:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 422,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "6794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 424,
													"indexExpression": {
														"id": 423,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "6802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6794:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "6787:23:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "6599:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6711:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:17:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6768:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:9:0"
									},
									"scope": 926,
									"src": "6702:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7191:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 436,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "7217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 435,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7208:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7208:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7229:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7208:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 434,
												"id": 443,
												"nodeType": "Return",
												"src": "7201:38:0"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "6823:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7129:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7136:17:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7185:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7185:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7184:6:0"
									},
									"scope": 926,
									"src": "7120:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "7503:162:0",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7521:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7513:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7513:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"arguments": [
														{
															"id": 459,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 457,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "7529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7536:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "7529:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7513:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 462,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "7570:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 463,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7581:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7570:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 466,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "7607:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 467,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "7614:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 465,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "7590:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7590:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7570:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 471,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "7638:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 470,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "7626:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7626:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 473,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "7650:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7626:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7570:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 476,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7569:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 454,
												"id": 477,
												"nodeType": "Return",
												"src": "7562:96:0"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7252:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7413:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7457:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7449:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7431:34:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7497:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7497:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:6:0"
									},
									"scope": 926,
									"src": "7404:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "8060:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8080:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "8084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 487,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															494,
															523
														],
														"referencedDeclaration": 523,
														"src": "8070:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8070:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "8070:26:0"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "7671:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8004:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8022:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8014:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8013:29:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:0"
									},
									"scope": 926,
									"src": "7995:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "8408:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8424:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "8428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "8418:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8418:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8498:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8490:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 511,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8490:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8490:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 515,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8502:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 516,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "8506:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 517,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "8515:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 510,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "8467:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8467:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8534:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8446:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8446:150:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "8109:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8333:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8351:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8343:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8385:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8372:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8342:48:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8408:0:0"
									},
									"scope": 926,
									"src": "8324:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "8986:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "9004:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9018:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9010:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9010:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9004:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9022:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8996:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9075:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 543,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "9084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 542,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "9076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9076:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9094:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9067:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9067:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9165:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9157:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 550,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9157:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9157:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9169:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9182:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 549,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9136:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9136:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "9136:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9279:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 561,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "9288:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 560,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "9280:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9280:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9298:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9271:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "9271:58:0"
											},
											{
												"id": 573,
												"nodeType": "UncheckedBlock",
												"src": "9340:360:0",
												"statements": [
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 567,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9671:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 569,
																"indexExpression": {
																	"id": 568,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "9681:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9671:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9671:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "9671:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 574,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "9710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 576,
														"indexExpression": {
															"id": 575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9710:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "9729:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9710:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9710:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9768:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "9747:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9747:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "EmitStatement",
												"src": "9742:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9819:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9811:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9811:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9811:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9823:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9836:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 589,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "9791:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9791:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9791:47:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "8609:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8934:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8948:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8939:29:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8986:0:0"
									},
									"scope": 926,
									"src": "8925:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10220:713:0",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10238:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "10230:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 606,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10230:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"arguments": [
														{
															"id": 610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 608,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10246:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10253:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "10246:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10246:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10230:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10316:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10308:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 615,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10308:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10308:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 613,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "10280:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10280:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "10280:51:0"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10433:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 626,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "10456:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 624,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "10441:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10448:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 145,
															"src": "10441:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10441:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10433:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "10433:31:0"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10502:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 630,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "10509:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 632,
														"indexExpression": {
															"id": 631,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10509:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "10502:31:0"
											},
											{
												"id": 641,
												"nodeType": "UncheckedBlock",
												"src": "10544:237:0",
												"statements": [
													{
														"expression": {
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 635,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10749:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 637,
																"indexExpression": {
																	"id": 636,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "10759:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10769:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10749:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 640,
														"nodeType": "ExpressionStatement",
														"src": "10749:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10790:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 642,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 644,
														"indexExpression": {
															"id": 643,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10797:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "10790:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 648,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 649,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10845:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10845:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "10829:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "EmitStatement",
												"src": "10824:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10903:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10903:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10903:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10924:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 656,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "10876:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10876:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "10876:50:0"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "9851:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10180:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10186:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10185:17:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10220:0:0"
									},
									"scope": 926,
									"src": "10171:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "11336:1124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 680,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "11369:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 678,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "11354:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11361:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11354:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11354:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 682,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "11381:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11354:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11387:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11346:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "11346:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 688,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "11445:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11451:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11451:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11463:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11437:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "11437:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "11534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "11540:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "11544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11553:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 697,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "11513:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "11513:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 707,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "11670:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 705,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "11655:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11662:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11655:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11655:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 709,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "11682:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11655:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11688:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11647:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "11647:81:0"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11790:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 714,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "11797:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 716,
														"indexExpression": {
															"id": 715,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "11813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11797:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "11790:31:0"
											},
											{
												"id": 731,
												"nodeType": "UncheckedBlock",
												"src": "11832:496:0",
												"statements": [
													{
														"expression": {
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 719,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12265:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"id": 720,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "12275:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12265:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12284:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12265:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 724,
														"nodeType": "ExpressionStatement",
														"src": "12265:20:0"
													},
													{
														"expression": {
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12299:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "12309:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12299:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12316:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12299:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 730,
														"nodeType": "ExpressionStatement",
														"src": "12299:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 732,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "12337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 734,
														"indexExpression": {
															"id": 733,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12337:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 735,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "12356:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12337:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "12337:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 739,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "12383:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "12389:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "12374:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12374:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "EmitStatement",
												"src": "12369:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "12432:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "12438:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12451:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 744,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "12412:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12412:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "12412:41:0"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "10939:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11266:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11284:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "11276:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11298:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "11290:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11310:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "11302:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11275:43:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11336:0:0"
									},
									"scope": 926,
									"src": "11257:1203:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "12636:107:0",
										"statements": [
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 760,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "12646:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 762,
														"indexExpression": {
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "12662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12646:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 763,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "12673:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12646:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "12646:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 769,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "12714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 767,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "12699:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$926_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12706:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "12699:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12699:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "12724:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "12728:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "12690:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12690:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "12685:51:0"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "12466:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12581:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12598:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12590:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12589:29:0"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12636:0:0"
									},
									"scope": 926,
									"src": "12572:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "12972:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 787,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "12990:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 788,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "12999:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12990:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13009:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12982:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12982:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "12982:55:0"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 793,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "13047:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 796,
															"indexExpression": {
																"id": 794,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "13066:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13047:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 797,
														"indexExpression": {
															"id": 795,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "13073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13047:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 798,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "13085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13047:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "13047:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 802,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "13123:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "13130:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "13140:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 801,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "13108:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13108:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "EmitStatement",
												"src": "13103:46:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "12749:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12888:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12915:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "12907:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12930:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "12922:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12945:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "12940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12906:48:0"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12972:0:0"
									},
									"scope": 926,
									"src": "12879:277:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "13303:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 816,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "13329:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 815,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "13321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13321:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13339:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13313:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "13313:53:0"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "13162:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13249:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13272:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "13264:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13263:17:0"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13303:0:0"
									},
									"scope": 926,
									"src": "13240:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "14080:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 836,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "14094:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14097:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "14094:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14094:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "14714:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14735:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 835,
															"id": 880,
															"nodeType": "Return",
															"src": "14728:11:0"
														}
													]
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "14090:660:0",
												"trueBody": {
													"id": 878,
													"nodeType": "Block",
													"src": "14111:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 858,
																		"nodeType": "Block",
																		"src": "14225:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 852,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 850,
																						"src": "14250:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 853,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1060,
																								"src": "14260:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1060_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 854,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14276:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1059,
																							"src": "14260:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 855,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14293:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14260:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14250:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 835,
																				"id": 857,
																				"nodeType": "Return",
																				"src": "14243:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 859,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 851,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 850,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14217:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 859,
																				"src": "14210:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 849,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14210:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14209:15:0"
																	},
																	"src": "14201:115:0"
																},
																{
																	"block": {
																		"id": 875,
																		"nodeType": "Block",
																		"src": "14345:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 866,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 863,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "14367:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 864,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14374:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14367:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14384:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14367:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 873,
																					"nodeType": "Block",
																					"src": "14494:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14580:86:0",
																								"nodeType": "YulBlock",
																								"src": "14580:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14617:2:0",
																															"nodeType": "YulLiteral",
																															"src": "14617:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14621:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14621:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14613:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "14613:3:0"
																													},
																													"nativeSrc": "14613:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14613:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14636:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14636:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14630:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "14630:5:0"
																													},
																													"nativeSrc": "14630:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14630:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14606:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "14606:6:0"
																											},
																											"nativeSrc": "14606:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "14606:38:0"
																										},
																										"nativeSrc": "14606:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "14606:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 861,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14621:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 861,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14636:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 872,
																							"nodeType": "InlineAssembly",
																							"src": "14571:95:0"
																						}
																					]
																				},
																				"id": 874,
																				"nodeType": "IfStatement",
																				"src": "14363:321:0",
																				"trueBody": {
																					"id": 871,
																					"nodeType": "Block",
																					"src": "14387:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 868,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14416:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 867,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14409:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 869,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14409:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 870,
																							"nodeType": "ExpressionStatement",
																							"src": "14409:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 876,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 862,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 861,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14337:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 876,
																				"src": "14324:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 860,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14324:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14323:21:0"
																	},
																	"src": "14317:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 843,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "14166:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14166:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 845,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "14180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 846,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "14186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 847,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "14195:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 840,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "14145:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 839,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "14129:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1060_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14129:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1060",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14149:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1059,
																	"src": "14129:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14129:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 877,
															"nodeType": "TryStatement",
															"src": "14125:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "13379:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13934:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13974:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "13966:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13996:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "13988:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14033:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14033:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:100:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14074:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14073:6:0"
									},
									"scope": 926,
									"src": "13925:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "15586:2:0",
										"statements": []
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "14762:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15481:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15510:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "15502:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15524:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "15516:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15536:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "15528:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15558:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "15550:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15501:67:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15586:0:0"
									},
									"scope": 926,
									"src": "15472:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "16407:2:0",
										"statements": []
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "15594:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16303:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16331:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16323:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16345:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16337:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16357:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16349:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16379:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16371:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16322:67:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16407:0:0"
									},
									"scope": 926,
									"src": "16294:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "16958:45:0",
										"statements": [
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 918,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "16968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 920,
														"indexExpression": {
															"id": 919,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "16978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16968:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 921,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "16990:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16968:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "16968:28:0"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "16415:409:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16891:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "16916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16941:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "16933:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16915:33:0"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16958:0:0"
									},
									"scope": 926,
									"src": "16882:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 927,
							"src": "628:16377:0",
							"usedErrors": [],
							"usedEvents": [
								941,
								950,
								959
							]
						}
					],
					"src": "107:16899:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1712
						],
						"IERC721": [
							1042
						]
					},
					"id": 1043,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1043,
							"sourceUnit": 1713,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1712,
										"src": "271:7:1"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1042,
							"linearizedBaseContracts": [
								1042,
								1712
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 941,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 950,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 959,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 1042,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 1042,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1835:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1878:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:1"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:1"
									},
									"scope": 1042,
									"src": "1809:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2632:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2646:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:1"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:1"
									},
									"scope": 1042,
									"src": "2606:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3475:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:1"
									},
									"scope": 1042,
									"src": "3427:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3981:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3993:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:1"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:1"
									},
									"scope": 1042,
									"src": "3964:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "4366:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:1"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:1"
									},
									"scope": 1042,
									"src": "4339:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4579:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:1"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4619:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:1"
									},
									"scope": 1042,
									"src": "4558:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4812:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4827:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:1"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4868:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:1"
									},
									"scope": 1042,
									"src": "4786:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1043,
							"src": "250:4626:1",
							"usedErrors": [],
							"usedEvents": [
								941,
								950,
								959
							]
						}
					],
					"src": "108:4769:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1060
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1044,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1045,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1060,
							"linearizedBaseContracts": [
								1060
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 1060,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1061,
							"src": "294:692:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1712
						],
						"IERC721": [
							1042
						],
						"IERC721Metadata": [
							1087
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1063,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1088,
							"sourceUnit": 1043,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1065,
										"name": "IERC721",
										"nameLocations": [
											"326:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1042,
										"src": "326:7:3"
									},
									"id": 1066,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1064,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1087,
							"linearizedBaseContracts": [
								1087,
								1042,
								1712
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1069,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 1087,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 1087,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1083,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 1087,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1088,
							"src": "297:463:3",
							"usedErrors": [],
							"usedEvents": [
								941,
								950,
								959
							]
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1417
						]
					},
					"id": 1418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1090,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1098,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1103,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 1417,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "2718:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1116,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1417",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1417",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1114,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1119,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "2761:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:4"
											},
											{
												"assignments": [
													1125,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "2813:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1124,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1126,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2831:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1128,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:4"
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2666:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:4"
									},
									"scope": 1417,
									"src": "2647:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "3790:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1150,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "3829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "3837:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1149,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1197,
															1241
														],
														"referencedDeclaration": 1241,
														"src": "3807:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1155,
												"nodeType": "Return",
												"src": "3800:79:4"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3723:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3739:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:4"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:4"
									},
									"scope": 1417,
									"src": "3701:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "4255:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4294:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "4302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1173,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "4311:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1169,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1197,
															1241
														],
														"referencedDeclaration": 1241,
														"src": "4272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1175,
												"nodeType": "Return",
												"src": "4265:59:4"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4190:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:4"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4241:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:4"
									},
									"scope": 1417,
									"src": "4108:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "4806:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1190,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "4845:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "4853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1192,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "4859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1189,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1197,
															1241
														],
														"referencedDeclaration": 1241,
														"src": "4823:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1195,
												"nodeType": "Return",
												"src": "4816:94:4"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4759:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:4"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4792:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:4"
									},
									"scope": 1417,
									"src": "4693:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "5344:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1214,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1417",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1417",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1212,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1217,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "5387:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:4"
											},
											{
												"assignments": [
													1223,
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "5446:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1222,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "5460:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1224,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"arguments": [
														{
															"id": 1230,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "5513:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1226,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "5487:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1228,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "5506:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1234,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5562:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "5570:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1236,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "5579:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1237,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "5591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1233,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "5535:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1239,
												"nodeType": "Return",
												"src": "5528:76:4"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "5205:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "5229:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "5256:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "5279:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:4"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "5330:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:4"
									},
									"scope": 1417,
									"src": "5165:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "5888:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "5924:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "5932:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1251,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1287
														],
														"referencedDeclaration": 1287,
														"src": "5905:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1256,
												"nodeType": "Return",
												"src": "5898:80:4"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "5816:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "5832:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:4"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "5874:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:4"
									},
									"scope": 1417,
									"src": "5788:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "6327:168:4",
										"statements": [
											{
												"assignments": [
													1271,
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1271,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1286,
														"src": "6338:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1270,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1273,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1286,
														"src": "6352:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1272,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1278,
												"initialValue": {
													"arguments": [
														{
															"id": 1276,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "6397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1274,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1280,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1281,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "6454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1282,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "6463:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1283,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "6475:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1279,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "6419:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1285,
												"nodeType": "Return",
												"src": "6412:76:4"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "6206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "6230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "6257:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1264,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:4"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "6313:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:4"
									},
									"scope": 1417,
									"src": "6169:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "6771:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "6809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "6817:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1297,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1304,
															1333
														],
														"referencedDeclaration": 1333,
														"src": "6788:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1302,
												"nodeType": "Return",
												"src": "6781:84:4"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6720:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:4"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6757:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:4"
									},
									"scope": 1417,
									"src": "6674:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "7213:170:4",
										"statements": [
											{
												"assignments": [
													1317,
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1332,
														"src": "7224:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1316,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1332,
														"src": "7238:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1318,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"arguments": [
														{
															"id": 1322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "7285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "7265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1326,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "7342:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1328,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "7351:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1329,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "7363:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1325,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "7307:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1331,
												"nodeType": "Return",
												"src": "7300:76:4"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "7097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "7121:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "7148:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:4"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 1417,
									"src": "7058:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "7865:434:4",
										"statements": [
											{
												"condition": {
													"id": 1347,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "7879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "8235:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "8257:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1366,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "8269:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1364,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "8249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1368,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:4"
														}
													]
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "7875:418:4",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "7888:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1348,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "7906:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "7902:286:4",
															"trueBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "7930:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1354,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1336,
																							"src": "8132:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1353,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1105,
																						"src": "8121:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1352,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1358,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1361,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "8208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1346,
															"id": 1362,
															"nodeType": "Return",
															"src": "8201:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "7716:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "7740:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "7762:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "7795:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:4"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "7851:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:4"
									},
									"scope": 1417,
									"src": "7671:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "8680:135:4",
										"statements": [
											{
												"condition": {
													"id": 1384,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1375,
													"src": "8694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "8751:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1389,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "8773:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1390,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "8785:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1388,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "8765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:4"
														}
													]
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "8690:119:4",
												"trueBody": {
													"id": 1387,
													"nodeType": "Block",
													"src": "8703:42:4",
													"statements": [
														{
															"expression": {
																"id": 1385,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "8724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1383,
															"id": 1386,
															"nodeType": "Return",
															"src": "8717:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "8555:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "8577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "8610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1378,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:4"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "8666:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:4"
									},
									"scope": 1417,
									"src": "8520:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "8904:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1403,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "8980:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "9310:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1410,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "9331:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1409,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:4"
														}
													]
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "8976:379:4",
												"trueBody": {
													"id": 1408,
													"nodeType": "Block",
													"src": "9003:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:4",
																"nodeType": "YulBlock",
																"src": "9161:133:4",
																"statements": [
																	{
																		"nativeSrc": "9179:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:4"
																			},
																			"nativeSrc": "9202:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:4",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:4"
																					},
																					"nativeSrc": "9243:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:4"
																			},
																			"nativeSrc": "9236:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:4"
																		},
																		"nativeSrc": "9236:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1398,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1398,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:4",
																	"valueSize": 1
																}
															],
															"id": 1407,
															"nodeType": "InlineAssembly",
															"src": "9152:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "8838:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "8863:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:4"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:4"
									},
									"scope": 1417,
									"src": "8821:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1418,
							"src": "194:9169:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1447
						]
					},
					"id": 1448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1447,
							"linearizedBaseContracts": [
								1447
							],
							"name": "Context",
							"nameLocation": "641:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "717:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1425,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1427,
												"nodeType": "Return",
												"src": "727:17:5"
											}
										]
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:5"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:5"
									},
									"scope": 1447,
									"src": "655:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "824:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1434,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1436,
												"nodeType": "Return",
												"src": "834:15:5"
											}
										]
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:5"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "808:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:5"
									},
									"scope": 1447,
									"src": "757:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "934:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1442,
												"id": 1444,
												"nodeType": "Return",
												"src": "944:8:5"
											}
										]
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:5"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "925:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:5"
									},
									"scope": 1447,
									"src": "862:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1448,
							"src": "623:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:861:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2578
						],
						"SignedMath": [
							2683
						],
						"Strings": [
							1676
						]
					},
					"id": 1677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1449,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1677,
							"sourceUnit": 2579,
							"src": "126:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1677,
							"sourceUnit": 2684,
							"src": "152:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1452,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1676,
							"linearizedBaseContracts": [
								1676
							],
							"name": "Strings",
							"nameLocation": "228:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1455,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "242:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1453,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1454,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1458,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "302:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1456,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "518:625:6",
										"statements": [
											{
												"id": 1504,
												"nodeType": "UncheckedBlock",
												"src": "528:609:6",
												"statements": [
													{
														"assignments": [
															1467
														],
														"declarations": [
															{
																"constant": false,
																"id": 1467,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1504,
																"src": "552:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1466,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1474,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1470,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "580:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1468,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2578,
																		"src": "569:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2578_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "569:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:6"
													},
													{
														"assignments": [
															1476
														],
														"declarations": [
															{
																"constant": false,
																"id": 1476,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1504,
																"src": "604:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1475,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1481,
														"initialValue": {
															"arguments": [
																{
																	"id": 1479,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "638:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1477,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:6"
													},
													{
														"assignments": [
															1483
														],
														"declarations": [
															{
																"constant": false,
																"id": 1483,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1504,
																"src": "659:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1482,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1484,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:6"
													},
													{
														"AST": {
															"nativeSrc": "740:67:6",
															"nodeType": "YulBlock",
															"src": "740:67:6",
															"statements": [
																{
																	"nativeSrc": "758:35:6",
																	"nodeType": "YulAssignment",
																	"src": "758:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:6",
																						"nodeType": "YulLiteral",
																						"src": "781:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:6"
																				},
																				"nativeSrc": "777:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:6"
																		},
																		"nativeSrc": "765:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1476,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1467,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1483,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:6",
																"valueSize": 1
															}
														],
														"id": 1485,
														"nodeType": "InlineAssembly",
														"src": "731:76:6"
													},
													{
														"body": {
															"id": 1500,
															"nodeType": "Block",
															"src": "833:267:6",
															"statements": [
																{
																	"expression": {
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:6",
																		"subExpression": {
																			"id": 1487,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "851:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1489,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:6",
																		"nodeType": "YulBlock",
																		"src": "934:84:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:6",
																											"nodeType": "YulLiteral",
																											"src": "985:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:6"
																									},
																									"nativeSrc": "974:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:6",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:6"
																							},
																							"nativeSrc": "969:30:6",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:6"
																					},
																					"nativeSrc": "956:44:6",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:6"
																				},
																				"nativeSrc": "956:44:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1455,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1483,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1461,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1490,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:6"
																},
																{
																	"expression": {
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "1035:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1494,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1495,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "1068:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1499,
																	"nodeType": "IfStatement",
																	"src": "1064:21:6",
																	"trueBody": {
																		"id": 1498,
																		"nodeType": "Break",
																		"src": "1080:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1501,
														"nodeType": "WhileStatement",
														"src": "820:280:6"
													},
													{
														"expression": {
															"id": 1502,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "1120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1465,
														"id": 1503,
														"nodeType": "Return",
														"src": "1113:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:6"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "503:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1463,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:6"
									},
									"scope": 1676,
									"src": "447:696:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "1313:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1354:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:6",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1527,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1509,
																					"src": "1400:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1525,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2683,
																					"src": "1385:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2683_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:6",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2682,
																				"src": "1385:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1524,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1506,
																			1534
																		],
																		"referencedDeclaration": 1506,
																		"src": "1376:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1516,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1514,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1513,
												"id": 1532,
												"nodeType": "Return",
												"src": "1323:86:6"
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1261:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1508,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:6"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1298:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:6"
									},
									"scope": 1676,
									"src": "1243:173:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "1595:100:6",
										"statements": [
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1543,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1546,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "1667:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1544,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2578,
																				"src": "1655:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2578_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2538,
																			"src": "1655:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1542,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1554,
																	1630,
																	1650
																],
																"referencedDeclaration": 1630,
																"src": "1636:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1541,
														"id": 1551,
														"nodeType": "Return",
														"src": "1629:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:6"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1580:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:6"
									},
									"scope": 1676,
									"src": "1521:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1908:347:6",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "1918:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1564,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1569,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "1954:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1566,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:6"
											},
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1575,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "1975:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1577,
														"indexExpression": {
															"hexValue": "30",
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:6"
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1581,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "2000:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1583,
														"indexExpression": {
															"hexValue": "31",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:6"
											},
											{
												"body": {
													"id": 1615,
													"nodeType": "Block",
													"src": "2070:83:6",
													"statements": [
														{
															"expression": {
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1601,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "2084:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1603,
																	"indexExpression": {
																		"id": 1602,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "2091:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1604,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "2096:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1608,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1605,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "2105:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1610,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:6"
														},
														{
															"expression": {
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "2131:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1595,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "2058:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1616,
												"initializationExpression": {
													"assignments": [
														1588
													],
													"declarations": [
														{
															"constant": false,
															"id": 1588,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1616,
															"src": "2030:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1587,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1594,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1590,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "2046:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:6",
														"subExpression": {
															"id": 1598,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "2067:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1600,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1618,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "2170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1626,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "2241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1624,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1628,
												"nodeType": "Return",
												"src": "2227:21:6"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1839:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:6"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1893:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:6"
									},
									"scope": 1676,
									"src": "1818:437:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "2480:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1643,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2525:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1641,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1639,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1646,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "2533:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1638,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1554,
															1630,
															1650
														],
														"referencedDeclaration": 1630,
														"src": "2497:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1648,
												"nodeType": "Return",
												"src": "2490:59:6"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "2428:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:6"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"scope": 1676,
									"src": "2407:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "2711:66:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1663,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "2744:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1661,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1660,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1669,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "2767:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1667,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1666,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1673,
												"nodeType": "Return",
												"src": "2721:49:6"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2648:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2665:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:6"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2705:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:6"
									},
									"scope": 1676,
									"src": "2633:144:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "220:2559:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1700
						],
						"IERC165": [
							1712
						]
					},
					"id": 1701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 1713,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1681,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1712,
										"src": "754:7:7"
									},
									"id": 1682,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1680,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1700,
							"linearizedBaseContracts": [
								1700,
								1712
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1711
									],
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1693,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1712_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1712_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1692,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1712",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1697,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1687,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1700,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1701,
							"src": "726:260:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1712
						]
					},
					"id": 1713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1702,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1703,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1712,
							"linearizedBaseContracts": [
								1712
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1712,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1713,
							"src": "405:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2578
						]
					},
					"id": 2579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1714,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1715,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2578,
							"linearizedBaseContracts": [
								2578
							],
							"name": "Math",
							"nameLocation": "210:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1719,
									"members": [
										{
											"id": 1716,
											"name": "Down",
											"nameLocation": "245:4:9",
											"nodeType": "EnumValue",
											"src": "245:4:9"
										},
										{
											"id": 1717,
											"name": "Up",
											"nameLocation": "287:2:9",
											"nodeType": "EnumValue",
											"src": "287:2:9"
										},
										{
											"id": 1718,
											"name": "Zero",
											"nameLocation": "318:4:9",
											"nodeType": "EnumValue",
											"src": "318:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:9",
									"nodeType": "EnumDefinition",
									"src": "221:122:9"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "480:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1729,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1730,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "501:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1733,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "509:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:9",
													"trueExpression": {
														"id": 1732,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1735,
												"nodeType": "Return",
												"src": "490:20:9"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "426:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:9"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "471:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:9"
									},
									"scope": 2578,
									"src": "413:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "655:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1747,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1748,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1751,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:9",
													"trueExpression": {
														"id": 1750,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "680:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1753,
												"nodeType": "Return",
												"src": "665:20:9"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "646:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:9"
									},
									"scope": 2578,
									"src": "588:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "876:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1765,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1758,
																	"src": "931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1766,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "935:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1768,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1769,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "941:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1770,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1772,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1776,
												"nodeType": "Return",
												"src": "923:28:9"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "822:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:9"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "867:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:9"
									},
									"scope": 2578,
									"src": "805:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1228:123:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1788,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "1316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1792,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "1330:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1795,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1796,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "1339:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1787,
												"id": 1801,
												"nodeType": "Return",
												"src": "1309:35:9"
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1174:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1185:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 2578,
									"src": "1157:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "1765:4115:9",
										"statements": [
											{
												"id": 1924,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:9",
												"statements": [
													{
														"assignments": [
															1816
														],
														"declarations": [
															{
																"constant": false,
																"id": 1816,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1924,
																"src": "2096:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1815,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1817,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:9"
													},
													{
														"assignments": [
															1819
														],
														"declarations": [
															{
																"constant": false,
																"id": 1819,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1924,
																"src": "2168:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1820,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:9"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:9",
															"nodeType": "YulBlock",
															"src": "2248:157:9",
															"statements": [
																{
																	"nativeSrc": "2266:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:9"
																				},
																				"nativeSrc": "2289:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:9"
																		},
																		"nativeSrc": "2276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:9",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:9",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nativeSrc": "2322:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:9",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:9"
																				},
																				"nativeSrc": "2361:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:9"
																				},
																				"nativeSrc": "2377:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:9"
																		},
																		"nativeSrc": "2357:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1819,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1806,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1806,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:9",
																"valueSize": 1
															}
														],
														"id": 1821,
														"nodeType": "InlineAssembly",
														"src": "2239:166:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "2486:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1830,
														"nodeType": "IfStatement",
														"src": "2482:368:9",
														"trueBody": {
															"id": 1829,
															"nodeType": "Block",
															"src": "2498:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1825,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "2816:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1826,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "2824:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1814,
																	"id": 1828,
																	"nodeType": "Return",
																	"src": "2809:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1832,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "2960:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1833,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "2974:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1831,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1837,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:9"
													},
													{
														"assignments": [
															1839
														],
														"declarations": [
															{
																"constant": false,
																"id": 1839,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1924,
																"src": "3261:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1838,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1840,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:9"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:9",
															"nodeType": "YulBlock",
															"src": "3301:291:9",
															"statements": [
																{
																	"nativeSrc": "3370:38:9",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:9"
																		},
																		"nativeSrc": "3383:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:9",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:9"
																				},
																				"nativeSrc": "3510:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:9"
																		},
																		"nativeSrc": "3499:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:9",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:9"
																		},
																		"nativeSrc": "3557:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1819,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1819,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1839,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1839,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1839,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1806,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:9",
																"valueSize": 1
															}
														],
														"id": 1841,
														"nodeType": "InlineAssembly",
														"src": "3292:300:9"
													},
													{
														"assignments": [
															1843
														],
														"declarations": [
															{
																"constant": false,
																"id": 1843,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1924,
																"src": "3899:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1842,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1851,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1844,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "3914:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:9",
																			"subExpression": {
																				"id": 1845,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1810,
																				"src": "3930:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:9"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:9",
															"nodeType": "YulBlock",
															"src": "3969:362:9",
															"statements": [
																{
																	"nativeSrc": "4034:37:9",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:9"
																		},
																		"nativeSrc": "4049:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:9",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:9"
																		},
																		"nativeSrc": "4147:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:9",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:9"
																						},
																						"nativeSrc": "4294:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:9"
																				},
																				"nativeSrc": "4290:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:9"
																		},
																		"nativeSrc": "4286:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:9",
																"valueSize": 1
															}
														],
														"id": 1852,
														"nodeType": "InlineAssembly",
														"src": "3960:371:9"
													},
													{
														"expression": {
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1853,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "4397:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1854,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "4406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1855,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "4414:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1858,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:9"
													},
													{
														"assignments": [
															1860
														],
														"declarations": [
															{
																"constant": false,
																"id": 1860,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1924,
																"src": "4736:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1859,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1867,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1862,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "4759:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:9"
													},
													{
														"expression": {
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1868,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "4992:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1870,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5007:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1871,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5021:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1875,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:9"
													},
													{
														"expression": {
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1876,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "5061:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1878,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5076:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1879,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5090:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1883,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:9"
													},
													{
														"expression": {
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1884,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "5131:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1886,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5146:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1887,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5160:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1891,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:9"
													},
													{
														"expression": {
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1892,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "5201:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1894,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5216:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1895,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5230:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1899,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:9"
													},
													{
														"expression": {
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1900,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "5271:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5286:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1903,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5300:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1907,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:9"
													},
													{
														"expression": {
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1908,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "5342:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1910,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5357:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1911,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5371:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1915,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:9"
													},
													{
														"expression": {
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1916,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "5812:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1917,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "5821:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1918,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "5829:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1921,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:9"
													},
													{
														"expression": {
															"id": 1922,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "5857:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1814,
														"id": 1923,
														"nodeType": "Return",
														"src": "5850:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1683:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1694:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1705:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:9"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1749:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:9"
									},
									"scope": 2578,
									"src": "1667:4213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "6122:189:9",
										"statements": [
											{
												"assignments": [
													1942
												],
												"declarations": [
													{
														"constant": false,
														"id": 1942,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1969,
														"src": "6132:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"initialValue": {
													"arguments": [
														{
															"id": 1944,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "6156:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1945,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6159:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1946,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "6162:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1943,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1926,
															1970
														],
														"referencedDeclaration": 1926,
														"src": "6149:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1719",
															"typeString": "enum Math.Rounding"
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1949,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "6188:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1719",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1950,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "6200:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1719_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1717,
															"src": "6200:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1719",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1954,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "6222:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1955,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "6225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1956,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "6228:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1953,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1966,
												"nodeType": "IfStatement",
												"src": "6184:98:9",
												"trueBody": {
													"id": 1965,
													"nodeType": "Block",
													"src": "6246:36:9",
													"statements": [
														{
															"expression": {
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1961,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "6260:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1964,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1967,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1942,
													"src": "6298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1968,
												"nodeType": "Return",
												"src": "6291:13:9"
											}
										]
									},
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6028:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6039:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6050:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6071:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1719",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1934,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1719,
														"src": "6071:8:9"
													},
													"referencedDeclaration": 1719,
													"src": "6071:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1719",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:9"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6113:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:9"
									},
									"scope": 2578,
									"src": "6012:299:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "6587:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1978,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "6601:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1984,
												"nodeType": "IfStatement",
												"src": "6597:45:9",
												"trueBody": {
													"id": 1983,
													"nodeType": "Block",
													"src": "6609:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1977,
															"id": 1982,
															"nodeType": "Return",
															"src": "6623:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2081,
														"src": "7321:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1985,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1995,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1989,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "7349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1988,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2250,
																			2286
																		],
																		"referencedDeclaration": 2250,
																		"src": "7344:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1993,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:9"
											},
											{
												"id": 2080,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:9",
												"statements": [
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "7782:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1997,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "7792:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1998,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "7801:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1999,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "7805:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:9"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "7831:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2008,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "7841:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2009,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "7850:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "7854:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2013,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:9"
													},
													{
														"expression": {
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "7880:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2019,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "7890:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2020,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "7899:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2021,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "7903:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2028,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:9"
													},
													{
														"expression": {
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2029,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "7929:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2030,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "7939:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "7948:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2032,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "7952:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:9"
													},
													{
														"expression": {
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "7978:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2041,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "7988:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2042,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "7997:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2043,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "8001:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2050,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:9"
													},
													{
														"expression": {
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2051,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "8027:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2052,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "8037:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2053,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "8046:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2054,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "8050:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2057,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2061,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:9"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2062,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "8076:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2063,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "8086:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2064,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1973,
																					"src": "8095:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2065,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1986,
																					"src": "8099:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2068,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2074,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "8136:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2075,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "8144:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2076,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "8148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2073,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "8132:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1977,
														"id": 2079,
														"nodeType": "Return",
														"src": "8125:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "6544:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:9"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "6578:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:9"
									},
									"scope": 2578,
									"src": "6530:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "8348:161:9",
										"statements": [
											{
												"id": 2116,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:9",
												"statements": [
													{
														"assignments": [
															2094
														],
														"declarations": [
															{
																"constant": false,
																"id": 2094,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2116,
																"src": "8382:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2093,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2098,
														"initialValue": {
															"arguments": [
																{
																	"id": 2096,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "8404:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2095,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2082,
																	2118
																],
																"referencedDeclaration": 2082,
																"src": "8399:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2099,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "8427:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1719",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2100,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2088,
																					"src": "8437:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2101,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1719,
																						"src": "8449:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1719_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1717,
																					"src": "8449:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2104,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2094,
																						"src": "8464:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2105,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2094,
																						"src": "8473:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2107,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2085,
																					"src": "8482:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2092,
														"id": 2115,
														"nodeType": "Return",
														"src": "8420:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "8286:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "8297:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1719",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2086,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1719,
														"src": "8297:8:9"
													},
													"referencedDeclaration": 1719,
													"src": "8297:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1719",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:9"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "8339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:9"
									},
									"scope": 2578,
									"src": "8272:237:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "8694:922:9",
										"statements": [
											{
												"assignments": [
													2127
												],
												"declarations": [
													{
														"constant": false,
														"id": 2127,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2249,
														"src": "8704:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"initialValue": {
													"hexValue": "30",
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:9"
											},
											{
												"id": 2246,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2130,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "8760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2144,
														"nodeType": "IfStatement",
														"src": "8756:99:9",
														"trueBody": {
															"id": 2143,
															"nodeType": "Block",
															"src": "8778:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2135,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "8796:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2138,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:9"
																},
																{
																	"expression": {
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2139,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "8827:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2142,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2145,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "8872:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2159,
														"nodeType": "IfStatement",
														"src": "8868:96:9",
														"trueBody": {
															"id": 2158,
															"nodeType": "Block",
															"src": "8889:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2150,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "8907:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:9"
																},
																{
																	"expression": {
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2154,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "8937:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2157,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2160,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "8981:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2174,
														"nodeType": "IfStatement",
														"src": "8977:96:9",
														"trueBody": {
															"id": 2173,
															"nodeType": "Block",
															"src": "8998:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2165,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "9016:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2168,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:9"
																},
																{
																	"expression": {
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "9046:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2172,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "9090:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2189,
														"nodeType": "IfStatement",
														"src": "9086:96:9",
														"trueBody": {
															"id": 2188,
															"nodeType": "Block",
															"src": "9107:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "9125:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2183,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:9"
																},
																{
																	"expression": {
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "9155:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2187,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "9199:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2204,
														"nodeType": "IfStatement",
														"src": "9195:93:9",
														"trueBody": {
															"id": 2203,
															"nodeType": "Block",
															"src": "9215:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "9233:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2198,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:9"
																},
																{
																	"expression": {
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "9262:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2202,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "9305:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "9301:93:9",
														"trueBody": {
															"id": 2218,
															"nodeType": "Block",
															"src": "9321:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2213,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:9"
																},
																{
																	"expression": {
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "9368:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2217,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "9411:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2234,
														"nodeType": "IfStatement",
														"src": "9407:93:9",
														"trueBody": {
															"id": 2233,
															"nodeType": "Block",
															"src": "9427:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "9445:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2228,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:9"
																},
																{
																	"expression": {
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "9474:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2232,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "9517:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2245,
														"nodeType": "IfStatement",
														"src": "9513:64:9",
														"trueBody": {
															"id": 2244,
															"nodeType": "Block",
															"src": "9533:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2240,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "9551:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2243,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2247,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2127,
													"src": "9603:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2248,
												"nodeType": "Return",
												"src": "9596:13:9"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "8647:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:9"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "8685:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:9"
									},
									"scope": 2578,
									"src": "8633:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "9849:165:9",
										"statements": [
											{
												"id": 2284,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:9",
												"statements": [
													{
														"assignments": [
															2262
														],
														"declarations": [
															{
																"constant": false,
																"id": 2262,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2284,
																"src": "9883:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2266,
														"initialValue": {
															"arguments": [
																{
																	"id": 2264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "9905:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2263,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2250,
																	2286
																],
																"referencedDeclaration": 2250,
																"src": "9900:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "9932:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1719",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2268,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2256,
																					"src": "9942:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2269,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1719,
																						"src": "9954:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1719_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1717,
																					"src": "9954:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2273,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2262,
																						"src": "9974:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2275,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "9983:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2260,
														"id": 2283,
														"nodeType": "Return",
														"src": "9925:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "9783:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "9798:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1719",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2254,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1719,
														"src": "9798:8:9"
													},
													"referencedDeclaration": 1719,
													"src": "9798:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1719",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:9"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "9840:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:9"
									},
									"scope": 2578,
									"src": "9769:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "10201:854:9",
										"statements": [
											{
												"assignments": [
													2295
												],
												"declarations": [
													{
														"constant": false,
														"id": 2295,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2414,
														"src": "10211:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2297,
												"initialValue": {
													"hexValue": "30",
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:9"
											},
											{
												"id": 2411,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2298,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10267:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2314,
														"nodeType": "IfStatement",
														"src": "10263:103:9",
														"trueBody": {
															"id": 2313,
															"nodeType": "Block",
															"src": "10286:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2303,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "10304:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2308,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:9"
																},
																{
																	"expression": {
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2309,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10339:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2312,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2315,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10383:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2331,
														"nodeType": "IfStatement",
														"src": "10379:103:9",
														"trueBody": {
															"id": 2330,
															"nodeType": "Block",
															"src": "10402:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2320,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "10420:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:9"
																},
																{
																	"expression": {
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10455:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2329,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2332,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10499:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2348,
														"nodeType": "IfStatement",
														"src": "10495:103:9",
														"trueBody": {
															"id": 2347,
															"nodeType": "Block",
															"src": "10518:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2337,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "10536:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2342,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:9"
																},
																{
																	"expression": {
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2343,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10571:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2346,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2349,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10615:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2365,
														"nodeType": "IfStatement",
														"src": "10611:100:9",
														"trueBody": {
															"id": 2364,
															"nodeType": "Block",
															"src": "10633:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "10651:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2359,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:9"
																},
																{
																	"expression": {
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2360,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10685:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2363,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2366,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10728:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2382,
														"nodeType": "IfStatement",
														"src": "10724:100:9",
														"trueBody": {
															"id": 2381,
															"nodeType": "Block",
															"src": "10746:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2371,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "10764:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2376,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:9"
																},
																{
																	"expression": {
																		"id": 2379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2377,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10798:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2380,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2383,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10841:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2399,
														"nodeType": "IfStatement",
														"src": "10837:100:9",
														"trueBody": {
															"id": 2398,
															"nodeType": "Block",
															"src": "10859:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2388,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "10877:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2393,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:9"
																},
																{
																	"expression": {
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2394,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10911:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2397,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2400,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "10954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2410,
														"nodeType": "IfStatement",
														"src": "10950:66:9",
														"trueBody": {
															"id": 2409,
															"nodeType": "Block",
															"src": "10972:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2405,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "10990:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2408,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2412,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2295,
													"src": "11042:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2293,
												"id": 2413,
												"nodeType": "Return",
												"src": "11035:13:9"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "10154:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:9"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "10192:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:9"
									},
									"scope": 2578,
									"src": "10139:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "11290:167:9",
										"statements": [
											{
												"id": 2449,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:9",
												"statements": [
													{
														"assignments": [
															2427
														],
														"declarations": [
															{
																"constant": false,
																"id": 2427,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2449,
																"src": "11324:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2426,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2431,
														"initialValue": {
															"arguments": [
																{
																	"id": 2429,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "11347:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2428,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2415,
																	2451
																],
																"referencedDeclaration": 2415,
																"src": "11341:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2432,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "11374:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1719",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2433,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2421,
																					"src": "11384:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2434,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1719,
																						"src": "11396:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1719_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1717,
																					"src": "11396:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2437,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2438,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2427,
																						"src": "11417:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2440,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2418,
																					"src": "11426:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2446,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2425,
														"id": 2448,
														"nodeType": "Return",
														"src": "11367:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "11224:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "11239:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1719",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2419,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1719,
														"src": "11239:8:9"
													},
													"referencedDeclaration": 1719,
													"src": "11239:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1719",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:9"
									},
									"returnParameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "11281:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:9"
									},
									"scope": 2578,
									"src": "11209:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "11771:600:9",
										"statements": [
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2537,
														"src": "11781:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2462,
												"initialValue": {
													"hexValue": "30",
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:9"
											},
											{
												"id": 2534,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2463,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11837:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2477,
														"nodeType": "IfStatement",
														"src": "11833:98:9",
														"trueBody": {
															"id": 2476,
															"nodeType": "Block",
															"src": "11855:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11873:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:9"
																},
																{
																	"expression": {
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2472,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11904:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2475,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11948:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "11944:95:9",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "11965:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11983:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2486,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:9"
																},
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "12013:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "12056:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2507,
														"nodeType": "IfStatement",
														"src": "12052:95:9",
														"trueBody": {
															"id": 2506,
															"nodeType": "Block",
															"src": "12073:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2498,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "12091:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:9"
																},
																{
																	"expression": {
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2502,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "12121:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2505,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "12164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2522,
														"nodeType": "IfStatement",
														"src": "12160:95:9",
														"trueBody": {
															"id": 2521,
															"nodeType": "Block",
															"src": "12181:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2513,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "12199:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2516,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:9"
																},
																{
																	"expression": {
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2517,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "12229:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2520,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2523,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "12272:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2533,
														"nodeType": "IfStatement",
														"src": "12268:64:9",
														"trueBody": {
															"id": 2532,
															"nodeType": "Block",
															"src": "12288:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2528,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "12306:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2531,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2535,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2460,
													"src": "12358:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2536,
												"nodeType": "Return",
												"src": "12351:13:9"
											}
										]
									},
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "11724:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:9"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "11762:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:9"
									},
									"scope": 2578,
									"src": "11708:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "12608:174:9",
										"statements": [
											{
												"id": 2575,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:9",
												"statements": [
													{
														"assignments": [
															2550
														],
														"declarations": [
															{
																"constant": false,
																"id": 2550,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2575,
																"src": "12642:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2554,
														"initialValue": {
															"arguments": [
																{
																	"id": 2552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "12666:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2551,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2538,
																	2577
																],
																"referencedDeclaration": 2538,
																"src": "12659:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2555,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "12693:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1719",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2556,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2544,
																					"src": "12703:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2557,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1719,
																						"src": "12715:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1719_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1717,
																					"src": "12715:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1719",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2563,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2561,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2550,
																									"src": "12736:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2562,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2564,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2566,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2541,
																					"src": "12751:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2572,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2548,
														"id": 2574,
														"nodeType": "Return",
														"src": "12686:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12557:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1719",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2542,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1719,
														"src": "12557:8:9"
													},
													"referencedDeclaration": 1719,
													"src": "12557:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1719",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:9"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12599:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:9"
									},
									"scope": 2578,
									"src": "12526:256:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2579,
							"src": "202:12582:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2683
						]
					},
					"id": 2684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2581,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2683,
							"linearizedBaseContracts": [
								2683
							],
							"name": "SignedMath",
							"nameLocation": "223:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2598,
										"nodeType": "Block",
										"src": "375:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2591,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "392:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2592,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "396:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2595,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2586,
														"src": "404:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:10",
													"trueExpression": {
														"id": 2594,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "400:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2590,
												"id": 2597,
												"nodeType": "Return",
												"src": "385:20:10"
											}
										]
									},
									"documentation": {
										"id": 2582,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "324:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "334:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:10"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "367:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2588,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:10"
									},
									"scope": 2683,
									"src": "311:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "554:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2609,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "571:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2610,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "575:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2604,
														"src": "583:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:10",
													"trueExpression": {
														"id": 2612,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "579:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2608,
												"id": 2615,
												"nodeType": "Return",
												"src": "564:20:10"
											}
										]
									},
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "503:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2601,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "513:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2603,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:10"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "546:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2606,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:10"
									},
									"scope": 2683,
									"src": "490:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2660,
										"nodeType": "Block",
										"src": "796:162:10",
										"statements": [
											{
												"assignments": [
													2628
												],
												"declarations": [
													{
														"constant": false,
														"id": 2628,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2660,
														"src": "858:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2627,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2629,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "870:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2630,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "874:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2632,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2633,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2620,
																				"src": "881:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2634,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "885:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2636,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2639,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "910:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2647,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2628,
																						"src": "930:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2645,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2643,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2652,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2620,
																				"src": "944:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2653,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "948:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2655,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2659,
												"nodeType": "Return",
												"src": "903:48:10"
											}
										]
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "745:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2619,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "755:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2621,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:10"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "788:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2624,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:10"
									},
									"scope": 2683,
									"src": "728:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "1102:158:10",
										"statements": [
											{
												"id": 2680,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2671,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "1227:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:10",
																		"subExpression": {
																			"id": 2675,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2664,
																			"src": "1241:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:10",
																	"trueExpression": {
																		"id": 2674,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2664,
																		"src": "1236:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2669,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2668,
														"id": 2679,
														"nodeType": "Return",
														"src": "1212:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "1060:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2663,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:10"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "1093:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:10"
									},
									"scope": 2683,
									"src": "1047:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2684,
							"src": "215:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:10"
				},
				"id": 10
			}
		}
	}
}